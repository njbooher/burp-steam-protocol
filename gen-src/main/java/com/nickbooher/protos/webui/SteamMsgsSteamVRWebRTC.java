// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: service_steamvrwebrtc.proto
// Protobuf Java Version: 4.28.2

package com.nickbooher.protos.webui;

public final class SteamMsgsSteamVRWebRTC {
  private SteamMsgsSteamVRWebRTC() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      SteamMsgsSteamVRWebRTC.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CSteamVR_HeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:webui.CSteamVR_Header)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 type = 1 [(.webui.description) = "enum"];</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1 [(.webui.description) = "enum"];</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>optional uint32 id = 2;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>optional uint32 id = 2;</code>
     * @return The id.
     */
    int getId();
  }
  /**
   * Protobuf type {@code webui.CSteamVR_Header}
   */
  public static final class CSteamVR_Header extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:webui.CSteamVR_Header)
      CSteamVR_HeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CSteamVR_Header.class.getName());
    }
    // Use CSteamVR_Header.newBuilder() to construct.
    private CSteamVR_Header(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSteamVR_Header() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_Header_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_Header_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>optional int32 type = 1 [(.webui.description) = "enum"];</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 type = 1 [(.webui.description) = "enum"];</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_ = 0;
    /**
     * <code>optional uint32 id = 2;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, id_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, id_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header other = (com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (getType()
            != other.getType()) return false;
      }
      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code webui.CSteamVR_Header}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:webui.CSteamVR_Header)
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_HeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_Header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header.Builder.class);
      }

      // Construct using com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        id_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_Header_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header getDefaultInstanceForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header build() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header buildPartial() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header result = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header) {
          return mergeFrom((com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header other) {
        if (other == com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                id_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>optional int32 type = 1 [(.webui.description) = "enum"];</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 type = 1 [(.webui.description) = "enum"];</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1 [(.webui.description) = "enum"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1 [(.webui.description) = "enum"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>optional uint32 id = 2;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 id = 2;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>optional uint32 id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:webui.CSteamVR_Header)
    }

    // @@protoc_insertion_point(class_scope:webui.CSteamVR_Header)
    private static final com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header();
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSteamVR_Header>
        PARSER = new com.google.protobuf.AbstractParser<CSteamVR_Header>() {
      @java.lang.Override
      public CSteamVR_Header parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSteamVR_Header> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSteamVR_Header> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_Header getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSteamVR_WebRTC_Active_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:webui.CSteamVR_WebRTC_Active_Notification)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code webui.CSteamVR_WebRTC_Active_Notification}
   */
  public static final class CSteamVR_WebRTC_Active_Notification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:webui.CSteamVR_WebRTC_Active_Notification)
      CSteamVR_WebRTC_Active_NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CSteamVR_WebRTC_Active_Notification.class.getName());
    }
    // Use CSteamVR_WebRTC_Active_Notification.newBuilder() to construct.
    private CSteamVR_WebRTC_Active_Notification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSteamVR_WebRTC_Active_Notification() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Active_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Active_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification other = (com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code webui.CSteamVR_WebRTC_Active_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:webui.CSteamVR_WebRTC_Active_Notification)
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Active_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Active_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification.Builder.class);
      }

      // Construct using com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Active_Notification_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification getDefaultInstanceForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification build() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification buildPartial() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification result = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification) {
          return mergeFrom((com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification other) {
        if (other == com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:webui.CSteamVR_WebRTC_Active_Notification)
    }

    // @@protoc_insertion_point(class_scope:webui.CSteamVR_WebRTC_Active_Notification)
    private static final com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification();
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSteamVR_WebRTC_Active_Notification>
        PARSER = new com.google.protobuf.AbstractParser<CSteamVR_WebRTC_Active_Notification>() {
      @java.lang.Override
      public CSteamVR_WebRTC_Active_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSteamVR_WebRTC_Active_Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSteamVR_WebRTC_Active_Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Active_Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSteamVR_WebRTC_DataChannel_Close_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:webui.CSteamVR_WebRTC_DataChannel_Close_Notification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return The channelId.
     */
    int getChannelId();
  }
  /**
   * Protobuf type {@code webui.CSteamVR_WebRTC_DataChannel_Close_Notification}
   */
  public static final class CSteamVR_WebRTC_DataChannel_Close_Notification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:webui.CSteamVR_WebRTC_DataChannel_Close_Notification)
      CSteamVR_WebRTC_DataChannel_Close_NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CSteamVR_WebRTC_DataChannel_Close_Notification.class.getName());
    }
    // Use CSteamVR_WebRTC_DataChannel_Close_Notification.newBuilder() to construct.
    private CSteamVR_WebRTC_DataChannel_Close_Notification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSteamVR_WebRTC_DataChannel_Close_Notification() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_ = 0;
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, channelId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, channelId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification other = (com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code webui.CSteamVR_WebRTC_DataChannel_Close_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:webui.CSteamVR_WebRTC_DataChannel_Close_Notification)
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification.Builder.class);
      }

      // Construct using com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification getDefaultInstanceForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification build() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification buildPartial() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification result = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification) {
          return mergeFrom((com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification other) {
        if (other == com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int channelId_ ;
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(int value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:webui.CSteamVR_WebRTC_DataChannel_Close_Notification)
    }

    // @@protoc_insertion_point(class_scope:webui.CSteamVR_WebRTC_DataChannel_Close_Notification)
    private static final com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification();
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Close_Notification>
        PARSER = new com.google.protobuf.AbstractParser<CSteamVR_WebRTC_DataChannel_Close_Notification>() {
      @java.lang.Override
      public CSteamVR_WebRTC_DataChannel_Close_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Close_Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Close_Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Close_Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSteamVR_WebRTC_DataChannel_Error_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:webui.CSteamVR_WebRTC_DataChannel_Error_Notification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return The channelId.
     */
    int getChannelId();

    /**
     * <code>optional string reason = 2;</code>
     * @return Whether the reason field is set.
     */
    boolean hasReason();
    /**
     * <code>optional string reason = 2;</code>
     * @return The reason.
     */
    java.lang.String getReason();
    /**
     * <code>optional string reason = 2;</code>
     * @return The bytes for reason.
     */
    com.google.protobuf.ByteString
        getReasonBytes();
  }
  /**
   * Protobuf type {@code webui.CSteamVR_WebRTC_DataChannel_Error_Notification}
   */
  public static final class CSteamVR_WebRTC_DataChannel_Error_Notification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:webui.CSteamVR_WebRTC_DataChannel_Error_Notification)
      CSteamVR_WebRTC_DataChannel_Error_NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CSteamVR_WebRTC_DataChannel_Error_Notification.class.getName());
    }
    // Use CSteamVR_WebRTC_DataChannel_Error_Notification.newBuilder() to construct.
    private CSteamVR_WebRTC_DataChannel_Error_Notification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSteamVR_WebRTC_DataChannel_Error_Notification() {
      reason_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_ = 0;
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }

    public static final int REASON_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object reason_ = "";
    /**
     * <code>optional string reason = 2;</code>
     * @return Whether the reason field is set.
     */
    @java.lang.Override
    public boolean hasReason() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string reason = 2;</code>
     * @return The reason.
     */
    @java.lang.Override
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reason_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string reason = 2;</code>
     * @return The bytes for reason.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, reason_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, reason_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification other = (com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasReason() != other.hasReason()) return false;
      if (hasReason()) {
        if (!getReason()
            .equals(other.getReason())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelId();
      }
      if (hasReason()) {
        hash = (37 * hash) + REASON_FIELD_NUMBER;
        hash = (53 * hash) + getReason().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code webui.CSteamVR_WebRTC_DataChannel_Error_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:webui.CSteamVR_WebRTC_DataChannel_Error_Notification)
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification.Builder.class);
      }

      // Construct using com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0;
        reason_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification getDefaultInstanceForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification build() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification buildPartial() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification result = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.reason_ = reason_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification) {
          return mergeFrom((com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification other) {
        if (other == com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasReason()) {
          reason_ = other.reason_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                reason_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int channelId_ ;
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(int value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object reason_ = "";
      /**
       * <code>optional string reason = 2;</code>
       * @return Whether the reason field is set.
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string reason = 2;</code>
       * @return The reason.
       */
      public java.lang.String getReason() {
        java.lang.Object ref = reason_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            reason_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string reason = 2;</code>
       * @return The bytes for reason.
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        java.lang.Object ref = reason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string reason = 2;</code>
       * @param value The reason to set.
       * @return This builder for chaining.
       */
      public Builder setReason(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        reason_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional string reason = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearReason() {
        reason_ = getDefaultInstance().getReason();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>optional string reason = 2;</code>
       * @param value The bytes for reason to set.
       * @return This builder for chaining.
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        reason_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:webui.CSteamVR_WebRTC_DataChannel_Error_Notification)
    }

    // @@protoc_insertion_point(class_scope:webui.CSteamVR_WebRTC_DataChannel_Error_Notification)
    private static final com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification();
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Error_Notification>
        PARSER = new com.google.protobuf.AbstractParser<CSteamVR_WebRTC_DataChannel_Error_Notification>() {
      @java.lang.Override
      public CSteamVR_WebRTC_DataChannel_Error_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Error_Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Error_Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Error_Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSteamVR_WebRTC_DataChannel_Message_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:webui.CSteamVR_WebRTC_DataChannel_Message_Notification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return The channelId.
     */
    int getChannelId();

    /**
     * <code>optional bytes data = 2;</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <code>optional bytes data = 2;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code webui.CSteamVR_WebRTC_DataChannel_Message_Notification}
   */
  public static final class CSteamVR_WebRTC_DataChannel_Message_Notification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:webui.CSteamVR_WebRTC_DataChannel_Message_Notification)
      CSteamVR_WebRTC_DataChannel_Message_NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CSteamVR_WebRTC_DataChannel_Message_Notification.class.getName());
    }
    // Use CSteamVR_WebRTC_DataChannel_Message_Notification.newBuilder() to construct.
    private CSteamVR_WebRTC_DataChannel_Message_Notification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSteamVR_WebRTC_DataChannel_Message_Notification() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_ = 0;
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes data = 2;</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bytes data = 2;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, data_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification other = (com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelId();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code webui.CSteamVR_WebRTC_DataChannel_Message_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:webui.CSteamVR_WebRTC_DataChannel_Message_Notification)
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification.Builder.class);
      }

      // Construct using com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0;
        data_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification getDefaultInstanceForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification build() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification buildPartial() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification result = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.data_ = data_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification) {
          return mergeFrom((com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification other) {
        if (other == com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                data_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int channelId_ ;
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(int value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes data = 2;</code>
       * @return Whether the data field is set.
       */
      @java.lang.Override
      public boolean hasData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>optional bytes data = 2;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        data_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:webui.CSteamVR_WebRTC_DataChannel_Message_Notification)
    }

    // @@protoc_insertion_point(class_scope:webui.CSteamVR_WebRTC_DataChannel_Message_Notification)
    private static final com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification();
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Message_Notification>
        PARSER = new com.google.protobuf.AbstractParser<CSteamVR_WebRTC_DataChannel_Message_Notification>() {
      @java.lang.Override
      public CSteamVR_WebRTC_DataChannel_Message_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Message_Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Message_Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Message_Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSteamVR_WebRTC_DataChannel_Open_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:webui.CSteamVR_WebRTC_DataChannel_Open_Notification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return The channelId.
     */
    int getChannelId();
  }
  /**
   * Protobuf type {@code webui.CSteamVR_WebRTC_DataChannel_Open_Notification}
   */
  public static final class CSteamVR_WebRTC_DataChannel_Open_Notification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:webui.CSteamVR_WebRTC_DataChannel_Open_Notification)
      CSteamVR_WebRTC_DataChannel_Open_NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CSteamVR_WebRTC_DataChannel_Open_Notification.class.getName());
    }
    // Use CSteamVR_WebRTC_DataChannel_Open_Notification.newBuilder() to construct.
    private CSteamVR_WebRTC_DataChannel_Open_Notification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSteamVR_WebRTC_DataChannel_Open_Notification() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification.Builder.class);
    }

    private int bitField0_;
    public static final int CHANNEL_ID_FIELD_NUMBER = 1;
    private int channelId_ = 0;
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 channel_id = 1;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, channelId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, channelId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification other = (com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification) obj;

      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelId();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code webui.CSteamVR_WebRTC_DataChannel_Open_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:webui.CSteamVR_WebRTC_DataChannel_Open_Notification)
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification.Builder.class);
      }

      // Construct using com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        channelId_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification getDefaultInstanceForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification build() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification buildPartial() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification result = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification) {
          return mergeFrom((com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification other) {
        if (other == com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                channelId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int channelId_ ;
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(int value) {

        channelId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:webui.CSteamVR_WebRTC_DataChannel_Open_Notification)
    }

    // @@protoc_insertion_point(class_scope:webui.CSteamVR_WebRTC_DataChannel_Open_Notification)
    private static final com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification();
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Open_Notification>
        PARSER = new com.google.protobuf.AbstractParser<CSteamVR_WebRTC_DataChannel_Open_Notification>() {
      @java.lang.Override
      public CSteamVR_WebRTC_DataChannel_Open_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Open_Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSteamVR_WebRTC_DataChannel_Open_Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_DataChannel_Open_Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSteamVR_WebRTC_Inactive_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:webui.CSteamVR_WebRTC_Inactive_Notification)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code webui.CSteamVR_WebRTC_Inactive_Notification}
   */
  public static final class CSteamVR_WebRTC_Inactive_Notification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:webui.CSteamVR_WebRTC_Inactive_Notification)
      CSteamVR_WebRTC_Inactive_NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CSteamVR_WebRTC_Inactive_Notification.class.getName());
    }
    // Use CSteamVR_WebRTC_Inactive_Notification.newBuilder() to construct.
    private CSteamVR_WebRTC_Inactive_Notification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSteamVR_WebRTC_Inactive_Notification() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification other = (com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code webui.CSteamVR_WebRTC_Inactive_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:webui.CSteamVR_WebRTC_Inactive_Notification)
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification.Builder.class);
      }

      // Construct using com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification getDefaultInstanceForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification build() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification buildPartial() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification result = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification) {
          return mergeFrom((com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification other) {
        if (other == com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }

      // @@protoc_insertion_point(builder_scope:webui.CSteamVR_WebRTC_Inactive_Notification)
    }

    // @@protoc_insertion_point(class_scope:webui.CSteamVR_WebRTC_Inactive_Notification)
    private static final com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification();
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSteamVR_WebRTC_Inactive_Notification>
        PARSER = new com.google.protobuf.AbstractParser<CSteamVR_WebRTC_Inactive_Notification>() {
      @java.lang.Override
      public CSteamVR_WebRTC_Inactive_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSteamVR_WebRTC_Inactive_Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSteamVR_WebRTC_Inactive_Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_Inactive_Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CSteamVR_WebRTC_OnDataChannel_NotificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:webui.CSteamVR_WebRTC_OnDataChannel_Notification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 source_steamid = 1;</code>
     * @return Whether the sourceSteamid field is set.
     */
    boolean hasSourceSteamid();
    /**
     * <code>optional fixed64 source_steamid = 1;</code>
     * @return The sourceSteamid.
     */
    long getSourceSteamid();

    /**
     * <code>optional uint32 channel_id = 2;</code>
     * @return Whether the channelId field is set.
     */
    boolean hasChannelId();
    /**
     * <code>optional uint32 channel_id = 2;</code>
     * @return The channelId.
     */
    int getChannelId();

    /**
     * <code>optional string label = 3;</code>
     * @return Whether the label field is set.
     */
    boolean hasLabel();
    /**
     * <code>optional string label = 3;</code>
     * @return The label.
     */
    java.lang.String getLabel();
    /**
     * <code>optional string label = 3;</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();
  }
  /**
   * Protobuf type {@code webui.CSteamVR_WebRTC_OnDataChannel_Notification}
   */
  public static final class CSteamVR_WebRTC_OnDataChannel_Notification extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:webui.CSteamVR_WebRTC_OnDataChannel_Notification)
      CSteamVR_WebRTC_OnDataChannel_NotificationOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CSteamVR_WebRTC_OnDataChannel_Notification.class.getName());
    }
    // Use CSteamVR_WebRTC_OnDataChannel_Notification.newBuilder() to construct.
    private CSteamVR_WebRTC_OnDataChannel_Notification(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CSteamVR_WebRTC_OnDataChannel_Notification() {
      label_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification.Builder.class);
    }

    private int bitField0_;
    public static final int SOURCE_STEAMID_FIELD_NUMBER = 1;
    private long sourceSteamid_ = 0L;
    /**
     * <code>optional fixed64 source_steamid = 1;</code>
     * @return Whether the sourceSteamid field is set.
     */
    @java.lang.Override
    public boolean hasSourceSteamid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional fixed64 source_steamid = 1;</code>
     * @return The sourceSteamid.
     */
    @java.lang.Override
    public long getSourceSteamid() {
      return sourceSteamid_;
    }

    public static final int CHANNEL_ID_FIELD_NUMBER = 2;
    private int channelId_ = 0;
    /**
     * <code>optional uint32 channel_id = 2;</code>
     * @return Whether the channelId field is set.
     */
    @java.lang.Override
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 channel_id = 2;</code>
     * @return The channelId.
     */
    @java.lang.Override
    public int getChannelId() {
      return channelId_;
    }

    public static final int LABEL_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object label_ = "";
    /**
     * <code>optional string label = 3;</code>
     * @return Whether the label field is set.
     */
    @java.lang.Override
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string label = 3;</code>
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          label_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string label = 3;</code>
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed64(1, sourceSteamid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, channelId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, label_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(1, sourceSteamid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, channelId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, label_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification other = (com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification) obj;

      if (hasSourceSteamid() != other.hasSourceSteamid()) return false;
      if (hasSourceSteamid()) {
        if (getSourceSteamid()
            != other.getSourceSteamid()) return false;
      }
      if (hasChannelId() != other.hasChannelId()) return false;
      if (hasChannelId()) {
        if (getChannelId()
            != other.getChannelId()) return false;
      }
      if (hasLabel() != other.hasLabel()) return false;
      if (hasLabel()) {
        if (!getLabel()
            .equals(other.getLabel())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSourceSteamid()) {
        hash = (37 * hash) + SOURCE_STEAMID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSourceSteamid());
      }
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNEL_ID_FIELD_NUMBER;
        hash = (53 * hash) + getChannelId();
      }
      if (hasLabel()) {
        hash = (37 * hash) + LABEL_FIELD_NUMBER;
        hash = (53 * hash) + getLabel().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code webui.CSteamVR_WebRTC_OnDataChannel_Notification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:webui.CSteamVR_WebRTC_OnDataChannel_Notification)
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_NotificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification.class, com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification.Builder.class);
      }

      // Construct using com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sourceSteamid_ = 0L;
        channelId_ = 0;
        label_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification getDefaultInstanceForType() {
        return com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification build() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification buildPartial() {
        com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification result = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sourceSteamid_ = sourceSteamid_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.channelId_ = channelId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.label_ = label_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification) {
          return mergeFrom((com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification other) {
        if (other == com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification.getDefaultInstance()) return this;
        if (other.hasSourceSteamid()) {
          setSourceSteamid(other.getSourceSteamid());
        }
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasLabel()) {
          label_ = other.label_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                sourceSteamid_ = input.readFixed64();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 16: {
                channelId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                label_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long sourceSteamid_ ;
      /**
       * <code>optional fixed64 source_steamid = 1;</code>
       * @return Whether the sourceSteamid field is set.
       */
      @java.lang.Override
      public boolean hasSourceSteamid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed64 source_steamid = 1;</code>
       * @return The sourceSteamid.
       */
      @java.lang.Override
      public long getSourceSteamid() {
        return sourceSteamid_;
      }
      /**
       * <code>optional fixed64 source_steamid = 1;</code>
       * @param value The sourceSteamid to set.
       * @return This builder for chaining.
       */
      public Builder setSourceSteamid(long value) {

        sourceSteamid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 source_steamid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceSteamid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sourceSteamid_ = 0L;
        onChanged();
        return this;
      }

      private int channelId_ ;
      /**
       * <code>optional uint32 channel_id = 2;</code>
       * @return Whether the channelId field is set.
       */
      @java.lang.Override
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 channel_id = 2;</code>
       * @return The channelId.
       */
      @java.lang.Override
      public int getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint32 channel_id = 2;</code>
       * @param value The channelId to set.
       * @return This builder for chaining.
       */
      public Builder setChannelId(int value) {

        channelId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channel_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object label_ = "";
      /**
       * <code>optional string label = 3;</code>
       * @return Whether the label field is set.
       */
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string label = 3;</code>
       * @return The label.
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            label_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string label = 3;</code>
       * @return The bytes for label.
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string label = 3;</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        label_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string label = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        label_ = getDefaultInstance().getLabel();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string label = 3;</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        label_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:webui.CSteamVR_WebRTC_OnDataChannel_Notification)
    }

    // @@protoc_insertion_point(class_scope:webui.CSteamVR_WebRTC_OnDataChannel_Notification)
    private static final com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification();
    }

    public static com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CSteamVR_WebRTC_OnDataChannel_Notification>
        PARSER = new com.google.protobuf.AbstractParser<CSteamVR_WebRTC_OnDataChannel_Notification>() {
      @java.lang.Override
      public CSteamVR_WebRTC_OnDataChannel_Notification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CSteamVR_WebRTC_OnDataChannel_Notification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CSteamVR_WebRTC_OnDataChannel_Notification> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.webui.SteamMsgsSteamVRWebRTC.CSteamVR_WebRTC_OnDataChannel_Notification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_webui_CSteamVR_Header_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_webui_CSteamVR_Header_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_webui_CSteamVR_WebRTC_Active_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_webui_CSteamVR_WebRTC_Active_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033service_steamvrwebrtc.proto\022\005webui\032\021co" +
      "mmon_base.proto\"5\n\017CSteamVR_Header\022\026\n\004ty" +
      "pe\030\001 \001(\005B\010\202\265\030\004enum\022\n\n\002id\030\002 \001(\r\"%\n#CSteam" +
      "VR_WebRTC_Active_Notification\"D\n.CSteamV" +
      "R_WebRTC_DataChannel_Close_Notification\022" +
      "\022\n\nchannel_id\030\001 \001(\r\"T\n.CSteamVR_WebRTC_D" +
      "ataChannel_Error_Notification\022\022\n\nchannel" +
      "_id\030\001 \001(\r\022\016\n\006reason\030\002 \001(\t\"T\n0CSteamVR_We" +
      "bRTC_DataChannel_Message_Notification\022\022\n" +
      "\nchannel_id\030\001 \001(\r\022\014\n\004data\030\002 \001(\014\"C\n-CStea" +
      "mVR_WebRTC_DataChannel_Open_Notification" +
      "\022\022\n\nchannel_id\030\001 \001(\r\"\'\n%CSteamVR_WebRTC_" +
      "Inactive_Notification\"g\n*CSteamVR_WebRTC" +
      "_OnDataChannel_Notification\022\026\n\016source_st" +
      "eamid\030\001 \001(\006\022\022\n\nchannel_id\030\002 \001(\r\022\r\n\005label" +
      "\030\003 \001(\t2\316\005\n\rSteamVRWebRTC\022G\n\006Active\022*.web" +
      "ui.CSteamVR_WebRTC_Active_Notification\032\021" +
      ".webui.NoResponse\0223\n\006Header\022\026.webui.CSte" +
      "amVR_Header\032\021.webui.NoResponse\022K\n\010Inacti" +
      "ve\022,.webui.CSteamVR_WebRTC_Inactive_Noti" +
      "fication\032\021.webui.NoResponse\022c\n\027Notify_Da" +
      "taChannelClose\0225.webui.CSteamVR_WebRTC_D" +
      "ataChannel_Close_Notification\032\021.webui.No" +
      "Response\022c\n\027Notify_DataChannelError\0225.we" +
      "bui.CSteamVR_WebRTC_DataChannel_Error_No" +
      "tification\032\021.webui.NoResponse\022g\n\031Notify_" +
      "DataChannelMessage\0227.webui.CSteamVR_WebR" +
      "TC_DataChannel_Message_Notification\032\021.we" +
      "bui.NoResponse\022a\n\026Notify_DataChannelOpen" +
      "\0224.webui.CSteamVR_WebRTC_DataChannel_Ope" +
      "n_Notification\032\021.webui.NoResponse\022\\\n\024Not" +
      "ify_OnDataChannel\0221.webui.CSteamVR_WebRT" +
      "C_OnDataChannel_Notification\032\021.webui.NoR" +
      "esponseB5\n\033com.nickbooher.protos.webuiB\026" +
      "SteamMsgsSteamVRWebRTC"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.nickbooher.protos.webui.SteamMsgCommonBase.getDescriptor(),
        });
    internal_static_webui_CSteamVR_Header_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_webui_CSteamVR_Header_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_webui_CSteamVR_Header_descriptor,
        new java.lang.String[] { "Type", "Id", });
    internal_static_webui_CSteamVR_WebRTC_Active_Notification_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_webui_CSteamVR_WebRTC_Active_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_webui_CSteamVR_WebRTC_Active_Notification_descriptor,
        new java.lang.String[] { });
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_webui_CSteamVR_WebRTC_DataChannel_Close_Notification_descriptor,
        new java.lang.String[] { "ChannelId", });
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_webui_CSteamVR_WebRTC_DataChannel_Error_Notification_descriptor,
        new java.lang.String[] { "ChannelId", "Reason", });
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_webui_CSteamVR_WebRTC_DataChannel_Message_Notification_descriptor,
        new java.lang.String[] { "ChannelId", "Data", });
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_webui_CSteamVR_WebRTC_DataChannel_Open_Notification_descriptor,
        new java.lang.String[] { "ChannelId", });
    internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_webui_CSteamVR_WebRTC_Inactive_Notification_descriptor,
        new java.lang.String[] { });
    internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_webui_CSteamVR_WebRTC_OnDataChannel_Notification_descriptor,
        new java.lang.String[] { "SourceSteamid", "ChannelId", "Label", });
    descriptor.resolveAllFeaturesImmutable();
    com.nickbooher.protos.webui.SteamMsgCommonBase.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.nickbooher.protos.webui.SteamMsgCommonBase.description);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
