// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steamnetworkingsockets_messages_certs.proto
// Protobuf Java Version: 4.28.2

package com.nickbooher.protos.gc.dota;

public final class MsgSteamNetworkingSocketsCerts {
  private MsgSteamNetworkingSocketsCerts() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      MsgSteamNetworkingSocketsCerts.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dota2.CMsgSteamNetworkingIdentityLegacyBinary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed64 steam_id = 16;</code>
     * @return Whether the steamId field is set.
     */
    boolean hasSteamId();
    /**
     * <code>optional fixed64 steam_id = 16;</code>
     * @return The steamId.
     */
    long getSteamId();

    /**
     * <code>optional bytes generic_bytes = 2;</code>
     * @return Whether the genericBytes field is set.
     */
    boolean hasGenericBytes();
    /**
     * <code>optional bytes generic_bytes = 2;</code>
     * @return The genericBytes.
     */
    com.google.protobuf.ByteString getGenericBytes();

    /**
     * <code>optional string generic_string = 3;</code>
     * @return Whether the genericString field is set.
     */
    boolean hasGenericString();
    /**
     * <code>optional string generic_string = 3;</code>
     * @return The genericString.
     */
    java.lang.String getGenericString();
    /**
     * <code>optional string generic_string = 3;</code>
     * @return The bytes for genericString.
     */
    com.google.protobuf.ByteString
        getGenericStringBytes();

    /**
     * <code>optional bytes ipv6_and_port = 4;</code>
     * @return Whether the ipv6AndPort field is set.
     */
    boolean hasIpv6AndPort();
    /**
     * <code>optional bytes ipv6_and_port = 4;</code>
     * @return The ipv6AndPort.
     */
    com.google.protobuf.ByteString getIpv6AndPort();
  }
  /**
   * Protobuf type {@code dota2.CMsgSteamNetworkingIdentityLegacyBinary}
   */
  public static final class CMsgSteamNetworkingIdentityLegacyBinary extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dota2.CMsgSteamNetworkingIdentityLegacyBinary)
      CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CMsgSteamNetworkingIdentityLegacyBinary.class.getName());
    }
    // Use CMsgSteamNetworkingIdentityLegacyBinary.newBuilder() to construct.
    private CMsgSteamNetworkingIdentityLegacyBinary(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamNetworkingIdentityLegacyBinary() {
      genericBytes_ = com.google.protobuf.ByteString.EMPTY;
      genericString_ = "";
      ipv6AndPort_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.class, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.Builder.class);
    }

    private int bitField0_;
    public static final int STEAM_ID_FIELD_NUMBER = 16;
    private long steamId_ = 0L;
    /**
     * <code>optional fixed64 steam_id = 16;</code>
     * @return Whether the steamId field is set.
     */
    @java.lang.Override
    public boolean hasSteamId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional fixed64 steam_id = 16;</code>
     * @return The steamId.
     */
    @java.lang.Override
    public long getSteamId() {
      return steamId_;
    }

    public static final int GENERIC_BYTES_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString genericBytes_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes generic_bytes = 2;</code>
     * @return Whether the genericBytes field is set.
     */
    @java.lang.Override
    public boolean hasGenericBytes() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bytes generic_bytes = 2;</code>
     * @return The genericBytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getGenericBytes() {
      return genericBytes_;
    }

    public static final int GENERIC_STRING_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object genericString_ = "";
    /**
     * <code>optional string generic_string = 3;</code>
     * @return Whether the genericString field is set.
     */
    @java.lang.Override
    public boolean hasGenericString() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string generic_string = 3;</code>
     * @return The genericString.
     */
    @java.lang.Override
    public java.lang.String getGenericString() {
      java.lang.Object ref = genericString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          genericString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string generic_string = 3;</code>
     * @return The bytes for genericString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGenericStringBytes() {
      java.lang.Object ref = genericString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        genericString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IPV6_AND_PORT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString ipv6AndPort_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes ipv6_and_port = 4;</code>
     * @return Whether the ipv6AndPort field is set.
     */
    @java.lang.Override
    public boolean hasIpv6AndPort() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bytes ipv6_and_port = 4;</code>
     * @return The ipv6AndPort.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getIpv6AndPort() {
      return ipv6AndPort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, genericBytes_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, genericString_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(4, ipv6AndPort_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed64(16, steamId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, genericBytes_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, genericString_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, ipv6AndPort_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(16, steamId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary other = (com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary) obj;

      if (hasSteamId() != other.hasSteamId()) return false;
      if (hasSteamId()) {
        if (getSteamId()
            != other.getSteamId()) return false;
      }
      if (hasGenericBytes() != other.hasGenericBytes()) return false;
      if (hasGenericBytes()) {
        if (!getGenericBytes()
            .equals(other.getGenericBytes())) return false;
      }
      if (hasGenericString() != other.hasGenericString()) return false;
      if (hasGenericString()) {
        if (!getGenericString()
            .equals(other.getGenericString())) return false;
      }
      if (hasIpv6AndPort() != other.hasIpv6AndPort()) return false;
      if (hasIpv6AndPort()) {
        if (!getIpv6AndPort()
            .equals(other.getIpv6AndPort())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSteamId()) {
        hash = (37 * hash) + STEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamId());
      }
      if (hasGenericBytes()) {
        hash = (37 * hash) + GENERIC_BYTES_FIELD_NUMBER;
        hash = (53 * hash) + getGenericBytes().hashCode();
      }
      if (hasGenericString()) {
        hash = (37 * hash) + GENERIC_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getGenericString().hashCode();
      }
      if (hasIpv6AndPort()) {
        hash = (37 * hash) + IPV6_AND_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getIpv6AndPort().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dota2.CMsgSteamNetworkingIdentityLegacyBinary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dota2.CMsgSteamNetworkingIdentityLegacyBinary)
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.class, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.Builder.class);
      }

      // Construct using com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        steamId_ = 0L;
        genericBytes_ = com.google.protobuf.ByteString.EMPTY;
        genericString_ = "";
        ipv6AndPort_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary getDefaultInstanceForType() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary build() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary buildPartial() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary result = new com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.steamId_ = steamId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.genericBytes_ = genericBytes_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.genericString_ = genericString_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ipv6AndPort_ = ipv6AndPort_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary) {
          return mergeFrom((com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary other) {
        if (other == com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.getDefaultInstance()) return this;
        if (other.hasSteamId()) {
          setSteamId(other.getSteamId());
        }
        if (other.hasGenericBytes()) {
          setGenericBytes(other.getGenericBytes());
        }
        if (other.hasGenericString()) {
          genericString_ = other.genericString_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasIpv6AndPort()) {
          setIpv6AndPort(other.getIpv6AndPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                genericBytes_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                genericString_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                ipv6AndPort_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 129: {
                steamId_ = input.readFixed64();
                bitField0_ |= 0x00000001;
                break;
              } // case 129
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long steamId_ ;
      /**
       * <code>optional fixed64 steam_id = 16;</code>
       * @return Whether the steamId field is set.
       */
      @java.lang.Override
      public boolean hasSteamId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional fixed64 steam_id = 16;</code>
       * @return The steamId.
       */
      @java.lang.Override
      public long getSteamId() {
        return steamId_;
      }
      /**
       * <code>optional fixed64 steam_id = 16;</code>
       * @param value The steamId to set.
       * @return This builder for chaining.
       */
      public Builder setSteamId(long value) {

        steamId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steam_id = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        steamId_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString genericBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes generic_bytes = 2;</code>
       * @return Whether the genericBytes field is set.
       */
      @java.lang.Override
      public boolean hasGenericBytes() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bytes generic_bytes = 2;</code>
       * @return The genericBytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getGenericBytes() {
        return genericBytes_;
      }
      /**
       * <code>optional bytes generic_bytes = 2;</code>
       * @param value The genericBytes to set.
       * @return This builder for chaining.
       */
      public Builder setGenericBytes(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        genericBytes_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes generic_bytes = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGenericBytes() {
        bitField0_ = (bitField0_ & ~0x00000002);
        genericBytes_ = getDefaultInstance().getGenericBytes();
        onChanged();
        return this;
      }

      private java.lang.Object genericString_ = "";
      /**
       * <code>optional string generic_string = 3;</code>
       * @return Whether the genericString field is set.
       */
      public boolean hasGenericString() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string generic_string = 3;</code>
       * @return The genericString.
       */
      public java.lang.String getGenericString() {
        java.lang.Object ref = genericString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            genericString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string generic_string = 3;</code>
       * @return The bytes for genericString.
       */
      public com.google.protobuf.ByteString
          getGenericStringBytes() {
        java.lang.Object ref = genericString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          genericString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string generic_string = 3;</code>
       * @param value The genericString to set.
       * @return This builder for chaining.
       */
      public Builder setGenericString(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        genericString_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string generic_string = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearGenericString() {
        genericString_ = getDefaultInstance().getGenericString();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string generic_string = 3;</code>
       * @param value The bytes for genericString to set.
       * @return This builder for chaining.
       */
      public Builder setGenericStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        genericString_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString ipv6AndPort_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes ipv6_and_port = 4;</code>
       * @return Whether the ipv6AndPort field is set.
       */
      @java.lang.Override
      public boolean hasIpv6AndPort() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bytes ipv6_and_port = 4;</code>
       * @return The ipv6AndPort.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getIpv6AndPort() {
        return ipv6AndPort_;
      }
      /**
       * <code>optional bytes ipv6_and_port = 4;</code>
       * @param value The ipv6AndPort to set.
       * @return This builder for chaining.
       */
      public Builder setIpv6AndPort(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ipv6AndPort_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes ipv6_and_port = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpv6AndPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ipv6AndPort_ = getDefaultInstance().getIpv6AndPort();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dota2.CMsgSteamNetworkingIdentityLegacyBinary)
    }

    // @@protoc_insertion_point(class_scope:dota2.CMsgSteamNetworkingIdentityLegacyBinary)
    private static final com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary();
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamNetworkingIdentityLegacyBinary>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamNetworkingIdentityLegacyBinary>() {
      @java.lang.Override
      public CMsgSteamNetworkingIdentityLegacyBinary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamNetworkingIdentityLegacyBinary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamNetworkingIdentityLegacyBinary> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamDatagramCertificateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dota2.CMsgSteamDatagramCertificate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
     * @return Whether the keyType field is set.
     */
    boolean hasKeyType();
    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
     * @return The keyType.
     */
    com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType getKeyType();

    /**
     * <code>optional bytes key_data = 2;</code>
     * @return Whether the keyData field is set.
     */
    boolean hasKeyData();
    /**
     * <code>optional bytes key_data = 2;</code>
     * @return The keyData.
     */
    com.google.protobuf.ByteString getKeyData();

    /**
     * <code>optional fixed64 legacy_steam_id = 4;</code>
     * @return Whether the legacySteamId field is set.
     */
    boolean hasLegacySteamId();
    /**
     * <code>optional fixed64 legacy_steam_id = 4;</code>
     * @return The legacySteamId.
     */
    long getLegacySteamId();

    /**
     * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
     * @return Whether the legacyIdentityBinary field is set.
     */
    boolean hasLegacyIdentityBinary();
    /**
     * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
     * @return The legacyIdentityBinary.
     */
    com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary getLegacyIdentityBinary();
    /**
     * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
     */
    com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder getLegacyIdentityBinaryOrBuilder();

    /**
     * <code>optional string identity_string = 12;</code>
     * @return Whether the identityString field is set.
     */
    boolean hasIdentityString();
    /**
     * <code>optional string identity_string = 12;</code>
     * @return The identityString.
     */
    java.lang.String getIdentityString();
    /**
     * <code>optional string identity_string = 12;</code>
     * @return The bytes for identityString.
     */
    com.google.protobuf.ByteString
        getIdentityStringBytes();

    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     * @return A list containing the gameserverDatacenterIds.
     */
    java.util.List<java.lang.Integer> getGameserverDatacenterIdsList();
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     * @return The count of gameserverDatacenterIds.
     */
    int getGameserverDatacenterIdsCount();
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     * @param index The index of the element to return.
     * @return The gameserverDatacenterIds at the given index.
     */
    int getGameserverDatacenterIds(int index);

    /**
     * <code>optional fixed32 time_created = 8;</code>
     * @return Whether the timeCreated field is set.
     */
    boolean hasTimeCreated();
    /**
     * <code>optional fixed32 time_created = 8;</code>
     * @return The timeCreated.
     */
    int getTimeCreated();

    /**
     * <code>optional fixed32 time_expiry = 9;</code>
     * @return Whether the timeExpiry field is set.
     */
    boolean hasTimeExpiry();
    /**
     * <code>optional fixed32 time_expiry = 9;</code>
     * @return The timeExpiry.
     */
    int getTimeExpiry();

    /**
     * <code>repeated uint32 app_ids = 10;</code>
     * @return A list containing the appIds.
     */
    java.util.List<java.lang.Integer> getAppIdsList();
    /**
     * <code>repeated uint32 app_ids = 10;</code>
     * @return The count of appIds.
     */
    int getAppIdsCount();
    /**
     * <code>repeated uint32 app_ids = 10;</code>
     * @param index The index of the element to return.
     * @return The appIds at the given index.
     */
    int getAppIds(int index);

    /**
     * <code>repeated string ip_addresses = 13;</code>
     * @return A list containing the ipAddresses.
     */
    java.util.List<java.lang.String>
        getIpAddressesList();
    /**
     * <code>repeated string ip_addresses = 13;</code>
     * @return The count of ipAddresses.
     */
    int getIpAddressesCount();
    /**
     * <code>repeated string ip_addresses = 13;</code>
     * @param index The index of the element to return.
     * @return The ipAddresses at the given index.
     */
    java.lang.String getIpAddresses(int index);
    /**
     * <code>repeated string ip_addresses = 13;</code>
     * @param index The index of the value to return.
     * @return The bytes of the ipAddresses at the given index.
     */
    com.google.protobuf.ByteString
        getIpAddressesBytes(int index);
  }
  /**
   * Protobuf type {@code dota2.CMsgSteamDatagramCertificate}
   */
  public static final class CMsgSteamDatagramCertificate extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dota2.CMsgSteamDatagramCertificate)
      CMsgSteamDatagramCertificateOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CMsgSteamDatagramCertificate.class.getName());
    }
    // Use CMsgSteamDatagramCertificate.newBuilder() to construct.
    private CMsgSteamDatagramCertificate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamDatagramCertificate() {
      keyType_ = 0;
      keyData_ = com.google.protobuf.ByteString.EMPTY;
      identityString_ = "";
      gameserverDatacenterIds_ = emptyIntList();
      appIds_ = emptyIntList();
      ipAddresses_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.class, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.Builder.class);
    }

    /**
     * Protobuf enum {@code dota2.CMsgSteamDatagramCertificate.EKeyType}
     */
    public enum EKeyType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INVALID = 0;</code>
       */
      INVALID(0),
      /**
       * <code>ED25519 = 1;</code>
       */
      ED25519(1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          EKeyType.class.getName());
      }
      /**
       * <code>INVALID = 0;</code>
       */
      public static final int INVALID_VALUE = 0;
      /**
       * <code>ED25519 = 1;</code>
       */
      public static final int ED25519_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EKeyType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EKeyType forNumber(int value) {
        switch (value) {
          case 0: return INVALID;
          case 1: return ED25519;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EKeyType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EKeyType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EKeyType>() {
              public EKeyType findValueByNumber(int number) {
                return EKeyType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.getDescriptor().getEnumTypes().get(0);
      }

      private static final EKeyType[] VALUES = values();

      public static EKeyType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EKeyType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:dota2.CMsgSteamDatagramCertificate.EKeyType)
    }

    private int bitField0_;
    public static final int KEY_TYPE_FIELD_NUMBER = 1;
    private int keyType_ = 0;
    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
     * @return Whether the keyType field is set.
     */
    @java.lang.Override public boolean hasKeyType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
     * @return The keyType.
     */
    @java.lang.Override public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType getKeyType() {
      com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType result = com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType.forNumber(keyType_);
      return result == null ? com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType.INVALID : result;
    }

    public static final int KEY_DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString keyData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes key_data = 2;</code>
     * @return Whether the keyData field is set.
     */
    @java.lang.Override
    public boolean hasKeyData() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bytes key_data = 2;</code>
     * @return The keyData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyData() {
      return keyData_;
    }

    public static final int LEGACY_STEAM_ID_FIELD_NUMBER = 4;
    private long legacySteamId_ = 0L;
    /**
     * <code>optional fixed64 legacy_steam_id = 4;</code>
     * @return Whether the legacySteamId field is set.
     */
    @java.lang.Override
    public boolean hasLegacySteamId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional fixed64 legacy_steam_id = 4;</code>
     * @return The legacySteamId.
     */
    @java.lang.Override
    public long getLegacySteamId() {
      return legacySteamId_;
    }

    public static final int LEGACY_IDENTITY_BINARY_FIELD_NUMBER = 11;
    private com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary legacyIdentityBinary_;
    /**
     * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
     * @return Whether the legacyIdentityBinary field is set.
     */
    @java.lang.Override
    public boolean hasLegacyIdentityBinary() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
     * @return The legacyIdentityBinary.
     */
    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary getLegacyIdentityBinary() {
      return legacyIdentityBinary_ == null ? com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.getDefaultInstance() : legacyIdentityBinary_;
    }
    /**
     * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
     */
    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder getLegacyIdentityBinaryOrBuilder() {
      return legacyIdentityBinary_ == null ? com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.getDefaultInstance() : legacyIdentityBinary_;
    }

    public static final int IDENTITY_STRING_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private volatile java.lang.Object identityString_ = "";
    /**
     * <code>optional string identity_string = 12;</code>
     * @return Whether the identityString field is set.
     */
    @java.lang.Override
    public boolean hasIdentityString() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional string identity_string = 12;</code>
     * @return The identityString.
     */
    @java.lang.Override
    public java.lang.String getIdentityString() {
      java.lang.Object ref = identityString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          identityString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string identity_string = 12;</code>
     * @return The bytes for identityString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdentityStringBytes() {
      java.lang.Object ref = identityString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        identityString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GAMESERVER_DATACENTER_IDS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList gameserverDatacenterIds_ =
        emptyIntList();
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     * @return A list containing the gameserverDatacenterIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getGameserverDatacenterIdsList() {
      return gameserverDatacenterIds_;
    }
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     * @return The count of gameserverDatacenterIds.
     */
    public int getGameserverDatacenterIdsCount() {
      return gameserverDatacenterIds_.size();
    }
    /**
     * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
     * @param index The index of the element to return.
     * @return The gameserverDatacenterIds at the given index.
     */
    public int getGameserverDatacenterIds(int index) {
      return gameserverDatacenterIds_.getInt(index);
    }

    public static final int TIME_CREATED_FIELD_NUMBER = 8;
    private int timeCreated_ = 0;
    /**
     * <code>optional fixed32 time_created = 8;</code>
     * @return Whether the timeCreated field is set.
     */
    @java.lang.Override
    public boolean hasTimeCreated() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional fixed32 time_created = 8;</code>
     * @return The timeCreated.
     */
    @java.lang.Override
    public int getTimeCreated() {
      return timeCreated_;
    }

    public static final int TIME_EXPIRY_FIELD_NUMBER = 9;
    private int timeExpiry_ = 0;
    /**
     * <code>optional fixed32 time_expiry = 9;</code>
     * @return Whether the timeExpiry field is set.
     */
    @java.lang.Override
    public boolean hasTimeExpiry() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional fixed32 time_expiry = 9;</code>
     * @return The timeExpiry.
     */
    @java.lang.Override
    public int getTimeExpiry() {
      return timeExpiry_;
    }

    public static final int APP_IDS_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList appIds_ =
        emptyIntList();
    /**
     * <code>repeated uint32 app_ids = 10;</code>
     * @return A list containing the appIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAppIdsList() {
      return appIds_;
    }
    /**
     * <code>repeated uint32 app_ids = 10;</code>
     * @return The count of appIds.
     */
    public int getAppIdsCount() {
      return appIds_.size();
    }
    /**
     * <code>repeated uint32 app_ids = 10;</code>
     * @param index The index of the element to return.
     * @return The appIds at the given index.
     */
    public int getAppIds(int index) {
      return appIds_.getInt(index);
    }

    public static final int IP_ADDRESSES_FIELD_NUMBER = 13;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList ipAddresses_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string ip_addresses = 13;</code>
     * @return A list containing the ipAddresses.
     */
    public com.google.protobuf.ProtocolStringList
        getIpAddressesList() {
      return ipAddresses_;
    }
    /**
     * <code>repeated string ip_addresses = 13;</code>
     * @return The count of ipAddresses.
     */
    public int getIpAddressesCount() {
      return ipAddresses_.size();
    }
    /**
     * <code>repeated string ip_addresses = 13;</code>
     * @param index The index of the element to return.
     * @return The ipAddresses at the given index.
     */
    public java.lang.String getIpAddresses(int index) {
      return ipAddresses_.get(index);
    }
    /**
     * <code>repeated string ip_addresses = 13;</code>
     * @param index The index of the value to return.
     * @return The bytes of the ipAddresses at the given index.
     */
    public com.google.protobuf.ByteString
        getIpAddressesBytes(int index) {
      return ipAddresses_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, keyType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, keyData_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFixed64(4, legacySteamId_);
      }
      for (int i = 0; i < gameserverDatacenterIds_.size(); i++) {
        output.writeFixed32(5, gameserverDatacenterIds_.getInt(i));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFixed32(8, timeCreated_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFixed32(9, timeExpiry_);
      }
      for (int i = 0; i < appIds_.size(); i++) {
        output.writeUInt32(10, appIds_.getInt(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(11, getLegacyIdentityBinary());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 12, identityString_);
      }
      for (int i = 0; i < ipAddresses_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 13, ipAddresses_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, keyType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, keyData_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(4, legacySteamId_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getGameserverDatacenterIdsList().size();
        size += dataSize;
        size += 1 * getGameserverDatacenterIdsList().size();
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, timeCreated_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(9, timeExpiry_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < appIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(appIds_.getInt(i));
        }
        size += dataSize;
        size += 1 * getAppIdsList().size();
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getLegacyIdentityBinary());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(12, identityString_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ipAddresses_.size(); i++) {
          dataSize += computeStringSizeNoTag(ipAddresses_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getIpAddressesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate other = (com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate) obj;

      if (hasKeyType() != other.hasKeyType()) return false;
      if (hasKeyType()) {
        if (keyType_ != other.keyType_) return false;
      }
      if (hasKeyData() != other.hasKeyData()) return false;
      if (hasKeyData()) {
        if (!getKeyData()
            .equals(other.getKeyData())) return false;
      }
      if (hasLegacySteamId() != other.hasLegacySteamId()) return false;
      if (hasLegacySteamId()) {
        if (getLegacySteamId()
            != other.getLegacySteamId()) return false;
      }
      if (hasLegacyIdentityBinary() != other.hasLegacyIdentityBinary()) return false;
      if (hasLegacyIdentityBinary()) {
        if (!getLegacyIdentityBinary()
            .equals(other.getLegacyIdentityBinary())) return false;
      }
      if (hasIdentityString() != other.hasIdentityString()) return false;
      if (hasIdentityString()) {
        if (!getIdentityString()
            .equals(other.getIdentityString())) return false;
      }
      if (!getGameserverDatacenterIdsList()
          .equals(other.getGameserverDatacenterIdsList())) return false;
      if (hasTimeCreated() != other.hasTimeCreated()) return false;
      if (hasTimeCreated()) {
        if (getTimeCreated()
            != other.getTimeCreated()) return false;
      }
      if (hasTimeExpiry() != other.hasTimeExpiry()) return false;
      if (hasTimeExpiry()) {
        if (getTimeExpiry()
            != other.getTimeExpiry()) return false;
      }
      if (!getAppIdsList()
          .equals(other.getAppIdsList())) return false;
      if (!getIpAddressesList()
          .equals(other.getIpAddressesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyType()) {
        hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + keyType_;
      }
      if (hasKeyData()) {
        hash = (37 * hash) + KEY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getKeyData().hashCode();
      }
      if (hasLegacySteamId()) {
        hash = (37 * hash) + LEGACY_STEAM_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLegacySteamId());
      }
      if (hasLegacyIdentityBinary()) {
        hash = (37 * hash) + LEGACY_IDENTITY_BINARY_FIELD_NUMBER;
        hash = (53 * hash) + getLegacyIdentityBinary().hashCode();
      }
      if (hasIdentityString()) {
        hash = (37 * hash) + IDENTITY_STRING_FIELD_NUMBER;
        hash = (53 * hash) + getIdentityString().hashCode();
      }
      if (getGameserverDatacenterIdsCount() > 0) {
        hash = (37 * hash) + GAMESERVER_DATACENTER_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getGameserverDatacenterIdsList().hashCode();
      }
      if (hasTimeCreated()) {
        hash = (37 * hash) + TIME_CREATED_FIELD_NUMBER;
        hash = (53 * hash) + getTimeCreated();
      }
      if (hasTimeExpiry()) {
        hash = (37 * hash) + TIME_EXPIRY_FIELD_NUMBER;
        hash = (53 * hash) + getTimeExpiry();
      }
      if (getAppIdsCount() > 0) {
        hash = (37 * hash) + APP_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getAppIdsList().hashCode();
      }
      if (getIpAddressesCount() > 0) {
        hash = (37 * hash) + IP_ADDRESSES_FIELD_NUMBER;
        hash = (53 * hash) + getIpAddressesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dota2.CMsgSteamDatagramCertificate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dota2.CMsgSteamDatagramCertificate)
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.class, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.Builder.class);
      }

      // Construct using com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getLegacyIdentityBinaryFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        keyType_ = 0;
        keyData_ = com.google.protobuf.ByteString.EMPTY;
        legacySteamId_ = 0L;
        legacyIdentityBinary_ = null;
        if (legacyIdentityBinaryBuilder_ != null) {
          legacyIdentityBinaryBuilder_.dispose();
          legacyIdentityBinaryBuilder_ = null;
        }
        identityString_ = "";
        gameserverDatacenterIds_ = emptyIntList();
        timeCreated_ = 0;
        timeExpiry_ = 0;
        appIds_ = emptyIntList();
        ipAddresses_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificate_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate getDefaultInstanceForType() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate build() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate buildPartial() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate result = new com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.keyType_ = keyType_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.keyData_ = keyData_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.legacySteamId_ = legacySteamId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.legacyIdentityBinary_ = legacyIdentityBinaryBuilder_ == null
              ? legacyIdentityBinary_
              : legacyIdentityBinaryBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.identityString_ = identityString_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          gameserverDatacenterIds_.makeImmutable();
          result.gameserverDatacenterIds_ = gameserverDatacenterIds_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.timeCreated_ = timeCreated_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.timeExpiry_ = timeExpiry_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          appIds_.makeImmutable();
          result.appIds_ = appIds_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          ipAddresses_.makeImmutable();
          result.ipAddresses_ = ipAddresses_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate) {
          return mergeFrom((com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate other) {
        if (other == com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.getDefaultInstance()) return this;
        if (other.hasKeyType()) {
          setKeyType(other.getKeyType());
        }
        if (other.hasKeyData()) {
          setKeyData(other.getKeyData());
        }
        if (other.hasLegacySteamId()) {
          setLegacySteamId(other.getLegacySteamId());
        }
        if (other.hasLegacyIdentityBinary()) {
          mergeLegacyIdentityBinary(other.getLegacyIdentityBinary());
        }
        if (other.hasIdentityString()) {
          identityString_ = other.identityString_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (!other.gameserverDatacenterIds_.isEmpty()) {
          if (gameserverDatacenterIds_.isEmpty()) {
            gameserverDatacenterIds_ = other.gameserverDatacenterIds_;
            gameserverDatacenterIds_.makeImmutable();
            bitField0_ |= 0x00000020;
          } else {
            ensureGameserverDatacenterIdsIsMutable();
            gameserverDatacenterIds_.addAll(other.gameserverDatacenterIds_);
          }
          onChanged();
        }
        if (other.hasTimeCreated()) {
          setTimeCreated(other.getTimeCreated());
        }
        if (other.hasTimeExpiry()) {
          setTimeExpiry(other.getTimeExpiry());
        }
        if (!other.appIds_.isEmpty()) {
          if (appIds_.isEmpty()) {
            appIds_ = other.appIds_;
            appIds_.makeImmutable();
            bitField0_ |= 0x00000100;
          } else {
            ensureAppIdsIsMutable();
            appIds_.addAll(other.appIds_);
          }
          onChanged();
        }
        if (!other.ipAddresses_.isEmpty()) {
          if (ipAddresses_.isEmpty()) {
            ipAddresses_ = other.ipAddresses_;
            bitField0_ |= 0x00000200;
          } else {
            ensureIpAddressesIsMutable();
            ipAddresses_.addAll(other.ipAddresses_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType tmpValue =
                    com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  keyType_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                keyData_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 33: {
                legacySteamId_ = input.readFixed64();
                bitField0_ |= 0x00000004;
                break;
              } // case 33
              case 45: {
                int v = input.readFixed32();
                ensureGameserverDatacenterIdsIsMutable();
                gameserverDatacenterIds_.addInt(v);
                break;
              } // case 45
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                int alloc = length > 4096 ? 4096 : length;
                ensureGameserverDatacenterIdsIsMutable(alloc / 4);
                while (input.getBytesUntilLimit() > 0) {
                  gameserverDatacenterIds_.addInt(input.readFixed32());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 69: {
                timeCreated_ = input.readFixed32();
                bitField0_ |= 0x00000040;
                break;
              } // case 69
              case 77: {
                timeExpiry_ = input.readFixed32();
                bitField0_ |= 0x00000080;
                break;
              } // case 77
              case 80: {
                int v = input.readUInt32();
                ensureAppIdsIsMutable();
                appIds_.addInt(v);
                break;
              } // case 80
              case 82: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAppIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  appIds_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 82
              case 90: {
                input.readMessage(
                    getLegacyIdentityBinaryFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 90
              case 98: {
                identityString_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 98
              case 106: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureIpAddressesIsMutable();
                ipAddresses_.add(bs);
                break;
              } // case 106
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int keyType_ = 0;
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
       * @return Whether the keyType field is set.
       */
      @java.lang.Override public boolean hasKeyType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
       * @return The keyType.
       */
      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType getKeyType() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType result = com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType.forNumber(keyType_);
        return result == null ? com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType.INVALID : result;
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
       * @param value The keyType to set.
       * @return This builder for chaining.
       */
      public Builder setKeyType(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.EKeyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        keyType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate.EKeyType key_type = 1 [default = INVALID];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        keyType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString keyData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes key_data = 2;</code>
       * @return Whether the keyData field is set.
       */
      @java.lang.Override
      public boolean hasKeyData() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bytes key_data = 2;</code>
       * @return The keyData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getKeyData() {
        return keyData_;
      }
      /**
       * <code>optional bytes key_data = 2;</code>
       * @param value The keyData to set.
       * @return This builder for chaining.
       */
      public Builder setKeyData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        keyData_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes key_data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyData() {
        bitField0_ = (bitField0_ & ~0x00000002);
        keyData_ = getDefaultInstance().getKeyData();
        onChanged();
        return this;
      }

      private long legacySteamId_ ;
      /**
       * <code>optional fixed64 legacy_steam_id = 4;</code>
       * @return Whether the legacySteamId field is set.
       */
      @java.lang.Override
      public boolean hasLegacySteamId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional fixed64 legacy_steam_id = 4;</code>
       * @return The legacySteamId.
       */
      @java.lang.Override
      public long getLegacySteamId() {
        return legacySteamId_;
      }
      /**
       * <code>optional fixed64 legacy_steam_id = 4;</code>
       * @param value The legacySteamId to set.
       * @return This builder for chaining.
       */
      public Builder setLegacySteamId(long value) {

        legacySteamId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 legacy_steam_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLegacySteamId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        legacySteamId_ = 0L;
        onChanged();
        return this;
      }

      private com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary legacyIdentityBinary_;
      private com.google.protobuf.SingleFieldBuilder<
          com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.Builder, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder> legacyIdentityBinaryBuilder_;
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       * @return Whether the legacyIdentityBinary field is set.
       */
      public boolean hasLegacyIdentityBinary() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       * @return The legacyIdentityBinary.
       */
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary getLegacyIdentityBinary() {
        if (legacyIdentityBinaryBuilder_ == null) {
          return legacyIdentityBinary_ == null ? com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.getDefaultInstance() : legacyIdentityBinary_;
        } else {
          return legacyIdentityBinaryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       */
      public Builder setLegacyIdentityBinary(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary value) {
        if (legacyIdentityBinaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          legacyIdentityBinary_ = value;
        } else {
          legacyIdentityBinaryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       */
      public Builder setLegacyIdentityBinary(
          com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.Builder builderForValue) {
        if (legacyIdentityBinaryBuilder_ == null) {
          legacyIdentityBinary_ = builderForValue.build();
        } else {
          legacyIdentityBinaryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       */
      public Builder mergeLegacyIdentityBinary(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary value) {
        if (legacyIdentityBinaryBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            legacyIdentityBinary_ != null &&
            legacyIdentityBinary_ != com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.getDefaultInstance()) {
            getLegacyIdentityBinaryBuilder().mergeFrom(value);
          } else {
            legacyIdentityBinary_ = value;
          }
        } else {
          legacyIdentityBinaryBuilder_.mergeFrom(value);
        }
        if (legacyIdentityBinary_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       */
      public Builder clearLegacyIdentityBinary() {
        bitField0_ = (bitField0_ & ~0x00000008);
        legacyIdentityBinary_ = null;
        if (legacyIdentityBinaryBuilder_ != null) {
          legacyIdentityBinaryBuilder_.dispose();
          legacyIdentityBinaryBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.Builder getLegacyIdentityBinaryBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLegacyIdentityBinaryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder getLegacyIdentityBinaryOrBuilder() {
        if (legacyIdentityBinaryBuilder_ != null) {
          return legacyIdentityBinaryBuilder_.getMessageOrBuilder();
        } else {
          return legacyIdentityBinary_ == null ?
              com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.getDefaultInstance() : legacyIdentityBinary_;
        }
      }
      /**
       * <code>optional .dota2.CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.Builder, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder> 
          getLegacyIdentityBinaryFieldBuilder() {
        if (legacyIdentityBinaryBuilder_ == null) {
          legacyIdentityBinaryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinary.Builder, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamNetworkingIdentityLegacyBinaryOrBuilder>(
                  getLegacyIdentityBinary(),
                  getParentForChildren(),
                  isClean());
          legacyIdentityBinary_ = null;
        }
        return legacyIdentityBinaryBuilder_;
      }

      private java.lang.Object identityString_ = "";
      /**
       * <code>optional string identity_string = 12;</code>
       * @return Whether the identityString field is set.
       */
      public boolean hasIdentityString() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional string identity_string = 12;</code>
       * @return The identityString.
       */
      public java.lang.String getIdentityString() {
        java.lang.Object ref = identityString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            identityString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string identity_string = 12;</code>
       * @return The bytes for identityString.
       */
      public com.google.protobuf.ByteString
          getIdentityStringBytes() {
        java.lang.Object ref = identityString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          identityString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string identity_string = 12;</code>
       * @param value The identityString to set.
       * @return This builder for chaining.
       */
      public Builder setIdentityString(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        identityString_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional string identity_string = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearIdentityString() {
        identityString_ = getDefaultInstance().getIdentityString();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>optional string identity_string = 12;</code>
       * @param value The bytes for identityString to set.
       * @return This builder for chaining.
       */
      public Builder setIdentityStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        identityString_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList gameserverDatacenterIds_ = emptyIntList();
      private void ensureGameserverDatacenterIdsIsMutable() {
        if (!gameserverDatacenterIds_.isModifiable()) {
          gameserverDatacenterIds_ = makeMutableCopy(gameserverDatacenterIds_);
        }
        bitField0_ |= 0x00000020;
      }
      private void ensureGameserverDatacenterIdsIsMutable(int capacity) {
        if (!gameserverDatacenterIds_.isModifiable()) {
          gameserverDatacenterIds_ = makeMutableCopy(gameserverDatacenterIds_, capacity);
        }
        bitField0_ |= 0x00000020;
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       * @return A list containing the gameserverDatacenterIds.
       */
      public java.util.List<java.lang.Integer>
          getGameserverDatacenterIdsList() {
        gameserverDatacenterIds_.makeImmutable();
        return gameserverDatacenterIds_;
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       * @return The count of gameserverDatacenterIds.
       */
      public int getGameserverDatacenterIdsCount() {
        return gameserverDatacenterIds_.size();
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       * @param index The index of the element to return.
       * @return The gameserverDatacenterIds at the given index.
       */
      public int getGameserverDatacenterIds(int index) {
        return gameserverDatacenterIds_.getInt(index);
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       * @param index The index to set the value at.
       * @param value The gameserverDatacenterIds to set.
       * @return This builder for chaining.
       */
      public Builder setGameserverDatacenterIds(
          int index, int value) {

        ensureGameserverDatacenterIdsIsMutable();
        gameserverDatacenterIds_.setInt(index, value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       * @param value The gameserverDatacenterIds to add.
       * @return This builder for chaining.
       */
      public Builder addGameserverDatacenterIds(int value) {

        ensureGameserverDatacenterIdsIsMutable();
        gameserverDatacenterIds_.addInt(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       * @param values The gameserverDatacenterIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllGameserverDatacenterIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGameserverDatacenterIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, gameserverDatacenterIds_);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated fixed32 gameserver_datacenter_ids = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearGameserverDatacenterIds() {
        gameserverDatacenterIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private int timeCreated_ ;
      /**
       * <code>optional fixed32 time_created = 8;</code>
       * @return Whether the timeCreated field is set.
       */
      @java.lang.Override
      public boolean hasTimeCreated() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional fixed32 time_created = 8;</code>
       * @return The timeCreated.
       */
      @java.lang.Override
      public int getTimeCreated() {
        return timeCreated_;
      }
      /**
       * <code>optional fixed32 time_created = 8;</code>
       * @param value The timeCreated to set.
       * @return This builder for chaining.
       */
      public Builder setTimeCreated(int value) {

        timeCreated_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 time_created = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeCreated() {
        bitField0_ = (bitField0_ & ~0x00000040);
        timeCreated_ = 0;
        onChanged();
        return this;
      }

      private int timeExpiry_ ;
      /**
       * <code>optional fixed32 time_expiry = 9;</code>
       * @return Whether the timeExpiry field is set.
       */
      @java.lang.Override
      public boolean hasTimeExpiry() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional fixed32 time_expiry = 9;</code>
       * @return The timeExpiry.
       */
      @java.lang.Override
      public int getTimeExpiry() {
        return timeExpiry_;
      }
      /**
       * <code>optional fixed32 time_expiry = 9;</code>
       * @param value The timeExpiry to set.
       * @return This builder for chaining.
       */
      public Builder setTimeExpiry(int value) {

        timeExpiry_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 time_expiry = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeExpiry() {
        bitField0_ = (bitField0_ & ~0x00000080);
        timeExpiry_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList appIds_ = emptyIntList();
      private void ensureAppIdsIsMutable() {
        if (!appIds_.isModifiable()) {
          appIds_ = makeMutableCopy(appIds_);
        }
        bitField0_ |= 0x00000100;
      }
      /**
       * <code>repeated uint32 app_ids = 10;</code>
       * @return A list containing the appIds.
       */
      public java.util.List<java.lang.Integer>
          getAppIdsList() {
        appIds_.makeImmutable();
        return appIds_;
      }
      /**
       * <code>repeated uint32 app_ids = 10;</code>
       * @return The count of appIds.
       */
      public int getAppIdsCount() {
        return appIds_.size();
      }
      /**
       * <code>repeated uint32 app_ids = 10;</code>
       * @param index The index of the element to return.
       * @return The appIds at the given index.
       */
      public int getAppIds(int index) {
        return appIds_.getInt(index);
      }
      /**
       * <code>repeated uint32 app_ids = 10;</code>
       * @param index The index to set the value at.
       * @param value The appIds to set.
       * @return This builder for chaining.
       */
      public Builder setAppIds(
          int index, int value) {

        ensureAppIdsIsMutable();
        appIds_.setInt(index, value);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 app_ids = 10;</code>
       * @param value The appIds to add.
       * @return This builder for chaining.
       */
      public Builder addAppIds(int value) {

        ensureAppIdsIsMutable();
        appIds_.addInt(value);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 app_ids = 10;</code>
       * @param values The appIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllAppIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAppIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, appIds_);
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 app_ids = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppIds() {
        appIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList ipAddresses_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureIpAddressesIsMutable() {
        if (!ipAddresses_.isModifiable()) {
          ipAddresses_ = new com.google.protobuf.LazyStringArrayList(ipAddresses_);
        }
        bitField0_ |= 0x00000200;
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @return A list containing the ipAddresses.
       */
      public com.google.protobuf.ProtocolStringList
          getIpAddressesList() {
        ipAddresses_.makeImmutable();
        return ipAddresses_;
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @return The count of ipAddresses.
       */
      public int getIpAddressesCount() {
        return ipAddresses_.size();
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @param index The index of the element to return.
       * @return The ipAddresses at the given index.
       */
      public java.lang.String getIpAddresses(int index) {
        return ipAddresses_.get(index);
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @param index The index of the value to return.
       * @return The bytes of the ipAddresses at the given index.
       */
      public com.google.protobuf.ByteString
          getIpAddressesBytes(int index) {
        return ipAddresses_.getByteString(index);
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @param index The index to set the value at.
       * @param value The ipAddresses to set.
       * @return This builder for chaining.
       */
      public Builder setIpAddresses(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureIpAddressesIsMutable();
        ipAddresses_.set(index, value);
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @param value The ipAddresses to add.
       * @return This builder for chaining.
       */
      public Builder addIpAddresses(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureIpAddressesIsMutable();
        ipAddresses_.add(value);
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @param values The ipAddresses to add.
       * @return This builder for chaining.
       */
      public Builder addAllIpAddresses(
          java.lang.Iterable<java.lang.String> values) {
        ensureIpAddressesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ipAddresses_);
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpAddresses() {
        ipAddresses_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ip_addresses = 13;</code>
       * @param value The bytes of the ipAddresses to add.
       * @return This builder for chaining.
       */
      public Builder addIpAddressesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureIpAddressesIsMutable();
        ipAddresses_.add(value);
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dota2.CMsgSteamDatagramCertificate)
    }

    // @@protoc_insertion_point(class_scope:dota2.CMsgSteamDatagramCertificate)
    private static final com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate();
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamDatagramCertificate>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamDatagramCertificate>() {
      @java.lang.Override
      public CMsgSteamDatagramCertificate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamDatagramCertificate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamDatagramCertificate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamDatagramCertificateSignedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dota2.CMsgSteamDatagramCertificateSigned)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes cert = 4;</code>
     * @return Whether the cert field is set.
     */
    boolean hasCert();
    /**
     * <code>optional bytes cert = 4;</code>
     * @return The cert.
     */
    com.google.protobuf.ByteString getCert();

    /**
     * <code>optional fixed64 ca_key_id = 5;</code>
     * @return Whether the caKeyId field is set.
     */
    boolean hasCaKeyId();
    /**
     * <code>optional fixed64 ca_key_id = 5;</code>
     * @return The caKeyId.
     */
    long getCaKeyId();

    /**
     * <code>optional bytes ca_signature = 6;</code>
     * @return Whether the caSignature field is set.
     */
    boolean hasCaSignature();
    /**
     * <code>optional bytes ca_signature = 6;</code>
     * @return The caSignature.
     */
    com.google.protobuf.ByteString getCaSignature();

    /**
     * <code>optional bytes private_key_data = 1;</code>
     * @return Whether the privateKeyData field is set.
     */
    boolean hasPrivateKeyData();
    /**
     * <code>optional bytes private_key_data = 1;</code>
     * @return The privateKeyData.
     */
    com.google.protobuf.ByteString getPrivateKeyData();
  }
  /**
   * Protobuf type {@code dota2.CMsgSteamDatagramCertificateSigned}
   */
  public static final class CMsgSteamDatagramCertificateSigned extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dota2.CMsgSteamDatagramCertificateSigned)
      CMsgSteamDatagramCertificateSignedOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CMsgSteamDatagramCertificateSigned.class.getName());
    }
    // Use CMsgSteamDatagramCertificateSigned.newBuilder() to construct.
    private CMsgSteamDatagramCertificateSigned(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamDatagramCertificateSigned() {
      cert_ = com.google.protobuf.ByteString.EMPTY;
      caSignature_ = com.google.protobuf.ByteString.EMPTY;
      privateKeyData_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateSigned_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateSigned_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned.class, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned.Builder.class);
    }

    private int bitField0_;
    public static final int CERT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString cert_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes cert = 4;</code>
     * @return Whether the cert field is set.
     */
    @java.lang.Override
    public boolean hasCert() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bytes cert = 4;</code>
     * @return The cert.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCert() {
      return cert_;
    }

    public static final int CA_KEY_ID_FIELD_NUMBER = 5;
    private long caKeyId_ = 0L;
    /**
     * <code>optional fixed64 ca_key_id = 5;</code>
     * @return Whether the caKeyId field is set.
     */
    @java.lang.Override
    public boolean hasCaKeyId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 ca_key_id = 5;</code>
     * @return The caKeyId.
     */
    @java.lang.Override
    public long getCaKeyId() {
      return caKeyId_;
    }

    public static final int CA_SIGNATURE_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString caSignature_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes ca_signature = 6;</code>
     * @return Whether the caSignature field is set.
     */
    @java.lang.Override
    public boolean hasCaSignature() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bytes ca_signature = 6;</code>
     * @return The caSignature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCaSignature() {
      return caSignature_;
    }

    public static final int PRIVATE_KEY_DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString privateKeyData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>optional bytes private_key_data = 1;</code>
     * @return Whether the privateKeyData field is set.
     */
    @java.lang.Override
    public boolean hasPrivateKeyData() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bytes private_key_data = 1;</code>
     * @return The privateKeyData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPrivateKeyData() {
      return privateKeyData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(1, privateKeyData_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(4, cert_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(5, caKeyId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(6, caSignature_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, privateKeyData_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, cert_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(5, caKeyId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, caSignature_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned other = (com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned) obj;

      if (hasCert() != other.hasCert()) return false;
      if (hasCert()) {
        if (!getCert()
            .equals(other.getCert())) return false;
      }
      if (hasCaKeyId() != other.hasCaKeyId()) return false;
      if (hasCaKeyId()) {
        if (getCaKeyId()
            != other.getCaKeyId()) return false;
      }
      if (hasCaSignature() != other.hasCaSignature()) return false;
      if (hasCaSignature()) {
        if (!getCaSignature()
            .equals(other.getCaSignature())) return false;
      }
      if (hasPrivateKeyData() != other.hasPrivateKeyData()) return false;
      if (hasPrivateKeyData()) {
        if (!getPrivateKeyData()
            .equals(other.getPrivateKeyData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCert()) {
        hash = (37 * hash) + CERT_FIELD_NUMBER;
        hash = (53 * hash) + getCert().hashCode();
      }
      if (hasCaKeyId()) {
        hash = (37 * hash) + CA_KEY_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCaKeyId());
      }
      if (hasCaSignature()) {
        hash = (37 * hash) + CA_SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getCaSignature().hashCode();
      }
      if (hasPrivateKeyData()) {
        hash = (37 * hash) + PRIVATE_KEY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateKeyData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dota2.CMsgSteamDatagramCertificateSigned}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dota2.CMsgSteamDatagramCertificateSigned)
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSignedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateSigned_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateSigned_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned.class, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned.Builder.class);
      }

      // Construct using com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cert_ = com.google.protobuf.ByteString.EMPTY;
        caKeyId_ = 0L;
        caSignature_ = com.google.protobuf.ByteString.EMPTY;
        privateKeyData_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateSigned_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned getDefaultInstanceForType() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned build() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned buildPartial() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned result = new com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cert_ = cert_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.caKeyId_ = caKeyId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.caSignature_ = caSignature_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.privateKeyData_ = privateKeyData_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned) {
          return mergeFrom((com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned other) {
        if (other == com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned.getDefaultInstance()) return this;
        if (other.hasCert()) {
          setCert(other.getCert());
        }
        if (other.hasCaKeyId()) {
          setCaKeyId(other.getCaKeyId());
        }
        if (other.hasCaSignature()) {
          setCaSignature(other.getCaSignature());
        }
        if (other.hasPrivateKeyData()) {
          setPrivateKeyData(other.getPrivateKeyData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                privateKeyData_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 10
              case 34: {
                cert_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 34
              case 41: {
                caKeyId_ = input.readFixed64();
                bitField0_ |= 0x00000002;
                break;
              } // case 41
              case 50: {
                caSignature_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString cert_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes cert = 4;</code>
       * @return Whether the cert field is set.
       */
      @java.lang.Override
      public boolean hasCert() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bytes cert = 4;</code>
       * @return The cert.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCert() {
        return cert_;
      }
      /**
       * <code>optional bytes cert = 4;</code>
       * @param value The cert to set.
       * @return This builder for chaining.
       */
      public Builder setCert(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        cert_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes cert = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCert() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cert_ = getDefaultInstance().getCert();
        onChanged();
        return this;
      }

      private long caKeyId_ ;
      /**
       * <code>optional fixed64 ca_key_id = 5;</code>
       * @return Whether the caKeyId field is set.
       */
      @java.lang.Override
      public boolean hasCaKeyId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 ca_key_id = 5;</code>
       * @return The caKeyId.
       */
      @java.lang.Override
      public long getCaKeyId() {
        return caKeyId_;
      }
      /**
       * <code>optional fixed64 ca_key_id = 5;</code>
       * @param value The caKeyId to set.
       * @return This builder for chaining.
       */
      public Builder setCaKeyId(long value) {

        caKeyId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 ca_key_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaKeyId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        caKeyId_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString caSignature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes ca_signature = 6;</code>
       * @return Whether the caSignature field is set.
       */
      @java.lang.Override
      public boolean hasCaSignature() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bytes ca_signature = 6;</code>
       * @return The caSignature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCaSignature() {
        return caSignature_;
      }
      /**
       * <code>optional bytes ca_signature = 6;</code>
       * @param value The caSignature to set.
       * @return This builder for chaining.
       */
      public Builder setCaSignature(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        caSignature_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes ca_signature = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        caSignature_ = getDefaultInstance().getCaSignature();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString privateKeyData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes private_key_data = 1;</code>
       * @return Whether the privateKeyData field is set.
       */
      @java.lang.Override
      public boolean hasPrivateKeyData() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bytes private_key_data = 1;</code>
       * @return The privateKeyData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPrivateKeyData() {
        return privateKeyData_;
      }
      /**
       * <code>optional bytes private_key_data = 1;</code>
       * @param value The privateKeyData to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateKeyData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        privateKeyData_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes private_key_data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateKeyData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        privateKeyData_ = getDefaultInstance().getPrivateKeyData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dota2.CMsgSteamDatagramCertificateSigned)
    }

    // @@protoc_insertion_point(class_scope:dota2.CMsgSteamDatagramCertificateSigned)
    private static final com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned();
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamDatagramCertificateSigned>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamDatagramCertificateSigned>() {
      @java.lang.Override
      public CMsgSteamDatagramCertificateSigned parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamDatagramCertificateSigned> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamDatagramCertificateSigned> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateSigned getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgSteamDatagramCertificateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dota2.CMsgSteamDatagramCertificateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
     * @return Whether the cert field is set.
     */
    boolean hasCert();
    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
     * @return The cert.
     */
    com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate getCert();
    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
     */
    com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateOrBuilder getCertOrBuilder();
  }
  /**
   * Protobuf type {@code dota2.CMsgSteamDatagramCertificateRequest}
   */
  public static final class CMsgSteamDatagramCertificateRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dota2.CMsgSteamDatagramCertificateRequest)
      CMsgSteamDatagramCertificateRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CMsgSteamDatagramCertificateRequest.class.getName());
    }
    // Use CMsgSteamDatagramCertificateRequest.newBuilder() to construct.
    private CMsgSteamDatagramCertificateRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgSteamDatagramCertificateRequest() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest.class, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest.Builder.class);
    }

    private int bitField0_;
    public static final int CERT_FIELD_NUMBER = 1;
    private com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate cert_;
    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
     * @return Whether the cert field is set.
     */
    @java.lang.Override
    public boolean hasCert() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
     * @return The cert.
     */
    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate getCert() {
      return cert_ == null ? com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.getDefaultInstance() : cert_;
    }
    /**
     * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
     */
    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateOrBuilder getCertOrBuilder() {
      return cert_ == null ? com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.getDefaultInstance() : cert_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getCert());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCert());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest other = (com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest) obj;

      if (hasCert() != other.hasCert()) return false;
      if (hasCert()) {
        if (!getCert()
            .equals(other.getCert())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCert()) {
        hash = (37 * hash) + CERT_FIELD_NUMBER;
        hash = (53 * hash) + getCert().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dota2.CMsgSteamDatagramCertificateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dota2.CMsgSteamDatagramCertificateRequest)
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest.class, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest.Builder.class);
      }

      // Construct using com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getCertFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cert_ = null;
        if (certBuilder_ != null) {
          certBuilder_.dispose();
          certBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.internal_static_dota2_CMsgSteamDatagramCertificateRequest_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest getDefaultInstanceForType() {
        return com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest build() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest buildPartial() {
        com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest result = new com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cert_ = certBuilder_ == null
              ? cert_
              : certBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest) {
          return mergeFrom((com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest other) {
        if (other == com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest.getDefaultInstance()) return this;
        if (other.hasCert()) {
          mergeCert(other.getCert());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getCertFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate cert_;
      private com.google.protobuf.SingleFieldBuilder<
          com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.Builder, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateOrBuilder> certBuilder_;
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       * @return Whether the cert field is set.
       */
      public boolean hasCert() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       * @return The cert.
       */
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate getCert() {
        if (certBuilder_ == null) {
          return cert_ == null ? com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.getDefaultInstance() : cert_;
        } else {
          return certBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       */
      public Builder setCert(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate value) {
        if (certBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cert_ = value;
        } else {
          certBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       */
      public Builder setCert(
          com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.Builder builderForValue) {
        if (certBuilder_ == null) {
          cert_ = builderForValue.build();
        } else {
          certBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       */
      public Builder mergeCert(com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate value) {
        if (certBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            cert_ != null &&
            cert_ != com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.getDefaultInstance()) {
            getCertBuilder().mergeFrom(value);
          } else {
            cert_ = value;
          }
        } else {
          certBuilder_.mergeFrom(value);
        }
        if (cert_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       */
      public Builder clearCert() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cert_ = null;
        if (certBuilder_ != null) {
          certBuilder_.dispose();
          certBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.Builder getCertBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCertFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateOrBuilder getCertOrBuilder() {
        if (certBuilder_ != null) {
          return certBuilder_.getMessageOrBuilder();
        } else {
          return cert_ == null ?
              com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.getDefaultInstance() : cert_;
        }
      }
      /**
       * <code>optional .dota2.CMsgSteamDatagramCertificate cert = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.Builder, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateOrBuilder> 
          getCertFieldBuilder() {
        if (certBuilder_ == null) {
          certBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificate.Builder, com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateOrBuilder>(
                  getCert(),
                  getParentForChildren(),
                  isClean());
          cert_ = null;
        }
        return certBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:dota2.CMsgSteamDatagramCertificateRequest)
    }

    // @@protoc_insertion_point(class_scope:dota2.CMsgSteamDatagramCertificateRequest)
    private static final com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest();
    }

    public static com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgSteamDatagramCertificateRequest>
        PARSER = new com.google.protobuf.AbstractParser<CMsgSteamDatagramCertificateRequest>() {
      @java.lang.Override
      public CMsgSteamDatagramCertificateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgSteamDatagramCertificateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgSteamDatagramCertificateRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSteamNetworkingSocketsCerts.CMsgSteamDatagramCertificateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CMsgSteamDatagramCertificate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CMsgSteamDatagramCertificate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CMsgSteamDatagramCertificateSigned_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CMsgSteamDatagramCertificateSigned_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CMsgSteamDatagramCertificateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CMsgSteamDatagramCertificateRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+steamnetworkingsockets_messages_certs." +
      "proto\022\005dota2\"\201\001\n\'CMsgSteamNetworkingIden" +
      "tityLegacyBinary\022\020\n\010steam_id\030\020 \001(\006\022\025\n\rge" +
      "neric_bytes\030\002 \001(\014\022\026\n\016generic_string\030\003 \001(" +
      "\t\022\025\n\ripv6_and_port\030\004 \001(\014\"\226\003\n\034CMsgSteamDa" +
      "tagramCertificate\022G\n\010key_type\030\001 \001(\0162,.do" +
      "ta2.CMsgSteamDatagramCertificate.EKeyTyp" +
      "e:\007INVALID\022\020\n\010key_data\030\002 \001(\014\022\027\n\017legacy_s" +
      "team_id\030\004 \001(\006\022N\n\026legacy_identity_binary\030" +
      "\013 \001(\0132..dota2.CMsgSteamNetworkingIdentit" +
      "yLegacyBinary\022\027\n\017identity_string\030\014 \001(\t\022!" +
      "\n\031gameserver_datacenter_ids\030\005 \003(\007\022\024\n\014tim" +
      "e_created\030\010 \001(\007\022\023\n\013time_expiry\030\t \001(\007\022\017\n\007" +
      "app_ids\030\n \003(\r\022\024\n\014ip_addresses\030\r \003(\t\"$\n\010E" +
      "KeyType\022\013\n\007INVALID\020\000\022\013\n\007ED25519\020\001\"u\n\"CMs" +
      "gSteamDatagramCertificateSigned\022\014\n\004cert\030" +
      "\004 \001(\014\022\021\n\tca_key_id\030\005 \001(\006\022\024\n\014ca_signature" +
      "\030\006 \001(\014\022\030\n\020private_key_data\030\001 \001(\014\"X\n#CMsg" +
      "SteamDatagramCertificateRequest\0221\n\004cert\030" +
      "\001 \001(\0132#.dota2.CMsgSteamDatagramCertifica" +
      "teBD\n\035com.nickbooher.protos.gc.dotaB\036Msg" +
      "SteamNetworkingSocketsCertsH\001\200\001\000"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CMsgSteamNetworkingIdentityLegacyBinary_descriptor,
        new java.lang.String[] { "SteamId", "GenericBytes", "GenericString", "Ipv6AndPort", });
    internal_static_dota2_CMsgSteamDatagramCertificate_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dota2_CMsgSteamDatagramCertificate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CMsgSteamDatagramCertificate_descriptor,
        new java.lang.String[] { "KeyType", "KeyData", "LegacySteamId", "LegacyIdentityBinary", "IdentityString", "GameserverDatacenterIds", "TimeCreated", "TimeExpiry", "AppIds", "IpAddresses", });
    internal_static_dota2_CMsgSteamDatagramCertificateSigned_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_dota2_CMsgSteamDatagramCertificateSigned_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CMsgSteamDatagramCertificateSigned_descriptor,
        new java.lang.String[] { "Cert", "CaKeyId", "CaSignature", "PrivateKeyData", });
    internal_static_dota2_CMsgSteamDatagramCertificateRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_dota2_CMsgSteamDatagramCertificateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CMsgSteamDatagramCertificateRequest_descriptor,
        new java.lang.String[] { "Cert", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
