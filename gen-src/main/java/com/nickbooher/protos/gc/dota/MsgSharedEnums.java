// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: dota_shared_enums.proto
// Protobuf Java Version: 4.28.2

package com.nickbooher.protos.gc.dota;

public final class MsgSharedEnums {
  private MsgSharedEnums() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      MsgSharedEnums.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code dota2.DOTA_GameMode}
   */
  public enum DOTA_GameMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GAMEMODE_NONE = 0;</code>
     */
    DOTA_GAMEMODE_NONE(0),
    /**
     * <code>DOTA_GAMEMODE_AP = 1;</code>
     */
    DOTA_GAMEMODE_AP(1),
    /**
     * <code>DOTA_GAMEMODE_CM = 2;</code>
     */
    DOTA_GAMEMODE_CM(2),
    /**
     * <code>DOTA_GAMEMODE_RD = 3;</code>
     */
    DOTA_GAMEMODE_RD(3),
    /**
     * <code>DOTA_GAMEMODE_SD = 4;</code>
     */
    DOTA_GAMEMODE_SD(4),
    /**
     * <code>DOTA_GAMEMODE_AR = 5;</code>
     */
    DOTA_GAMEMODE_AR(5),
    /**
     * <code>DOTA_GAMEMODE_INTRO = 6;</code>
     */
    DOTA_GAMEMODE_INTRO(6),
    /**
     * <code>DOTA_GAMEMODE_HW = 7;</code>
     */
    DOTA_GAMEMODE_HW(7),
    /**
     * <code>DOTA_GAMEMODE_REVERSE_CM = 8;</code>
     */
    DOTA_GAMEMODE_REVERSE_CM(8),
    /**
     * <code>DOTA_GAMEMODE_XMAS = 9;</code>
     */
    DOTA_GAMEMODE_XMAS(9),
    /**
     * <code>DOTA_GAMEMODE_TUTORIAL = 10;</code>
     */
    DOTA_GAMEMODE_TUTORIAL(10),
    /**
     * <code>DOTA_GAMEMODE_MO = 11;</code>
     */
    DOTA_GAMEMODE_MO(11),
    /**
     * <code>DOTA_GAMEMODE_LP = 12;</code>
     */
    DOTA_GAMEMODE_LP(12),
    /**
     * <code>DOTA_GAMEMODE_POOL1 = 13;</code>
     */
    DOTA_GAMEMODE_POOL1(13),
    /**
     * <code>DOTA_GAMEMODE_FH = 14;</code>
     */
    DOTA_GAMEMODE_FH(14),
    /**
     * <code>DOTA_GAMEMODE_CUSTOM = 15;</code>
     */
    DOTA_GAMEMODE_CUSTOM(15),
    /**
     * <code>DOTA_GAMEMODE_CD = 16;</code>
     */
    DOTA_GAMEMODE_CD(16),
    /**
     * <code>DOTA_GAMEMODE_BD = 17;</code>
     */
    DOTA_GAMEMODE_BD(17),
    /**
     * <code>DOTA_GAMEMODE_ABILITY_DRAFT = 18;</code>
     */
    DOTA_GAMEMODE_ABILITY_DRAFT(18),
    /**
     * <code>DOTA_GAMEMODE_EVENT = 19;</code>
     */
    DOTA_GAMEMODE_EVENT(19),
    /**
     * <code>DOTA_GAMEMODE_ARDM = 20;</code>
     */
    DOTA_GAMEMODE_ARDM(20),
    /**
     * <code>DOTA_GAMEMODE_1V1MID = 21;</code>
     */
    DOTA_GAMEMODE_1V1MID(21),
    /**
     * <code>DOTA_GAMEMODE_ALL_DRAFT = 22;</code>
     */
    DOTA_GAMEMODE_ALL_DRAFT(22),
    /**
     * <code>DOTA_GAMEMODE_TURBO = 23;</code>
     */
    DOTA_GAMEMODE_TURBO(23),
    /**
     * <code>DOTA_GAMEMODE_MUTATION = 24;</code>
     */
    DOTA_GAMEMODE_MUTATION(24),
    /**
     * <code>DOTA_GAMEMODE_COACHES_CHALLENGE = 25;</code>
     */
    DOTA_GAMEMODE_COACHES_CHALLENGE(25),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTA_GameMode.class.getName());
    }
    /**
     * <code>DOTA_GAMEMODE_NONE = 0;</code>
     */
    public static final int DOTA_GAMEMODE_NONE_VALUE = 0;
    /**
     * <code>DOTA_GAMEMODE_AP = 1;</code>
     */
    public static final int DOTA_GAMEMODE_AP_VALUE = 1;
    /**
     * <code>DOTA_GAMEMODE_CM = 2;</code>
     */
    public static final int DOTA_GAMEMODE_CM_VALUE = 2;
    /**
     * <code>DOTA_GAMEMODE_RD = 3;</code>
     */
    public static final int DOTA_GAMEMODE_RD_VALUE = 3;
    /**
     * <code>DOTA_GAMEMODE_SD = 4;</code>
     */
    public static final int DOTA_GAMEMODE_SD_VALUE = 4;
    /**
     * <code>DOTA_GAMEMODE_AR = 5;</code>
     */
    public static final int DOTA_GAMEMODE_AR_VALUE = 5;
    /**
     * <code>DOTA_GAMEMODE_INTRO = 6;</code>
     */
    public static final int DOTA_GAMEMODE_INTRO_VALUE = 6;
    /**
     * <code>DOTA_GAMEMODE_HW = 7;</code>
     */
    public static final int DOTA_GAMEMODE_HW_VALUE = 7;
    /**
     * <code>DOTA_GAMEMODE_REVERSE_CM = 8;</code>
     */
    public static final int DOTA_GAMEMODE_REVERSE_CM_VALUE = 8;
    /**
     * <code>DOTA_GAMEMODE_XMAS = 9;</code>
     */
    public static final int DOTA_GAMEMODE_XMAS_VALUE = 9;
    /**
     * <code>DOTA_GAMEMODE_TUTORIAL = 10;</code>
     */
    public static final int DOTA_GAMEMODE_TUTORIAL_VALUE = 10;
    /**
     * <code>DOTA_GAMEMODE_MO = 11;</code>
     */
    public static final int DOTA_GAMEMODE_MO_VALUE = 11;
    /**
     * <code>DOTA_GAMEMODE_LP = 12;</code>
     */
    public static final int DOTA_GAMEMODE_LP_VALUE = 12;
    /**
     * <code>DOTA_GAMEMODE_POOL1 = 13;</code>
     */
    public static final int DOTA_GAMEMODE_POOL1_VALUE = 13;
    /**
     * <code>DOTA_GAMEMODE_FH = 14;</code>
     */
    public static final int DOTA_GAMEMODE_FH_VALUE = 14;
    /**
     * <code>DOTA_GAMEMODE_CUSTOM = 15;</code>
     */
    public static final int DOTA_GAMEMODE_CUSTOM_VALUE = 15;
    /**
     * <code>DOTA_GAMEMODE_CD = 16;</code>
     */
    public static final int DOTA_GAMEMODE_CD_VALUE = 16;
    /**
     * <code>DOTA_GAMEMODE_BD = 17;</code>
     */
    public static final int DOTA_GAMEMODE_BD_VALUE = 17;
    /**
     * <code>DOTA_GAMEMODE_ABILITY_DRAFT = 18;</code>
     */
    public static final int DOTA_GAMEMODE_ABILITY_DRAFT_VALUE = 18;
    /**
     * <code>DOTA_GAMEMODE_EVENT = 19;</code>
     */
    public static final int DOTA_GAMEMODE_EVENT_VALUE = 19;
    /**
     * <code>DOTA_GAMEMODE_ARDM = 20;</code>
     */
    public static final int DOTA_GAMEMODE_ARDM_VALUE = 20;
    /**
     * <code>DOTA_GAMEMODE_1V1MID = 21;</code>
     */
    public static final int DOTA_GAMEMODE_1V1MID_VALUE = 21;
    /**
     * <code>DOTA_GAMEMODE_ALL_DRAFT = 22;</code>
     */
    public static final int DOTA_GAMEMODE_ALL_DRAFT_VALUE = 22;
    /**
     * <code>DOTA_GAMEMODE_TURBO = 23;</code>
     */
    public static final int DOTA_GAMEMODE_TURBO_VALUE = 23;
    /**
     * <code>DOTA_GAMEMODE_MUTATION = 24;</code>
     */
    public static final int DOTA_GAMEMODE_MUTATION_VALUE = 24;
    /**
     * <code>DOTA_GAMEMODE_COACHES_CHALLENGE = 25;</code>
     */
    public static final int DOTA_GAMEMODE_COACHES_CHALLENGE_VALUE = 25;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTA_GameMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTA_GameMode forNumber(int value) {
      switch (value) {
        case 0: return DOTA_GAMEMODE_NONE;
        case 1: return DOTA_GAMEMODE_AP;
        case 2: return DOTA_GAMEMODE_CM;
        case 3: return DOTA_GAMEMODE_RD;
        case 4: return DOTA_GAMEMODE_SD;
        case 5: return DOTA_GAMEMODE_AR;
        case 6: return DOTA_GAMEMODE_INTRO;
        case 7: return DOTA_GAMEMODE_HW;
        case 8: return DOTA_GAMEMODE_REVERSE_CM;
        case 9: return DOTA_GAMEMODE_XMAS;
        case 10: return DOTA_GAMEMODE_TUTORIAL;
        case 11: return DOTA_GAMEMODE_MO;
        case 12: return DOTA_GAMEMODE_LP;
        case 13: return DOTA_GAMEMODE_POOL1;
        case 14: return DOTA_GAMEMODE_FH;
        case 15: return DOTA_GAMEMODE_CUSTOM;
        case 16: return DOTA_GAMEMODE_CD;
        case 17: return DOTA_GAMEMODE_BD;
        case 18: return DOTA_GAMEMODE_ABILITY_DRAFT;
        case 19: return DOTA_GAMEMODE_EVENT;
        case 20: return DOTA_GAMEMODE_ARDM;
        case 21: return DOTA_GAMEMODE_1V1MID;
        case 22: return DOTA_GAMEMODE_ALL_DRAFT;
        case 23: return DOTA_GAMEMODE_TURBO;
        case 24: return DOTA_GAMEMODE_MUTATION;
        case 25: return DOTA_GAMEMODE_COACHES_CHALLENGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTA_GameMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>() {
            public DOTA_GameMode findValueByNumber(int number) {
              return DOTA_GameMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(0);
    }

    private static final DOTA_GameMode[] VALUES = values();

    public static DOTA_GameMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTA_GameMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTA_GameMode)
  }

  /**
   * Protobuf enum {@code dota2.DOTA_GameState}
   */
  public enum DOTA_GameState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GAMERULES_STATE_INIT = 0;</code>
     */
    DOTA_GAMERULES_STATE_INIT(0),
    /**
     * <code>DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD = 1;</code>
     */
    DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD(1),
    /**
     * <code>DOTA_GAMERULES_STATE_HERO_SELECTION = 2;</code>
     */
    DOTA_GAMERULES_STATE_HERO_SELECTION(2),
    /**
     * <code>DOTA_GAMERULES_STATE_STRATEGY_TIME = 3;</code>
     */
    DOTA_GAMERULES_STATE_STRATEGY_TIME(3),
    /**
     * <code>DOTA_GAMERULES_STATE_PRE_GAME = 4;</code>
     */
    DOTA_GAMERULES_STATE_PRE_GAME(4),
    /**
     * <code>DOTA_GAMERULES_STATE_GAME_IN_PROGRESS = 5;</code>
     */
    DOTA_GAMERULES_STATE_GAME_IN_PROGRESS(5),
    /**
     * <code>DOTA_GAMERULES_STATE_POST_GAME = 6;</code>
     */
    DOTA_GAMERULES_STATE_POST_GAME(6),
    /**
     * <code>DOTA_GAMERULES_STATE_DISCONNECT = 7;</code>
     */
    DOTA_GAMERULES_STATE_DISCONNECT(7),
    /**
     * <code>DOTA_GAMERULES_STATE_TEAM_SHOWCASE = 8;</code>
     */
    DOTA_GAMERULES_STATE_TEAM_SHOWCASE(8),
    /**
     * <code>DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP = 9;</code>
     */
    DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP(9),
    /**
     * <code>DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD = 10;</code>
     */
    DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD(10),
    /**
     * <code>DOTA_GAMERULES_STATE_SCENARIO_SETUP = 11;</code>
     */
    DOTA_GAMERULES_STATE_SCENARIO_SETUP(11),
    /**
     * <code>DOTA_GAMERULES_STATE_PLAYER_DRAFT = 12;</code>
     */
    DOTA_GAMERULES_STATE_PLAYER_DRAFT(12),
    /**
     * <code>DOTA_GAMERULES_STATE_LAST = 13;</code>
     */
    DOTA_GAMERULES_STATE_LAST(13),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTA_GameState.class.getName());
    }
    /**
     * <code>DOTA_GAMERULES_STATE_INIT = 0;</code>
     */
    public static final int DOTA_GAMERULES_STATE_INIT_VALUE = 0;
    /**
     * <code>DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD = 1;</code>
     */
    public static final int DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD_VALUE = 1;
    /**
     * <code>DOTA_GAMERULES_STATE_HERO_SELECTION = 2;</code>
     */
    public static final int DOTA_GAMERULES_STATE_HERO_SELECTION_VALUE = 2;
    /**
     * <code>DOTA_GAMERULES_STATE_STRATEGY_TIME = 3;</code>
     */
    public static final int DOTA_GAMERULES_STATE_STRATEGY_TIME_VALUE = 3;
    /**
     * <code>DOTA_GAMERULES_STATE_PRE_GAME = 4;</code>
     */
    public static final int DOTA_GAMERULES_STATE_PRE_GAME_VALUE = 4;
    /**
     * <code>DOTA_GAMERULES_STATE_GAME_IN_PROGRESS = 5;</code>
     */
    public static final int DOTA_GAMERULES_STATE_GAME_IN_PROGRESS_VALUE = 5;
    /**
     * <code>DOTA_GAMERULES_STATE_POST_GAME = 6;</code>
     */
    public static final int DOTA_GAMERULES_STATE_POST_GAME_VALUE = 6;
    /**
     * <code>DOTA_GAMERULES_STATE_DISCONNECT = 7;</code>
     */
    public static final int DOTA_GAMERULES_STATE_DISCONNECT_VALUE = 7;
    /**
     * <code>DOTA_GAMERULES_STATE_TEAM_SHOWCASE = 8;</code>
     */
    public static final int DOTA_GAMERULES_STATE_TEAM_SHOWCASE_VALUE = 8;
    /**
     * <code>DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP = 9;</code>
     */
    public static final int DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP_VALUE = 9;
    /**
     * <code>DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD = 10;</code>
     */
    public static final int DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD_VALUE = 10;
    /**
     * <code>DOTA_GAMERULES_STATE_SCENARIO_SETUP = 11;</code>
     */
    public static final int DOTA_GAMERULES_STATE_SCENARIO_SETUP_VALUE = 11;
    /**
     * <code>DOTA_GAMERULES_STATE_PLAYER_DRAFT = 12;</code>
     */
    public static final int DOTA_GAMERULES_STATE_PLAYER_DRAFT_VALUE = 12;
    /**
     * <code>DOTA_GAMERULES_STATE_LAST = 13;</code>
     */
    public static final int DOTA_GAMERULES_STATE_LAST_VALUE = 13;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTA_GameState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTA_GameState forNumber(int value) {
      switch (value) {
        case 0: return DOTA_GAMERULES_STATE_INIT;
        case 1: return DOTA_GAMERULES_STATE_WAIT_FOR_PLAYERS_TO_LOAD;
        case 2: return DOTA_GAMERULES_STATE_HERO_SELECTION;
        case 3: return DOTA_GAMERULES_STATE_STRATEGY_TIME;
        case 4: return DOTA_GAMERULES_STATE_PRE_GAME;
        case 5: return DOTA_GAMERULES_STATE_GAME_IN_PROGRESS;
        case 6: return DOTA_GAMERULES_STATE_POST_GAME;
        case 7: return DOTA_GAMERULES_STATE_DISCONNECT;
        case 8: return DOTA_GAMERULES_STATE_TEAM_SHOWCASE;
        case 9: return DOTA_GAMERULES_STATE_CUSTOM_GAME_SETUP;
        case 10: return DOTA_GAMERULES_STATE_WAIT_FOR_MAP_TO_LOAD;
        case 11: return DOTA_GAMERULES_STATE_SCENARIO_SETUP;
        case 12: return DOTA_GAMERULES_STATE_PLAYER_DRAFT;
        case 13: return DOTA_GAMERULES_STATE_LAST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTA_GameState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GameState>() {
            public DOTA_GameState findValueByNumber(int number) {
              return DOTA_GameState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(1);
    }

    private static final DOTA_GameState[] VALUES = values();

    public static DOTA_GameState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTA_GameState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTA_GameState)
  }

  /**
   * Protobuf enum {@code dota2.DOTA_GC_TEAM}
   */
  public enum DOTA_GC_TEAM
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GC_TEAM_GOOD_GUYS = 0;</code>
     */
    DOTA_GC_TEAM_GOOD_GUYS(0),
    /**
     * <code>DOTA_GC_TEAM_BAD_GUYS = 1;</code>
     */
    DOTA_GC_TEAM_BAD_GUYS(1),
    /**
     * <code>DOTA_GC_TEAM_BROADCASTER = 2;</code>
     */
    DOTA_GC_TEAM_BROADCASTER(2),
    /**
     * <code>DOTA_GC_TEAM_SPECTATOR = 3;</code>
     */
    DOTA_GC_TEAM_SPECTATOR(3),
    /**
     * <code>DOTA_GC_TEAM_PLAYER_POOL = 4;</code>
     */
    DOTA_GC_TEAM_PLAYER_POOL(4),
    /**
     * <code>DOTA_GC_TEAM_NOTEAM = 5;</code>
     */
    DOTA_GC_TEAM_NOTEAM(5),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_1 = 6;</code>
     */
    DOTA_GC_TEAM_CUSTOM_1(6),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_2 = 7;</code>
     */
    DOTA_GC_TEAM_CUSTOM_2(7),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_3 = 8;</code>
     */
    DOTA_GC_TEAM_CUSTOM_3(8),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_4 = 9;</code>
     */
    DOTA_GC_TEAM_CUSTOM_4(9),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_5 = 10;</code>
     */
    DOTA_GC_TEAM_CUSTOM_5(10),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_6 = 11;</code>
     */
    DOTA_GC_TEAM_CUSTOM_6(11),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_7 = 12;</code>
     */
    DOTA_GC_TEAM_CUSTOM_7(12),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_8 = 13;</code>
     */
    DOTA_GC_TEAM_CUSTOM_8(13),
    /**
     * <code>DOTA_GC_TEAM_NEUTRALS = 14;</code>
     */
    DOTA_GC_TEAM_NEUTRALS(14),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTA_GC_TEAM.class.getName());
    }
    /**
     * <code>DOTA_GC_TEAM_GOOD_GUYS = 0;</code>
     */
    public static final int DOTA_GC_TEAM_GOOD_GUYS_VALUE = 0;
    /**
     * <code>DOTA_GC_TEAM_BAD_GUYS = 1;</code>
     */
    public static final int DOTA_GC_TEAM_BAD_GUYS_VALUE = 1;
    /**
     * <code>DOTA_GC_TEAM_BROADCASTER = 2;</code>
     */
    public static final int DOTA_GC_TEAM_BROADCASTER_VALUE = 2;
    /**
     * <code>DOTA_GC_TEAM_SPECTATOR = 3;</code>
     */
    public static final int DOTA_GC_TEAM_SPECTATOR_VALUE = 3;
    /**
     * <code>DOTA_GC_TEAM_PLAYER_POOL = 4;</code>
     */
    public static final int DOTA_GC_TEAM_PLAYER_POOL_VALUE = 4;
    /**
     * <code>DOTA_GC_TEAM_NOTEAM = 5;</code>
     */
    public static final int DOTA_GC_TEAM_NOTEAM_VALUE = 5;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_1 = 6;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_1_VALUE = 6;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_2 = 7;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_2_VALUE = 7;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_3 = 8;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_3_VALUE = 8;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_4 = 9;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_4_VALUE = 9;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_5 = 10;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_5_VALUE = 10;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_6 = 11;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_6_VALUE = 11;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_7 = 12;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_7_VALUE = 12;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_8 = 13;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_8_VALUE = 13;
    /**
     * <code>DOTA_GC_TEAM_NEUTRALS = 14;</code>
     */
    public static final int DOTA_GC_TEAM_NEUTRALS_VALUE = 14;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTA_GC_TEAM valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTA_GC_TEAM forNumber(int value) {
      switch (value) {
        case 0: return DOTA_GC_TEAM_GOOD_GUYS;
        case 1: return DOTA_GC_TEAM_BAD_GUYS;
        case 2: return DOTA_GC_TEAM_BROADCASTER;
        case 3: return DOTA_GC_TEAM_SPECTATOR;
        case 4: return DOTA_GC_TEAM_PLAYER_POOL;
        case 5: return DOTA_GC_TEAM_NOTEAM;
        case 6: return DOTA_GC_TEAM_CUSTOM_1;
        case 7: return DOTA_GC_TEAM_CUSTOM_2;
        case 8: return DOTA_GC_TEAM_CUSTOM_3;
        case 9: return DOTA_GC_TEAM_CUSTOM_4;
        case 10: return DOTA_GC_TEAM_CUSTOM_5;
        case 11: return DOTA_GC_TEAM_CUSTOM_6;
        case 12: return DOTA_GC_TEAM_CUSTOM_7;
        case 13: return DOTA_GC_TEAM_CUSTOM_8;
        case 14: return DOTA_GC_TEAM_NEUTRALS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTA_GC_TEAM> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>() {
            public DOTA_GC_TEAM findValueByNumber(int number) {
              return DOTA_GC_TEAM.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(2);
    }

    private static final DOTA_GC_TEAM[] VALUES = values();

    public static DOTA_GC_TEAM valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTA_GC_TEAM(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTA_GC_TEAM)
  }

  /**
   * Protobuf enum {@code dota2.EEvent}
   */
  public enum EEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EVENT_ID_NONE = 0;</code>
     */
    EVENT_ID_NONE(0),
    /**
     * <code>EVENT_ID_DIRETIDE = 1;</code>
     */
    EVENT_ID_DIRETIDE(1),
    /**
     * <code>EVENT_ID_SPRING_FESTIVAL = 2;</code>
     */
    EVENT_ID_SPRING_FESTIVAL(2),
    /**
     * <code>EVENT_ID_FROSTIVUS_2013 = 3;</code>
     */
    EVENT_ID_FROSTIVUS_2013(3),
    /**
     * <code>EVENT_ID_COMPENDIUM_2014 = 4;</code>
     */
    EVENT_ID_COMPENDIUM_2014(4),
    /**
     * <code>EVENT_ID_NEXON_PC_BANG = 5;</code>
     */
    EVENT_ID_NEXON_PC_BANG(5),
    /**
     * <code>EVENT_ID_PWRD_DAC_2015 = 6;</code>
     */
    EVENT_ID_PWRD_DAC_2015(6),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015 = 7;</code>
     */
    EVENT_ID_NEW_BLOOM_2015(7),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2015 = 8;</code>
     */
    EVENT_ID_INTERNATIONAL_2015(8),
    /**
     * <code>EVENT_ID_FALL_MAJOR_2015 = 9;</code>
     */
    EVENT_ID_FALL_MAJOR_2015(9),
    /**
     * <code>EVENT_ID_ORACLE_PA = 10;</code>
     */
    EVENT_ID_ORACLE_PA(10),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015_PREBEAST = 11;</code>
     */
    EVENT_ID_NEW_BLOOM_2015_PREBEAST(11),
    /**
     * <code>EVENT_ID_FROSTIVUS = 12;</code>
     */
    EVENT_ID_FROSTIVUS(12),
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2016 = 13;</code>
     */
    EVENT_ID_WINTER_MAJOR_2016(13),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2016 = 14;</code>
     */
    EVENT_ID_INTERNATIONAL_2016(14),
    /**
     * <code>EVENT_ID_FALL_MAJOR_2016 = 15;</code>
     */
    EVENT_ID_FALL_MAJOR_2016(15),
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2017 = 16;</code>
     */
    EVENT_ID_WINTER_MAJOR_2017(16),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2017 = 17;</code>
     */
    EVENT_ID_NEW_BLOOM_2017(17),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2017 = 18;</code>
     */
    EVENT_ID_INTERNATIONAL_2017(18),
    /**
     * <code>EVENT_ID_PLUS_SUBSCRIPTION = 19;</code>
     */
    EVENT_ID_PLUS_SUBSCRIPTION(19),
    /**
     * <code>EVENT_ID_SINGLES_DAY_2017 = 20;</code>
     */
    EVENT_ID_SINGLES_DAY_2017(20),
    /**
     * <code>EVENT_ID_FROSTIVUS_2017 = 21;</code>
     */
    EVENT_ID_FROSTIVUS_2017(21),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2018 = 22;</code>
     */
    EVENT_ID_INTERNATIONAL_2018(22),
    /**
     * <code>EVENT_ID_FROSTIVUS_2018 = 23;</code>
     */
    EVENT_ID_FROSTIVUS_2018(23),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2019 = 24;</code>
     */
    EVENT_ID_NEW_BLOOM_2019(24),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2019 = 25;</code>
     */
    EVENT_ID_INTERNATIONAL_2019(25),
    /**
     * <code>EVENT_ID_NEW_PLAYER_EXPERIENCE = 26;</code>
     */
    EVENT_ID_NEW_PLAYER_EXPERIENCE(26),
    /**
     * <code>EVENT_ID_FROSTIVUS_2019 = 27;</code>
     */
    EVENT_ID_FROSTIVUS_2019(27),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2020 = 28;</code>
     */
    EVENT_ID_NEW_BLOOM_2020(28),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2020 = 29;</code>
     */
    EVENT_ID_INTERNATIONAL_2020(29),
    /**
     * <code>EVENT_ID_TEAM_FANDOM = 30;</code>
     */
    EVENT_ID_TEAM_FANDOM(30),
    /**
     * <code>EVENT_ID_DIRETIDE_2020 = 31;</code>
     */
    EVENT_ID_DIRETIDE_2020(31),
    /**
     * <code>EVENT_ID_SPRING_2021 = 32;</code>
     */
    EVENT_ID_SPRING_2021(32),
    /**
     * <code>EVENT_ID_FALL_2021 = 33;</code>
     */
    EVENT_ID_FALL_2021(33),
    /**
     * <code>EVENT_ID_TEAM_FANDOM_FALL_2021 = 34;</code>
     */
    EVENT_ID_TEAM_FANDOM_FALL_2021(34),
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR2 = 35;</code>
     */
    EVENT_ID_TEAM_2021_2022_TOUR2(35),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2022 = 36;</code>
     */
    EVENT_ID_INTERNATIONAL_2022(36),
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR3 = 37;</code>
     */
    EVENT_ID_TEAM_2021_2022_TOUR3(37),
    /**
     * <code>EVENT_ID_TEAM_INTERNATIONAL_2022 = 38;</code>
     */
    EVENT_ID_TEAM_INTERNATIONAL_2022(38),
    /**
     * <code>EVENT_ID_PERMANENT_GRANTS = 39;</code>
     */
    EVENT_ID_PERMANENT_GRANTS(39),
    /**
     * <code>EVENT_ID_MUERTA_RELEASE_SPRING2023 = 40;</code>
     */
    EVENT_ID_MUERTA_RELEASE_SPRING2023(40),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR1 = 41;</code>
     */
    EVENT_ID_TEAM_2023_TOUR1(41),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR2 = 42;</code>
     */
    EVENT_ID_TEAM_2023_TOUR2(42),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR3 = 43;</code>
     */
    EVENT_ID_TEAM_2023_TOUR3(43),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2023 = 45;</code>
     */
    EVENT_ID_INTERNATIONAL_2023(45),
    /**
     * <code>EVENT_ID_10TH_ANNIVERSARY = 46;</code>
     */
    EVENT_ID_10TH_ANNIVERSARY(46),
    /**
     * <code>EVENT_ID_CROWNFALL = 47;</code>
     */
    EVENT_ID_CROWNFALL(47),
    /**
     * <code>EVENT_ID_FROSTIVUS_2023 = 48;</code>
     */
    EVENT_ID_FROSTIVUS_2023(48),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2024 = 49;</code>
     */
    EVENT_ID_INTERNATIONAL_2024(49),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EEvent.class.getName());
    }
    /**
     * <code>EVENT_ID_NONE = 0;</code>
     */
    public static final int EVENT_ID_NONE_VALUE = 0;
    /**
     * <code>EVENT_ID_DIRETIDE = 1;</code>
     */
    public static final int EVENT_ID_DIRETIDE_VALUE = 1;
    /**
     * <code>EVENT_ID_SPRING_FESTIVAL = 2;</code>
     */
    public static final int EVENT_ID_SPRING_FESTIVAL_VALUE = 2;
    /**
     * <code>EVENT_ID_FROSTIVUS_2013 = 3;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2013_VALUE = 3;
    /**
     * <code>EVENT_ID_COMPENDIUM_2014 = 4;</code>
     */
    public static final int EVENT_ID_COMPENDIUM_2014_VALUE = 4;
    /**
     * <code>EVENT_ID_NEXON_PC_BANG = 5;</code>
     */
    public static final int EVENT_ID_NEXON_PC_BANG_VALUE = 5;
    /**
     * <code>EVENT_ID_PWRD_DAC_2015 = 6;</code>
     */
    public static final int EVENT_ID_PWRD_DAC_2015_VALUE = 6;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015 = 7;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2015_VALUE = 7;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2015 = 8;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2015_VALUE = 8;
    /**
     * <code>EVENT_ID_FALL_MAJOR_2015 = 9;</code>
     */
    public static final int EVENT_ID_FALL_MAJOR_2015_VALUE = 9;
    /**
     * <code>EVENT_ID_ORACLE_PA = 10;</code>
     */
    public static final int EVENT_ID_ORACLE_PA_VALUE = 10;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015_PREBEAST = 11;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2015_PREBEAST_VALUE = 11;
    /**
     * <code>EVENT_ID_FROSTIVUS = 12;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_VALUE = 12;
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2016 = 13;</code>
     */
    public static final int EVENT_ID_WINTER_MAJOR_2016_VALUE = 13;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2016 = 14;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2016_VALUE = 14;
    /**
     * <code>EVENT_ID_FALL_MAJOR_2016 = 15;</code>
     */
    public static final int EVENT_ID_FALL_MAJOR_2016_VALUE = 15;
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2017 = 16;</code>
     */
    public static final int EVENT_ID_WINTER_MAJOR_2017_VALUE = 16;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2017 = 17;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2017_VALUE = 17;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2017 = 18;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2017_VALUE = 18;
    /**
     * <code>EVENT_ID_PLUS_SUBSCRIPTION = 19;</code>
     */
    public static final int EVENT_ID_PLUS_SUBSCRIPTION_VALUE = 19;
    /**
     * <code>EVENT_ID_SINGLES_DAY_2017 = 20;</code>
     */
    public static final int EVENT_ID_SINGLES_DAY_2017_VALUE = 20;
    /**
     * <code>EVENT_ID_FROSTIVUS_2017 = 21;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2017_VALUE = 21;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2018 = 22;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2018_VALUE = 22;
    /**
     * <code>EVENT_ID_FROSTIVUS_2018 = 23;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2018_VALUE = 23;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2019 = 24;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2019_VALUE = 24;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2019 = 25;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2019_VALUE = 25;
    /**
     * <code>EVENT_ID_NEW_PLAYER_EXPERIENCE = 26;</code>
     */
    public static final int EVENT_ID_NEW_PLAYER_EXPERIENCE_VALUE = 26;
    /**
     * <code>EVENT_ID_FROSTIVUS_2019 = 27;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2019_VALUE = 27;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2020 = 28;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2020_VALUE = 28;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2020 = 29;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2020_VALUE = 29;
    /**
     * <code>EVENT_ID_TEAM_FANDOM = 30;</code>
     */
    public static final int EVENT_ID_TEAM_FANDOM_VALUE = 30;
    /**
     * <code>EVENT_ID_DIRETIDE_2020 = 31;</code>
     */
    public static final int EVENT_ID_DIRETIDE_2020_VALUE = 31;
    /**
     * <code>EVENT_ID_SPRING_2021 = 32;</code>
     */
    public static final int EVENT_ID_SPRING_2021_VALUE = 32;
    /**
     * <code>EVENT_ID_FALL_2021 = 33;</code>
     */
    public static final int EVENT_ID_FALL_2021_VALUE = 33;
    /**
     * <code>EVENT_ID_TEAM_FANDOM_FALL_2021 = 34;</code>
     */
    public static final int EVENT_ID_TEAM_FANDOM_FALL_2021_VALUE = 34;
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR2 = 35;</code>
     */
    public static final int EVENT_ID_TEAM_2021_2022_TOUR2_VALUE = 35;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2022 = 36;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2022_VALUE = 36;
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR3 = 37;</code>
     */
    public static final int EVENT_ID_TEAM_2021_2022_TOUR3_VALUE = 37;
    /**
     * <code>EVENT_ID_TEAM_INTERNATIONAL_2022 = 38;</code>
     */
    public static final int EVENT_ID_TEAM_INTERNATIONAL_2022_VALUE = 38;
    /**
     * <code>EVENT_ID_PERMANENT_GRANTS = 39;</code>
     */
    public static final int EVENT_ID_PERMANENT_GRANTS_VALUE = 39;
    /**
     * <code>EVENT_ID_MUERTA_RELEASE_SPRING2023 = 40;</code>
     */
    public static final int EVENT_ID_MUERTA_RELEASE_SPRING2023_VALUE = 40;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR1 = 41;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR1_VALUE = 41;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR2 = 42;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR2_VALUE = 42;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR3 = 43;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR3_VALUE = 43;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2023 = 45;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2023_VALUE = 45;
    /**
     * <code>EVENT_ID_10TH_ANNIVERSARY = 46;</code>
     */
    public static final int EVENT_ID_10TH_ANNIVERSARY_VALUE = 46;
    /**
     * <code>EVENT_ID_CROWNFALL = 47;</code>
     */
    public static final int EVENT_ID_CROWNFALL_VALUE = 47;
    /**
     * <code>EVENT_ID_FROSTIVUS_2023 = 48;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2023_VALUE = 48;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2024 = 49;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2024_VALUE = 49;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EEvent valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EEvent forNumber(int value) {
      switch (value) {
        case 0: return EVENT_ID_NONE;
        case 1: return EVENT_ID_DIRETIDE;
        case 2: return EVENT_ID_SPRING_FESTIVAL;
        case 3: return EVENT_ID_FROSTIVUS_2013;
        case 4: return EVENT_ID_COMPENDIUM_2014;
        case 5: return EVENT_ID_NEXON_PC_BANG;
        case 6: return EVENT_ID_PWRD_DAC_2015;
        case 7: return EVENT_ID_NEW_BLOOM_2015;
        case 8: return EVENT_ID_INTERNATIONAL_2015;
        case 9: return EVENT_ID_FALL_MAJOR_2015;
        case 10: return EVENT_ID_ORACLE_PA;
        case 11: return EVENT_ID_NEW_BLOOM_2015_PREBEAST;
        case 12: return EVENT_ID_FROSTIVUS;
        case 13: return EVENT_ID_WINTER_MAJOR_2016;
        case 14: return EVENT_ID_INTERNATIONAL_2016;
        case 15: return EVENT_ID_FALL_MAJOR_2016;
        case 16: return EVENT_ID_WINTER_MAJOR_2017;
        case 17: return EVENT_ID_NEW_BLOOM_2017;
        case 18: return EVENT_ID_INTERNATIONAL_2017;
        case 19: return EVENT_ID_PLUS_SUBSCRIPTION;
        case 20: return EVENT_ID_SINGLES_DAY_2017;
        case 21: return EVENT_ID_FROSTIVUS_2017;
        case 22: return EVENT_ID_INTERNATIONAL_2018;
        case 23: return EVENT_ID_FROSTIVUS_2018;
        case 24: return EVENT_ID_NEW_BLOOM_2019;
        case 25: return EVENT_ID_INTERNATIONAL_2019;
        case 26: return EVENT_ID_NEW_PLAYER_EXPERIENCE;
        case 27: return EVENT_ID_FROSTIVUS_2019;
        case 28: return EVENT_ID_NEW_BLOOM_2020;
        case 29: return EVENT_ID_INTERNATIONAL_2020;
        case 30: return EVENT_ID_TEAM_FANDOM;
        case 31: return EVENT_ID_DIRETIDE_2020;
        case 32: return EVENT_ID_SPRING_2021;
        case 33: return EVENT_ID_FALL_2021;
        case 34: return EVENT_ID_TEAM_FANDOM_FALL_2021;
        case 35: return EVENT_ID_TEAM_2021_2022_TOUR2;
        case 36: return EVENT_ID_INTERNATIONAL_2022;
        case 37: return EVENT_ID_TEAM_2021_2022_TOUR3;
        case 38: return EVENT_ID_TEAM_INTERNATIONAL_2022;
        case 39: return EVENT_ID_PERMANENT_GRANTS;
        case 40: return EVENT_ID_MUERTA_RELEASE_SPRING2023;
        case 41: return EVENT_ID_TEAM_2023_TOUR1;
        case 42: return EVENT_ID_TEAM_2023_TOUR2;
        case 43: return EVENT_ID_TEAM_2023_TOUR3;
        case 45: return EVENT_ID_INTERNATIONAL_2023;
        case 46: return EVENT_ID_10TH_ANNIVERSARY;
        case 47: return EVENT_ID_CROWNFALL;
        case 48: return EVENT_ID_FROSTIVUS_2023;
        case 49: return EVENT_ID_INTERNATIONAL_2024;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EEvent> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EEvent>() {
            public EEvent findValueByNumber(int number) {
              return EEvent.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(3);
    }

    private static final EEvent[] VALUES = values();

    public static EEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EEvent(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EEvent)
  }

  /**
   * Protobuf enum {@code dota2.ERankType}
   */
  public enum ERankType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ERankType_Invalid = 0;</code>
     */
    k_ERankType_Invalid(0),
    /**
     * <code>k_ERankType_Casual = 1;</code>
     */
    k_ERankType_Casual(1),
    /**
     * <code>k_ERankType_Ranked = 2;</code>
     */
    k_ERankType_Ranked(2),
    /**
     * <code>k_ERankType_CasualLegacy = 3;</code>
     */
    k_ERankType_CasualLegacy(3),
    /**
     * <code>k_ERankType_RankedLegacy = 4;</code>
     */
    k_ERankType_RankedLegacy(4),
    /**
     * <code>k_ERankType_CasualGlicko = 5;</code>
     */
    k_ERankType_CasualGlicko(5),
    /**
     * <code>k_ERankType_RankedGlicko = 6;</code>
     */
    k_ERankType_RankedGlicko(6),
    /**
     * <code>k_ERankType_RankMax = 7;</code>
     */
    k_ERankType_RankMax(7),
    /**
     * <code>k_ERankType_BehaviorPrivate = 100;</code>
     */
    k_ERankType_BehaviorPrivate(100),
    /**
     * <code>k_ERankType_BehaviorPublic = 101;</code>
     */
    k_ERankType_BehaviorPublic(101),
    /**
     * <code>k_ERankType_Max = 102;</code>
     */
    k_ERankType_Max(102),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ERankType.class.getName());
    }
    /**
     * <code>k_ERankType_Invalid = 0;</code>
     */
    public static final int k_ERankType_Invalid_VALUE = 0;
    /**
     * <code>k_ERankType_Casual = 1;</code>
     */
    public static final int k_ERankType_Casual_VALUE = 1;
    /**
     * <code>k_ERankType_Ranked = 2;</code>
     */
    public static final int k_ERankType_Ranked_VALUE = 2;
    /**
     * <code>k_ERankType_CasualLegacy = 3;</code>
     */
    public static final int k_ERankType_CasualLegacy_VALUE = 3;
    /**
     * <code>k_ERankType_RankedLegacy = 4;</code>
     */
    public static final int k_ERankType_RankedLegacy_VALUE = 4;
    /**
     * <code>k_ERankType_CasualGlicko = 5;</code>
     */
    public static final int k_ERankType_CasualGlicko_VALUE = 5;
    /**
     * <code>k_ERankType_RankedGlicko = 6;</code>
     */
    public static final int k_ERankType_RankedGlicko_VALUE = 6;
    /**
     * <code>k_ERankType_RankMax = 7;</code>
     */
    public static final int k_ERankType_RankMax_VALUE = 7;
    /**
     * <code>k_ERankType_BehaviorPrivate = 100;</code>
     */
    public static final int k_ERankType_BehaviorPrivate_VALUE = 100;
    /**
     * <code>k_ERankType_BehaviorPublic = 101;</code>
     */
    public static final int k_ERankType_BehaviorPublic_VALUE = 101;
    /**
     * <code>k_ERankType_Max = 102;</code>
     */
    public static final int k_ERankType_Max_VALUE = 102;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ERankType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ERankType forNumber(int value) {
      switch (value) {
        case 0: return k_ERankType_Invalid;
        case 1: return k_ERankType_Casual;
        case 2: return k_ERankType_Ranked;
        case 3: return k_ERankType_CasualLegacy;
        case 4: return k_ERankType_RankedLegacy;
        case 5: return k_ERankType_CasualGlicko;
        case 6: return k_ERankType_RankedGlicko;
        case 7: return k_ERankType_RankMax;
        case 100: return k_ERankType_BehaviorPrivate;
        case 101: return k_ERankType_BehaviorPublic;
        case 102: return k_ERankType_Max;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ERankType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ERankType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ERankType>() {
            public ERankType findValueByNumber(int number) {
              return ERankType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(4);
    }

    private static final ERankType[] VALUES = values();

    public static ERankType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ERankType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ERankType)
  }

  /**
   * Protobuf enum {@code dota2.DOTALeaverStatus_t}
   */
  public enum DOTALeaverStatus_t
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_LEAVER_NONE = 0;</code>
     */
    DOTA_LEAVER_NONE(0),
    /**
     * <code>DOTA_LEAVER_DISCONNECTED = 1;</code>
     */
    DOTA_LEAVER_DISCONNECTED(1),
    /**
     * <code>DOTA_LEAVER_DISCONNECTED_TOO_LONG = 2;</code>
     */
    DOTA_LEAVER_DISCONNECTED_TOO_LONG(2),
    /**
     * <code>DOTA_LEAVER_ABANDONED = 3;</code>
     */
    DOTA_LEAVER_ABANDONED(3),
    /**
     * <code>DOTA_LEAVER_AFK = 4;</code>
     */
    DOTA_LEAVER_AFK(4),
    /**
     * <code>DOTA_LEAVER_NEVER_CONNECTED = 5;</code>
     */
    DOTA_LEAVER_NEVER_CONNECTED(5),
    /**
     * <code>DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG = 6;</code>
     */
    DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG(6),
    /**
     * <code>DOTA_LEAVER_FAILED_TO_READY_UP = 7;</code>
     */
    DOTA_LEAVER_FAILED_TO_READY_UP(7),
    /**
     * <code>DOTA_LEAVER_DECLINED = 8;</code>
     */
    DOTA_LEAVER_DECLINED(8),
    /**
     * <code>DOTA_LEAVER_DECLINED_REQUEUE = 9;</code>
     */
    DOTA_LEAVER_DECLINED_REQUEUE(9),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTALeaverStatus_t.class.getName());
    }
    /**
     * <code>DOTA_LEAVER_NONE = 0;</code>
     */
    public static final int DOTA_LEAVER_NONE_VALUE = 0;
    /**
     * <code>DOTA_LEAVER_DISCONNECTED = 1;</code>
     */
    public static final int DOTA_LEAVER_DISCONNECTED_VALUE = 1;
    /**
     * <code>DOTA_LEAVER_DISCONNECTED_TOO_LONG = 2;</code>
     */
    public static final int DOTA_LEAVER_DISCONNECTED_TOO_LONG_VALUE = 2;
    /**
     * <code>DOTA_LEAVER_ABANDONED = 3;</code>
     */
    public static final int DOTA_LEAVER_ABANDONED_VALUE = 3;
    /**
     * <code>DOTA_LEAVER_AFK = 4;</code>
     */
    public static final int DOTA_LEAVER_AFK_VALUE = 4;
    /**
     * <code>DOTA_LEAVER_NEVER_CONNECTED = 5;</code>
     */
    public static final int DOTA_LEAVER_NEVER_CONNECTED_VALUE = 5;
    /**
     * <code>DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG = 6;</code>
     */
    public static final int DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG_VALUE = 6;
    /**
     * <code>DOTA_LEAVER_FAILED_TO_READY_UP = 7;</code>
     */
    public static final int DOTA_LEAVER_FAILED_TO_READY_UP_VALUE = 7;
    /**
     * <code>DOTA_LEAVER_DECLINED = 8;</code>
     */
    public static final int DOTA_LEAVER_DECLINED_VALUE = 8;
    /**
     * <code>DOTA_LEAVER_DECLINED_REQUEUE = 9;</code>
     */
    public static final int DOTA_LEAVER_DECLINED_REQUEUE_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTALeaverStatus_t valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTALeaverStatus_t forNumber(int value) {
      switch (value) {
        case 0: return DOTA_LEAVER_NONE;
        case 1: return DOTA_LEAVER_DISCONNECTED;
        case 2: return DOTA_LEAVER_DISCONNECTED_TOO_LONG;
        case 3: return DOTA_LEAVER_ABANDONED;
        case 4: return DOTA_LEAVER_AFK;
        case 5: return DOTA_LEAVER_NEVER_CONNECTED;
        case 6: return DOTA_LEAVER_NEVER_CONNECTED_TOO_LONG;
        case 7: return DOTA_LEAVER_FAILED_TO_READY_UP;
        case 8: return DOTA_LEAVER_DECLINED;
        case 9: return DOTA_LEAVER_DECLINED_REQUEUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTALeaverStatus_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTALeaverStatus_t> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTALeaverStatus_t>() {
            public DOTALeaverStatus_t findValueByNumber(int number) {
              return DOTALeaverStatus_t.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(5);
    }

    private static final DOTALeaverStatus_t[] VALUES = values();

    public static DOTALeaverStatus_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTALeaverStatus_t(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTALeaverStatus_t)
  }

  /**
   * Protobuf enum {@code dota2.DOTAConnectionState_t}
   */
  public enum DOTAConnectionState_t
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_CONNECTION_STATE_UNKNOWN = 0;</code>
     */
    DOTA_CONNECTION_STATE_UNKNOWN(0),
    /**
     * <code>DOTA_CONNECTION_STATE_NOT_YET_CONNECTED = 1;</code>
     */
    DOTA_CONNECTION_STATE_NOT_YET_CONNECTED(1),
    /**
     * <code>DOTA_CONNECTION_STATE_CONNECTED = 2;</code>
     */
    DOTA_CONNECTION_STATE_CONNECTED(2),
    /**
     * <code>DOTA_CONNECTION_STATE_DISCONNECTED = 3;</code>
     */
    DOTA_CONNECTION_STATE_DISCONNECTED(3),
    /**
     * <code>DOTA_CONNECTION_STATE_ABANDONED = 4;</code>
     */
    DOTA_CONNECTION_STATE_ABANDONED(4),
    /**
     * <code>DOTA_CONNECTION_STATE_LOADING = 5;</code>
     */
    DOTA_CONNECTION_STATE_LOADING(5),
    /**
     * <code>DOTA_CONNECTION_STATE_FAILED = 6;</code>
     */
    DOTA_CONNECTION_STATE_FAILED(6),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTAConnectionState_t.class.getName());
    }
    /**
     * <code>DOTA_CONNECTION_STATE_UNKNOWN = 0;</code>
     */
    public static final int DOTA_CONNECTION_STATE_UNKNOWN_VALUE = 0;
    /**
     * <code>DOTA_CONNECTION_STATE_NOT_YET_CONNECTED = 1;</code>
     */
    public static final int DOTA_CONNECTION_STATE_NOT_YET_CONNECTED_VALUE = 1;
    /**
     * <code>DOTA_CONNECTION_STATE_CONNECTED = 2;</code>
     */
    public static final int DOTA_CONNECTION_STATE_CONNECTED_VALUE = 2;
    /**
     * <code>DOTA_CONNECTION_STATE_DISCONNECTED = 3;</code>
     */
    public static final int DOTA_CONNECTION_STATE_DISCONNECTED_VALUE = 3;
    /**
     * <code>DOTA_CONNECTION_STATE_ABANDONED = 4;</code>
     */
    public static final int DOTA_CONNECTION_STATE_ABANDONED_VALUE = 4;
    /**
     * <code>DOTA_CONNECTION_STATE_LOADING = 5;</code>
     */
    public static final int DOTA_CONNECTION_STATE_LOADING_VALUE = 5;
    /**
     * <code>DOTA_CONNECTION_STATE_FAILED = 6;</code>
     */
    public static final int DOTA_CONNECTION_STATE_FAILED_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTAConnectionState_t valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTAConnectionState_t forNumber(int value) {
      switch (value) {
        case 0: return DOTA_CONNECTION_STATE_UNKNOWN;
        case 1: return DOTA_CONNECTION_STATE_NOT_YET_CONNECTED;
        case 2: return DOTA_CONNECTION_STATE_CONNECTED;
        case 3: return DOTA_CONNECTION_STATE_DISCONNECTED;
        case 4: return DOTA_CONNECTION_STATE_ABANDONED;
        case 5: return DOTA_CONNECTION_STATE_LOADING;
        case 6: return DOTA_CONNECTION_STATE_FAILED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTAConnectionState_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTAConnectionState_t> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTAConnectionState_t>() {
            public DOTAConnectionState_t findValueByNumber(int number) {
              return DOTAConnectionState_t.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(6);
    }

    private static final DOTAConnectionState_t[] VALUES = values();

    public static DOTAConnectionState_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTAConnectionState_t(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTAConnectionState_t)
  }

  /**
   * Protobuf enum {@code dota2.Fantasy_Roles}
   */
  public enum Fantasy_Roles
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FANTASY_ROLE_UNDEFINED = 0;</code>
     */
    FANTASY_ROLE_UNDEFINED(0),
    /**
     * <code>FANTASY_ROLE_CORE = 1;</code>
     */
    FANTASY_ROLE_CORE(1),
    /**
     * <code>FANTASY_ROLE_SUPPORT = 2;</code>
     */
    FANTASY_ROLE_SUPPORT(2),
    /**
     * <code>FANTASY_ROLE_OFFLANE = 3;</code>
     */
    FANTASY_ROLE_OFFLANE(3),
    /**
     * <code>FANTASY_ROLE_MID = 4;</code>
     */
    FANTASY_ROLE_MID(4),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Fantasy_Roles.class.getName());
    }
    /**
     * <code>FANTASY_ROLE_UNDEFINED = 0;</code>
     */
    public static final int FANTASY_ROLE_UNDEFINED_VALUE = 0;
    /**
     * <code>FANTASY_ROLE_CORE = 1;</code>
     */
    public static final int FANTASY_ROLE_CORE_VALUE = 1;
    /**
     * <code>FANTASY_ROLE_SUPPORT = 2;</code>
     */
    public static final int FANTASY_ROLE_SUPPORT_VALUE = 2;
    /**
     * <code>FANTASY_ROLE_OFFLANE = 3;</code>
     */
    public static final int FANTASY_ROLE_OFFLANE_VALUE = 3;
    /**
     * <code>FANTASY_ROLE_MID = 4;</code>
     */
    public static final int FANTASY_ROLE_MID_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Fantasy_Roles valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Fantasy_Roles forNumber(int value) {
      switch (value) {
        case 0: return FANTASY_ROLE_UNDEFINED;
        case 1: return FANTASY_ROLE_CORE;
        case 2: return FANTASY_ROLE_SUPPORT;
        case 3: return FANTASY_ROLE_OFFLANE;
        case 4: return FANTASY_ROLE_MID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Roles>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Fantasy_Roles> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fantasy_Roles>() {
            public Fantasy_Roles findValueByNumber(int number) {
              return Fantasy_Roles.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(7);
    }

    private static final Fantasy_Roles[] VALUES = values();

    public static Fantasy_Roles valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Fantasy_Roles(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.Fantasy_Roles)
  }

  /**
   * Protobuf enum {@code dota2.Fantasy_Scoring}
   */
  public enum Fantasy_Scoring
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FANTASY_SCORING_KILLS = 0;</code>
     */
    FANTASY_SCORING_KILLS(0),
    /**
     * <code>FANTASY_SCORING_DEATHS = 1;</code>
     */
    FANTASY_SCORING_DEATHS(1),
    /**
     * <code>FANTASY_SCORING_CS = 2;</code>
     */
    FANTASY_SCORING_CS(2),
    /**
     * <code>FANTASY_SCORING_GPM = 3;</code>
     */
    FANTASY_SCORING_GPM(3),
    /**
     * <code>FANTASY_SCORING_TOWER_KILLS = 4;</code>
     */
    FANTASY_SCORING_TOWER_KILLS(4),
    /**
     * <code>FANTASY_SCORING_ROSHAN_KILLS = 5;</code>
     */
    FANTASY_SCORING_ROSHAN_KILLS(5),
    /**
     * <code>FANTASY_SCORING_TEAMFIGHT_PARTICIPATION = 6;</code>
     */
    FANTASY_SCORING_TEAMFIGHT_PARTICIPATION(6),
    /**
     * <code>FANTASY_SCORING_WARDS_PLANTED = 7;</code>
     */
    FANTASY_SCORING_WARDS_PLANTED(7),
    /**
     * <code>FANTASY_SCORING_CAMPS_STACKED = 8;</code>
     */
    FANTASY_SCORING_CAMPS_STACKED(8),
    /**
     * <code>FANTASY_SCORING_RUNES_GRABBED = 9;</code>
     */
    FANTASY_SCORING_RUNES_GRABBED(9),
    /**
     * <code>FANTASY_SCORING_FIRST_BLOOD = 10;</code>
     */
    FANTASY_SCORING_FIRST_BLOOD(10),
    /**
     * <code>FANTASY_SCORING_STUNS = 11;</code>
     */
    FANTASY_SCORING_STUNS(11),
    /**
     * <code>FANTASY_SCORING_SMOKES_USED = 12;</code>
     */
    FANTASY_SCORING_SMOKES_USED(12),
    /**
     * <code>FANTASY_SCORING_NEUTRAL_TOKENS_FOUND = 13;</code>
     */
    FANTASY_SCORING_NEUTRAL_TOKENS_FOUND(13),
    /**
     * <code>FANTASY_SCORING_WATCHERS_TAKEN = 14;</code>
     */
    FANTASY_SCORING_WATCHERS_TAKEN(14),
    /**
     * <code>FANTASY_SCORING_LOTUSES_GAINED = 15;</code>
     */
    FANTASY_SCORING_LOTUSES_GAINED(15),
    /**
     * <code>FANTASY_SCORING_TORMENTOR_KILLS = 16;</code>
     */
    FANTASY_SCORING_TORMENTOR_KILLS(16),
    /**
     * <code>FANTASY_SCORING_COURIER_KILLS = 17;</code>
     */
    FANTASY_SCORING_COURIER_KILLS(17),
    /**
     * <code>FANTASY_SCORING_TYPES = 18;</code>
     */
    FANTASY_SCORING_TYPES(18),
    /**
     * <code>FANTASY_SCORING_INVALID = 19;</code>
     */
    FANTASY_SCORING_INVALID(19),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Fantasy_Scoring.class.getName());
    }
    /**
     * <code>FANTASY_SCORING_KILLS = 0;</code>
     */
    public static final int FANTASY_SCORING_KILLS_VALUE = 0;
    /**
     * <code>FANTASY_SCORING_DEATHS = 1;</code>
     */
    public static final int FANTASY_SCORING_DEATHS_VALUE = 1;
    /**
     * <code>FANTASY_SCORING_CS = 2;</code>
     */
    public static final int FANTASY_SCORING_CS_VALUE = 2;
    /**
     * <code>FANTASY_SCORING_GPM = 3;</code>
     */
    public static final int FANTASY_SCORING_GPM_VALUE = 3;
    /**
     * <code>FANTASY_SCORING_TOWER_KILLS = 4;</code>
     */
    public static final int FANTASY_SCORING_TOWER_KILLS_VALUE = 4;
    /**
     * <code>FANTASY_SCORING_ROSHAN_KILLS = 5;</code>
     */
    public static final int FANTASY_SCORING_ROSHAN_KILLS_VALUE = 5;
    /**
     * <code>FANTASY_SCORING_TEAMFIGHT_PARTICIPATION = 6;</code>
     */
    public static final int FANTASY_SCORING_TEAMFIGHT_PARTICIPATION_VALUE = 6;
    /**
     * <code>FANTASY_SCORING_WARDS_PLANTED = 7;</code>
     */
    public static final int FANTASY_SCORING_WARDS_PLANTED_VALUE = 7;
    /**
     * <code>FANTASY_SCORING_CAMPS_STACKED = 8;</code>
     */
    public static final int FANTASY_SCORING_CAMPS_STACKED_VALUE = 8;
    /**
     * <code>FANTASY_SCORING_RUNES_GRABBED = 9;</code>
     */
    public static final int FANTASY_SCORING_RUNES_GRABBED_VALUE = 9;
    /**
     * <code>FANTASY_SCORING_FIRST_BLOOD = 10;</code>
     */
    public static final int FANTASY_SCORING_FIRST_BLOOD_VALUE = 10;
    /**
     * <code>FANTASY_SCORING_STUNS = 11;</code>
     */
    public static final int FANTASY_SCORING_STUNS_VALUE = 11;
    /**
     * <code>FANTASY_SCORING_SMOKES_USED = 12;</code>
     */
    public static final int FANTASY_SCORING_SMOKES_USED_VALUE = 12;
    /**
     * <code>FANTASY_SCORING_NEUTRAL_TOKENS_FOUND = 13;</code>
     */
    public static final int FANTASY_SCORING_NEUTRAL_TOKENS_FOUND_VALUE = 13;
    /**
     * <code>FANTASY_SCORING_WATCHERS_TAKEN = 14;</code>
     */
    public static final int FANTASY_SCORING_WATCHERS_TAKEN_VALUE = 14;
    /**
     * <code>FANTASY_SCORING_LOTUSES_GAINED = 15;</code>
     */
    public static final int FANTASY_SCORING_LOTUSES_GAINED_VALUE = 15;
    /**
     * <code>FANTASY_SCORING_TORMENTOR_KILLS = 16;</code>
     */
    public static final int FANTASY_SCORING_TORMENTOR_KILLS_VALUE = 16;
    /**
     * <code>FANTASY_SCORING_COURIER_KILLS = 17;</code>
     */
    public static final int FANTASY_SCORING_COURIER_KILLS_VALUE = 17;
    /**
     * <code>FANTASY_SCORING_TYPES = 18;</code>
     */
    public static final int FANTASY_SCORING_TYPES_VALUE = 18;
    /**
     * <code>FANTASY_SCORING_INVALID = 19;</code>
     */
    public static final int FANTASY_SCORING_INVALID_VALUE = 19;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Fantasy_Scoring valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Fantasy_Scoring forNumber(int value) {
      switch (value) {
        case 0: return FANTASY_SCORING_KILLS;
        case 1: return FANTASY_SCORING_DEATHS;
        case 2: return FANTASY_SCORING_CS;
        case 3: return FANTASY_SCORING_GPM;
        case 4: return FANTASY_SCORING_TOWER_KILLS;
        case 5: return FANTASY_SCORING_ROSHAN_KILLS;
        case 6: return FANTASY_SCORING_TEAMFIGHT_PARTICIPATION;
        case 7: return FANTASY_SCORING_WARDS_PLANTED;
        case 8: return FANTASY_SCORING_CAMPS_STACKED;
        case 9: return FANTASY_SCORING_RUNES_GRABBED;
        case 10: return FANTASY_SCORING_FIRST_BLOOD;
        case 11: return FANTASY_SCORING_STUNS;
        case 12: return FANTASY_SCORING_SMOKES_USED;
        case 13: return FANTASY_SCORING_NEUTRAL_TOKENS_FOUND;
        case 14: return FANTASY_SCORING_WATCHERS_TAKEN;
        case 15: return FANTASY_SCORING_LOTUSES_GAINED;
        case 16: return FANTASY_SCORING_TORMENTOR_KILLS;
        case 17: return FANTASY_SCORING_COURIER_KILLS;
        case 18: return FANTASY_SCORING_TYPES;
        case 19: return FANTASY_SCORING_INVALID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Scoring>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Fantasy_Scoring> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fantasy_Scoring>() {
            public Fantasy_Scoring findValueByNumber(int number) {
              return Fantasy_Scoring.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(8);
    }

    private static final Fantasy_Scoring[] VALUES = values();

    public static Fantasy_Scoring valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Fantasy_Scoring(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.Fantasy_Scoring)
  }

  /**
   * Protobuf enum {@code dota2.Fantasy_Team_Slots}
   */
  public enum Fantasy_Team_Slots
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FANTASY_SLOT_NONE = 0;</code>
     */
    FANTASY_SLOT_NONE(0),
    /**
     * <code>FANTASY_SLOT_CORE = 1;</code>
     */
    FANTASY_SLOT_CORE(1),
    /**
     * <code>FANTASY_SLOT_SUPPORT = 2;</code>
     */
    FANTASY_SLOT_SUPPORT(2),
    /**
     * <code>FANTASY_SLOT_ANY = 3;</code>
     */
    FANTASY_SLOT_ANY(3),
    /**
     * <code>FANTASY_SLOT_BENCH = 4;</code>
     */
    FANTASY_SLOT_BENCH(4),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Fantasy_Team_Slots.class.getName());
    }
    /**
     * <code>FANTASY_SLOT_NONE = 0;</code>
     */
    public static final int FANTASY_SLOT_NONE_VALUE = 0;
    /**
     * <code>FANTASY_SLOT_CORE = 1;</code>
     */
    public static final int FANTASY_SLOT_CORE_VALUE = 1;
    /**
     * <code>FANTASY_SLOT_SUPPORT = 2;</code>
     */
    public static final int FANTASY_SLOT_SUPPORT_VALUE = 2;
    /**
     * <code>FANTASY_SLOT_ANY = 3;</code>
     */
    public static final int FANTASY_SLOT_ANY_VALUE = 3;
    /**
     * <code>FANTASY_SLOT_BENCH = 4;</code>
     */
    public static final int FANTASY_SLOT_BENCH_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Fantasy_Team_Slots valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Fantasy_Team_Slots forNumber(int value) {
      switch (value) {
        case 0: return FANTASY_SLOT_NONE;
        case 1: return FANTASY_SLOT_CORE;
        case 2: return FANTASY_SLOT_SUPPORT;
        case 3: return FANTASY_SLOT_ANY;
        case 4: return FANTASY_SLOT_BENCH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Team_Slots>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Fantasy_Team_Slots> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fantasy_Team_Slots>() {
            public Fantasy_Team_Slots findValueByNumber(int number) {
              return Fantasy_Team_Slots.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(9);
    }

    private static final Fantasy_Team_Slots[] VALUES = values();

    public static Fantasy_Team_Slots valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Fantasy_Team_Slots(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.Fantasy_Team_Slots)
  }

  /**
   * Protobuf enum {@code dota2.Fantasy_Selection_Mode}
   */
  public enum Fantasy_Selection_Mode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FANTASY_SELECTION_INVALID = 0;</code>
     */
    FANTASY_SELECTION_INVALID(0),
    /**
     * <code>FANTASY_SELECTION_LOCKED = 1;</code>
     */
    FANTASY_SELECTION_LOCKED(1),
    /**
     * <code>FANTASY_SELECTION_SHUFFLE = 2;</code>
     */
    FANTASY_SELECTION_SHUFFLE(2),
    /**
     * <code>FANTASY_SELECTION_FREE_PICK = 3;</code>
     */
    FANTASY_SELECTION_FREE_PICK(3),
    /**
     * <code>FANTASY_SELECTION_ENDED = 4;</code>
     */
    FANTASY_SELECTION_ENDED(4),
    /**
     * <code>FANTASY_SELECTION_PRE_SEASON = 5;</code>
     */
    FANTASY_SELECTION_PRE_SEASON(5),
    /**
     * <code>FANTASY_SELECTION_PRE_DRAFT = 6;</code>
     */
    FANTASY_SELECTION_PRE_DRAFT(6),
    /**
     * <code>FANTASY_SELECTION_DRAFTING = 7;</code>
     */
    FANTASY_SELECTION_DRAFTING(7),
    /**
     * <code>FANTASY_SELECTION_REGULAR_SEASON = 8;</code>
     */
    FANTASY_SELECTION_REGULAR_SEASON(8),
    /**
     * <code>FANTASY_SELECTION_CARD_BASED = 9;</code>
     */
    FANTASY_SELECTION_CARD_BASED(9),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Fantasy_Selection_Mode.class.getName());
    }
    /**
     * <code>FANTASY_SELECTION_INVALID = 0;</code>
     */
    public static final int FANTASY_SELECTION_INVALID_VALUE = 0;
    /**
     * <code>FANTASY_SELECTION_LOCKED = 1;</code>
     */
    public static final int FANTASY_SELECTION_LOCKED_VALUE = 1;
    /**
     * <code>FANTASY_SELECTION_SHUFFLE = 2;</code>
     */
    public static final int FANTASY_SELECTION_SHUFFLE_VALUE = 2;
    /**
     * <code>FANTASY_SELECTION_FREE_PICK = 3;</code>
     */
    public static final int FANTASY_SELECTION_FREE_PICK_VALUE = 3;
    /**
     * <code>FANTASY_SELECTION_ENDED = 4;</code>
     */
    public static final int FANTASY_SELECTION_ENDED_VALUE = 4;
    /**
     * <code>FANTASY_SELECTION_PRE_SEASON = 5;</code>
     */
    public static final int FANTASY_SELECTION_PRE_SEASON_VALUE = 5;
    /**
     * <code>FANTASY_SELECTION_PRE_DRAFT = 6;</code>
     */
    public static final int FANTASY_SELECTION_PRE_DRAFT_VALUE = 6;
    /**
     * <code>FANTASY_SELECTION_DRAFTING = 7;</code>
     */
    public static final int FANTASY_SELECTION_DRAFTING_VALUE = 7;
    /**
     * <code>FANTASY_SELECTION_REGULAR_SEASON = 8;</code>
     */
    public static final int FANTASY_SELECTION_REGULAR_SEASON_VALUE = 8;
    /**
     * <code>FANTASY_SELECTION_CARD_BASED = 9;</code>
     */
    public static final int FANTASY_SELECTION_CARD_BASED_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Fantasy_Selection_Mode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Fantasy_Selection_Mode forNumber(int value) {
      switch (value) {
        case 0: return FANTASY_SELECTION_INVALID;
        case 1: return FANTASY_SELECTION_LOCKED;
        case 2: return FANTASY_SELECTION_SHUFFLE;
        case 3: return FANTASY_SELECTION_FREE_PICK;
        case 4: return FANTASY_SELECTION_ENDED;
        case 5: return FANTASY_SELECTION_PRE_SEASON;
        case 6: return FANTASY_SELECTION_PRE_DRAFT;
        case 7: return FANTASY_SELECTION_DRAFTING;
        case 8: return FANTASY_SELECTION_REGULAR_SEASON;
        case 9: return FANTASY_SELECTION_CARD_BASED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Selection_Mode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Fantasy_Selection_Mode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fantasy_Selection_Mode>() {
            public Fantasy_Selection_Mode findValueByNumber(int number) {
              return Fantasy_Selection_Mode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(10);
    }

    private static final Fantasy_Selection_Mode[] VALUES = values();

    public static Fantasy_Selection_Mode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Fantasy_Selection_Mode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.Fantasy_Selection_Mode)
  }

  /**
   * Protobuf enum {@code dota2.Fantasy_Gem_Type}
   */
  public enum Fantasy_Gem_Type
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FANTASY_GEM_TYPE_RUBY = 0;</code>
     */
    FANTASY_GEM_TYPE_RUBY(0),
    /**
     * <code>FANTASY_GEM_TYPE_SAPPHIRE = 1;</code>
     */
    FANTASY_GEM_TYPE_SAPPHIRE(1),
    /**
     * <code>FANTASY_GEM_TYPE_EMERALD = 2;</code>
     */
    FANTASY_GEM_TYPE_EMERALD(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Fantasy_Gem_Type.class.getName());
    }
    /**
     * <code>FANTASY_GEM_TYPE_RUBY = 0;</code>
     */
    public static final int FANTASY_GEM_TYPE_RUBY_VALUE = 0;
    /**
     * <code>FANTASY_GEM_TYPE_SAPPHIRE = 1;</code>
     */
    public static final int FANTASY_GEM_TYPE_SAPPHIRE_VALUE = 1;
    /**
     * <code>FANTASY_GEM_TYPE_EMERALD = 2;</code>
     */
    public static final int FANTASY_GEM_TYPE_EMERALD_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Fantasy_Gem_Type valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Fantasy_Gem_Type forNumber(int value) {
      switch (value) {
        case 0: return FANTASY_GEM_TYPE_RUBY;
        case 1: return FANTASY_GEM_TYPE_SAPPHIRE;
        case 2: return FANTASY_GEM_TYPE_EMERALD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Fantasy_Gem_Type>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Fantasy_Gem_Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Fantasy_Gem_Type>() {
            public Fantasy_Gem_Type findValueByNumber(int number) {
              return Fantasy_Gem_Type.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(11);
    }

    private static final Fantasy_Gem_Type[] VALUES = values();

    public static Fantasy_Gem_Type valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Fantasy_Gem_Type(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.Fantasy_Gem_Type)
  }

  /**
   * Protobuf enum {@code dota2.DOTAChatChannelType_t}
   */
  public enum DOTAChatChannelType_t
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTAChannelType_Regional = 0;</code>
     */
    DOTAChannelType_Regional(0),
    /**
     * <code>DOTAChannelType_Custom = 1;</code>
     */
    DOTAChannelType_Custom(1),
    /**
     * <code>DOTAChannelType_Party = 2;</code>
     */
    DOTAChannelType_Party(2),
    /**
     * <code>DOTAChannelType_Lobby = 3;</code>
     */
    DOTAChannelType_Lobby(3),
    /**
     * <code>DOTAChannelType_Team = 4;</code>
     */
    DOTAChannelType_Team(4),
    /**
     * <code>DOTAChannelType_Guild = 5;</code>
     */
    DOTAChannelType_Guild(5),
    /**
     * <code>DOTAChannelType_Fantasy = 6;</code>
     */
    DOTAChannelType_Fantasy(6),
    /**
     * <code>DOTAChannelType_Whisper = 7;</code>
     */
    DOTAChannelType_Whisper(7),
    /**
     * <code>DOTAChannelType_Console = 8;</code>
     */
    DOTAChannelType_Console(8),
    /**
     * <code>DOTAChannelType_Tab = 9;</code>
     */
    DOTAChannelType_Tab(9),
    /**
     * <code>DOTAChannelType_Invalid = 10;</code>
     */
    DOTAChannelType_Invalid(10),
    /**
     * <code>DOTAChannelType_GameAll = 11;</code>
     */
    DOTAChannelType_GameAll(11),
    /**
     * <code>DOTAChannelType_GameAllies = 12;</code>
     */
    DOTAChannelType_GameAllies(12),
    /**
     * <code>DOTAChannelType_GameSpectator = 13;</code>
     */
    DOTAChannelType_GameSpectator(13),
    /**
     * <code>DOTAChannelType_GameCoaching = 14;</code>
     */
    DOTAChannelType_GameCoaching(14),
    /**
     * <code>DOTAChannelType_Cafe = 15;</code>
     */
    DOTAChannelType_Cafe(15),
    /**
     * <code>DOTAChannelType_CustomGame = 16;</code>
     */
    DOTAChannelType_CustomGame(16),
    /**
     * <code>DOTAChannelType_Private = 17;</code>
     */
    DOTAChannelType_Private(17),
    /**
     * <code>DOTAChannelType_PostGame = 18;</code>
     */
    DOTAChannelType_PostGame(18),
    /**
     * <code>DOTAChannelType_BattleCup = 19;</code>
     */
    DOTAChannelType_BattleCup(19),
    /**
     * <code>DOTAChannelType_HLTVSpectator = 20;</code>
     */
    DOTAChannelType_HLTVSpectator(20),
    /**
     * <code>DOTAChannelType_GameEvents = 21;</code>
     */
    DOTAChannelType_GameEvents(21),
    /**
     * <code>DOTAChannelType_Trivia = 22;</code>
     */
    DOTAChannelType_Trivia(22),
    /**
     * <code>DOTAChannelType_NewPlayer = 23;</code>
     */
    DOTAChannelType_NewPlayer(23),
    /**
     * <code>DOTAChannelType_PrivateCoaching = 24;</code>
     */
    DOTAChannelType_PrivateCoaching(24),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTAChatChannelType_t.class.getName());
    }
    /**
     * <code>DOTAChannelType_Regional = 0;</code>
     */
    public static final int DOTAChannelType_Regional_VALUE = 0;
    /**
     * <code>DOTAChannelType_Custom = 1;</code>
     */
    public static final int DOTAChannelType_Custom_VALUE = 1;
    /**
     * <code>DOTAChannelType_Party = 2;</code>
     */
    public static final int DOTAChannelType_Party_VALUE = 2;
    /**
     * <code>DOTAChannelType_Lobby = 3;</code>
     */
    public static final int DOTAChannelType_Lobby_VALUE = 3;
    /**
     * <code>DOTAChannelType_Team = 4;</code>
     */
    public static final int DOTAChannelType_Team_VALUE = 4;
    /**
     * <code>DOTAChannelType_Guild = 5;</code>
     */
    public static final int DOTAChannelType_Guild_VALUE = 5;
    /**
     * <code>DOTAChannelType_Fantasy = 6;</code>
     */
    public static final int DOTAChannelType_Fantasy_VALUE = 6;
    /**
     * <code>DOTAChannelType_Whisper = 7;</code>
     */
    public static final int DOTAChannelType_Whisper_VALUE = 7;
    /**
     * <code>DOTAChannelType_Console = 8;</code>
     */
    public static final int DOTAChannelType_Console_VALUE = 8;
    /**
     * <code>DOTAChannelType_Tab = 9;</code>
     */
    public static final int DOTAChannelType_Tab_VALUE = 9;
    /**
     * <code>DOTAChannelType_Invalid = 10;</code>
     */
    public static final int DOTAChannelType_Invalid_VALUE = 10;
    /**
     * <code>DOTAChannelType_GameAll = 11;</code>
     */
    public static final int DOTAChannelType_GameAll_VALUE = 11;
    /**
     * <code>DOTAChannelType_GameAllies = 12;</code>
     */
    public static final int DOTAChannelType_GameAllies_VALUE = 12;
    /**
     * <code>DOTAChannelType_GameSpectator = 13;</code>
     */
    public static final int DOTAChannelType_GameSpectator_VALUE = 13;
    /**
     * <code>DOTAChannelType_GameCoaching = 14;</code>
     */
    public static final int DOTAChannelType_GameCoaching_VALUE = 14;
    /**
     * <code>DOTAChannelType_Cafe = 15;</code>
     */
    public static final int DOTAChannelType_Cafe_VALUE = 15;
    /**
     * <code>DOTAChannelType_CustomGame = 16;</code>
     */
    public static final int DOTAChannelType_CustomGame_VALUE = 16;
    /**
     * <code>DOTAChannelType_Private = 17;</code>
     */
    public static final int DOTAChannelType_Private_VALUE = 17;
    /**
     * <code>DOTAChannelType_PostGame = 18;</code>
     */
    public static final int DOTAChannelType_PostGame_VALUE = 18;
    /**
     * <code>DOTAChannelType_BattleCup = 19;</code>
     */
    public static final int DOTAChannelType_BattleCup_VALUE = 19;
    /**
     * <code>DOTAChannelType_HLTVSpectator = 20;</code>
     */
    public static final int DOTAChannelType_HLTVSpectator_VALUE = 20;
    /**
     * <code>DOTAChannelType_GameEvents = 21;</code>
     */
    public static final int DOTAChannelType_GameEvents_VALUE = 21;
    /**
     * <code>DOTAChannelType_Trivia = 22;</code>
     */
    public static final int DOTAChannelType_Trivia_VALUE = 22;
    /**
     * <code>DOTAChannelType_NewPlayer = 23;</code>
     */
    public static final int DOTAChannelType_NewPlayer_VALUE = 23;
    /**
     * <code>DOTAChannelType_PrivateCoaching = 24;</code>
     */
    public static final int DOTAChannelType_PrivateCoaching_VALUE = 24;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTAChatChannelType_t valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTAChatChannelType_t forNumber(int value) {
      switch (value) {
        case 0: return DOTAChannelType_Regional;
        case 1: return DOTAChannelType_Custom;
        case 2: return DOTAChannelType_Party;
        case 3: return DOTAChannelType_Lobby;
        case 4: return DOTAChannelType_Team;
        case 5: return DOTAChannelType_Guild;
        case 6: return DOTAChannelType_Fantasy;
        case 7: return DOTAChannelType_Whisper;
        case 8: return DOTAChannelType_Console;
        case 9: return DOTAChannelType_Tab;
        case 10: return DOTAChannelType_Invalid;
        case 11: return DOTAChannelType_GameAll;
        case 12: return DOTAChannelType_GameAllies;
        case 13: return DOTAChannelType_GameSpectator;
        case 14: return DOTAChannelType_GameCoaching;
        case 15: return DOTAChannelType_Cafe;
        case 16: return DOTAChannelType_CustomGame;
        case 17: return DOTAChannelType_Private;
        case 18: return DOTAChannelType_PostGame;
        case 19: return DOTAChannelType_BattleCup;
        case 20: return DOTAChannelType_HLTVSpectator;
        case 21: return DOTAChannelType_GameEvents;
        case 22: return DOTAChannelType_Trivia;
        case 23: return DOTAChannelType_NewPlayer;
        case 24: return DOTAChannelType_PrivateCoaching;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTAChatChannelType_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTAChatChannelType_t> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTAChatChannelType_t>() {
            public DOTAChatChannelType_t findValueByNumber(int number) {
              return DOTAChatChannelType_t.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(12);
    }

    private static final DOTAChatChannelType_t[] VALUES = values();

    public static DOTAChatChannelType_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTAChatChannelType_t(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTAChatChannelType_t)
  }

  /**
   * Protobuf enum {@code dota2.EChatSpecialPrivileges}
   */
  public enum EChatSpecialPrivileges
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EChatSpecialPrivileges_None = 0;</code>
     */
    k_EChatSpecialPrivileges_None(0),
    /**
     * <code>k_EChatSpecialPrivileges_Moderator = 1;</code>
     */
    k_EChatSpecialPrivileges_Moderator(1),
    /**
     * <code>k_EChatSpecialPrivileges_SuperModerator = 2;</code>
     */
    k_EChatSpecialPrivileges_SuperModerator(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EChatSpecialPrivileges.class.getName());
    }
    /**
     * <code>k_EChatSpecialPrivileges_None = 0;</code>
     */
    public static final int k_EChatSpecialPrivileges_None_VALUE = 0;
    /**
     * <code>k_EChatSpecialPrivileges_Moderator = 1;</code>
     */
    public static final int k_EChatSpecialPrivileges_Moderator_VALUE = 1;
    /**
     * <code>k_EChatSpecialPrivileges_SuperModerator = 2;</code>
     */
    public static final int k_EChatSpecialPrivileges_SuperModerator_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EChatSpecialPrivileges valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EChatSpecialPrivileges forNumber(int value) {
      switch (value) {
        case 0: return k_EChatSpecialPrivileges_None;
        case 1: return k_EChatSpecialPrivileges_Moderator;
        case 2: return k_EChatSpecialPrivileges_SuperModerator;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EChatSpecialPrivileges>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EChatSpecialPrivileges> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EChatSpecialPrivileges>() {
            public EChatSpecialPrivileges findValueByNumber(int number) {
              return EChatSpecialPrivileges.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(13);
    }

    private static final EChatSpecialPrivileges[] VALUES = values();

    public static EChatSpecialPrivileges valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EChatSpecialPrivileges(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EChatSpecialPrivileges)
  }

  /**
   * Protobuf enum {@code dota2.DOTACommType_t}
   */
  public enum DOTACommType_t
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_COMM_TYPE_NONE = 0;</code>
     */
    DOTA_COMM_TYPE_NONE(0),
    /**
     * <code>DOTA_COMM_TYPE_PING = 1;</code>
     */
    DOTA_COMM_TYPE_PING(1),
    /**
     * <code>DOTA_COMM_TYPE_CHATWHEEL = 2;</code>
     */
    DOTA_COMM_TYPE_CHATWHEEL(2),
    /**
     * <code>DOTA_COMM_TYPE_TIP = 3;</code>
     */
    DOTA_COMM_TYPE_TIP(3),
    /**
     * <code>DOTA_COMM_TYPE_TEXT = 4;</code>
     */
    DOTA_COMM_TYPE_TEXT(4),
    /**
     * <code>DOTA_COMM_TYPE_SHOWCASE = 5;</code>
     */
    DOTA_COMM_TYPE_SHOWCASE(5),
    /**
     * <code>DOTA_COMM_TYPE_VOICE = 6;</code>
     */
    DOTA_COMM_TYPE_VOICE(6),
    /**
     * <code>DOTA_COMM_TYPE_ALLY_ABILITY = 7;</code>
     */
    DOTA_COMM_TYPE_ALLY_ABILITY(7),
    /**
     * <code>DOTA_COMM_TYPE_PAUSE = 8;</code>
     */
    DOTA_COMM_TYPE_PAUSE(8),
    /**
     * <code>DOTA_COMM_TYPE_COACHING = 9;</code>
     */
    DOTA_COMM_TYPE_COACHING(9),
    /**
     * <code>DOTA_COMM_TYPE_NOCOOLDOWN = 10;</code>
     */
    DOTA_COMM_TYPE_NOCOOLDOWN(10),
    /**
     * <code>DOTA_COMM_TYPE_RANKEDMATCHMAKE = 11;</code>
     */
    DOTA_COMM_TYPE_RANKEDMATCHMAKE(11),
    /**
     * <code>DOTA_COMM_TYPE_DROPS = 12;</code>
     */
    DOTA_COMM_TYPE_DROPS(12),
    /**
     * <code>DOTA_COMM_TYPE_NEWPLAYER_EXPERT = 13;</code>
     */
    DOTA_COMM_TYPE_NEWPLAYER_EXPERT(13),
    /**
     * <code>DOTA_COMM_TYPE_COACHED = 14;</code>
     */
    DOTA_COMM_TYPE_COACHED(14),
    /**
     * <code>DOTA_COMM_TYPE_MAPDRAWING = 15;</code>
     */
    DOTA_COMM_TYPE_MAPDRAWING(15),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTACommType_t.class.getName());
    }
    /**
     * <code>DOTA_COMM_TYPE_NONE = 0;</code>
     */
    public static final int DOTA_COMM_TYPE_NONE_VALUE = 0;
    /**
     * <code>DOTA_COMM_TYPE_PING = 1;</code>
     */
    public static final int DOTA_COMM_TYPE_PING_VALUE = 1;
    /**
     * <code>DOTA_COMM_TYPE_CHATWHEEL = 2;</code>
     */
    public static final int DOTA_COMM_TYPE_CHATWHEEL_VALUE = 2;
    /**
     * <code>DOTA_COMM_TYPE_TIP = 3;</code>
     */
    public static final int DOTA_COMM_TYPE_TIP_VALUE = 3;
    /**
     * <code>DOTA_COMM_TYPE_TEXT = 4;</code>
     */
    public static final int DOTA_COMM_TYPE_TEXT_VALUE = 4;
    /**
     * <code>DOTA_COMM_TYPE_SHOWCASE = 5;</code>
     */
    public static final int DOTA_COMM_TYPE_SHOWCASE_VALUE = 5;
    /**
     * <code>DOTA_COMM_TYPE_VOICE = 6;</code>
     */
    public static final int DOTA_COMM_TYPE_VOICE_VALUE = 6;
    /**
     * <code>DOTA_COMM_TYPE_ALLY_ABILITY = 7;</code>
     */
    public static final int DOTA_COMM_TYPE_ALLY_ABILITY_VALUE = 7;
    /**
     * <code>DOTA_COMM_TYPE_PAUSE = 8;</code>
     */
    public static final int DOTA_COMM_TYPE_PAUSE_VALUE = 8;
    /**
     * <code>DOTA_COMM_TYPE_COACHING = 9;</code>
     */
    public static final int DOTA_COMM_TYPE_COACHING_VALUE = 9;
    /**
     * <code>DOTA_COMM_TYPE_NOCOOLDOWN = 10;</code>
     */
    public static final int DOTA_COMM_TYPE_NOCOOLDOWN_VALUE = 10;
    /**
     * <code>DOTA_COMM_TYPE_RANKEDMATCHMAKE = 11;</code>
     */
    public static final int DOTA_COMM_TYPE_RANKEDMATCHMAKE_VALUE = 11;
    /**
     * <code>DOTA_COMM_TYPE_DROPS = 12;</code>
     */
    public static final int DOTA_COMM_TYPE_DROPS_VALUE = 12;
    /**
     * <code>DOTA_COMM_TYPE_NEWPLAYER_EXPERT = 13;</code>
     */
    public static final int DOTA_COMM_TYPE_NEWPLAYER_EXPERT_VALUE = 13;
    /**
     * <code>DOTA_COMM_TYPE_COACHED = 14;</code>
     */
    public static final int DOTA_COMM_TYPE_COACHED_VALUE = 14;
    /**
     * <code>DOTA_COMM_TYPE_MAPDRAWING = 15;</code>
     */
    public static final int DOTA_COMM_TYPE_MAPDRAWING_VALUE = 15;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTACommType_t valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTACommType_t forNumber(int value) {
      switch (value) {
        case 0: return DOTA_COMM_TYPE_NONE;
        case 1: return DOTA_COMM_TYPE_PING;
        case 2: return DOTA_COMM_TYPE_CHATWHEEL;
        case 3: return DOTA_COMM_TYPE_TIP;
        case 4: return DOTA_COMM_TYPE_TEXT;
        case 5: return DOTA_COMM_TYPE_SHOWCASE;
        case 6: return DOTA_COMM_TYPE_VOICE;
        case 7: return DOTA_COMM_TYPE_ALLY_ABILITY;
        case 8: return DOTA_COMM_TYPE_PAUSE;
        case 9: return DOTA_COMM_TYPE_COACHING;
        case 10: return DOTA_COMM_TYPE_NOCOOLDOWN;
        case 11: return DOTA_COMM_TYPE_RANKEDMATCHMAKE;
        case 12: return DOTA_COMM_TYPE_DROPS;
        case 13: return DOTA_COMM_TYPE_NEWPLAYER_EXPERT;
        case 14: return DOTA_COMM_TYPE_COACHED;
        case 15: return DOTA_COMM_TYPE_MAPDRAWING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTACommType_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTACommType_t> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTACommType_t>() {
            public DOTACommType_t findValueByNumber(int number) {
              return DOTACommType_t.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(14);
    }

    private static final DOTACommType_t[] VALUES = values();

    public static DOTACommType_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTACommType_t(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTACommType_t)
  }

  /**
   * Protobuf enum {@code dota2.DOTACommLevel_t}
   */
  public enum DOTACommLevel_t
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_COMM_LEVEL_NONE = 0;</code>
     */
    DOTA_COMM_LEVEL_NONE(0),
    /**
     * <code>DOTA_COMM_LEVEL_COOLDOWN = 1;</code>
     */
    DOTA_COMM_LEVEL_COOLDOWN(1),
    /**
     * <code>DOTA_COMM_LEVEL_PINGS = 2;</code>
     */
    DOTA_COMM_LEVEL_PINGS(2),
    /**
     * <code>DOTA_COMM_LEVEL_MAPDRAWING = 3;</code>
     */
    DOTA_COMM_LEVEL_MAPDRAWING(3),
    /**
     * <code>DOTA_COMM_LEVEL_CHAT = 4;</code>
     */
    DOTA_COMM_LEVEL_CHAT(4),
    /**
     * <code>DOTA_COMM_LEVEL_TIPPING = 5;</code>
     */
    DOTA_COMM_LEVEL_TIPPING(5),
    /**
     * <code>DOTA_COMM_LEVEL_VOICE = 6;</code>
     */
    DOTA_COMM_LEVEL_VOICE(6),
    /**
     * <code>DOTA_COMM_LEVEL_ALLIED_ABILITY = 7;</code>
     */
    DOTA_COMM_LEVEL_ALLIED_ABILITY(7),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTACommLevel_t.class.getName());
    }
    /**
     * <code>DOTA_COMM_LEVEL_NONE = 0;</code>
     */
    public static final int DOTA_COMM_LEVEL_NONE_VALUE = 0;
    /**
     * <code>DOTA_COMM_LEVEL_COOLDOWN = 1;</code>
     */
    public static final int DOTA_COMM_LEVEL_COOLDOWN_VALUE = 1;
    /**
     * <code>DOTA_COMM_LEVEL_PINGS = 2;</code>
     */
    public static final int DOTA_COMM_LEVEL_PINGS_VALUE = 2;
    /**
     * <code>DOTA_COMM_LEVEL_MAPDRAWING = 3;</code>
     */
    public static final int DOTA_COMM_LEVEL_MAPDRAWING_VALUE = 3;
    /**
     * <code>DOTA_COMM_LEVEL_CHAT = 4;</code>
     */
    public static final int DOTA_COMM_LEVEL_CHAT_VALUE = 4;
    /**
     * <code>DOTA_COMM_LEVEL_TIPPING = 5;</code>
     */
    public static final int DOTA_COMM_LEVEL_TIPPING_VALUE = 5;
    /**
     * <code>DOTA_COMM_LEVEL_VOICE = 6;</code>
     */
    public static final int DOTA_COMM_LEVEL_VOICE_VALUE = 6;
    /**
     * <code>DOTA_COMM_LEVEL_ALLIED_ABILITY = 7;</code>
     */
    public static final int DOTA_COMM_LEVEL_ALLIED_ABILITY_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTACommLevel_t valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTACommLevel_t forNumber(int value) {
      switch (value) {
        case 0: return DOTA_COMM_LEVEL_NONE;
        case 1: return DOTA_COMM_LEVEL_COOLDOWN;
        case 2: return DOTA_COMM_LEVEL_PINGS;
        case 3: return DOTA_COMM_LEVEL_MAPDRAWING;
        case 4: return DOTA_COMM_LEVEL_CHAT;
        case 5: return DOTA_COMM_LEVEL_TIPPING;
        case 6: return DOTA_COMM_LEVEL_VOICE;
        case 7: return DOTA_COMM_LEVEL_ALLIED_ABILITY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTACommLevel_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTACommLevel_t> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTACommLevel_t>() {
            public DOTACommLevel_t findValueByNumber(int number) {
              return DOTACommLevel_t.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(15);
    }

    private static final DOTACommLevel_t[] VALUES = values();

    public static DOTACommLevel_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTACommLevel_t(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTACommLevel_t)
  }

  /**
   * Protobuf enum {@code dota2.DOTABehaviorLevel_t}
   */
  public enum DOTABehaviorLevel_t
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_NONE = 0;</code>
     */
    DOTA_BEHAVIOR_LEVEL_NONE(0),
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_RANKED_ALLOWED = 1;</code>
     */
    DOTA_BEHAVIOR_LEVEL_RANKED_ALLOWED(1),
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_PAUSING = 2;</code>
     */
    DOTA_BEHAVIOR_LEVEL_PAUSING(2),
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_DROPS = 3;</code>
     */
    DOTA_BEHAVIOR_LEVEL_DROPS(3),
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_COACHING = 4;</code>
     */
    DOTA_BEHAVIOR_LEVEL_COACHING(4),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTABehaviorLevel_t.class.getName());
    }
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_NONE = 0;</code>
     */
    public static final int DOTA_BEHAVIOR_LEVEL_NONE_VALUE = 0;
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_RANKED_ALLOWED = 1;</code>
     */
    public static final int DOTA_BEHAVIOR_LEVEL_RANKED_ALLOWED_VALUE = 1;
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_PAUSING = 2;</code>
     */
    public static final int DOTA_BEHAVIOR_LEVEL_PAUSING_VALUE = 2;
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_DROPS = 3;</code>
     */
    public static final int DOTA_BEHAVIOR_LEVEL_DROPS_VALUE = 3;
    /**
     * <code>DOTA_BEHAVIOR_LEVEL_COACHING = 4;</code>
     */
    public static final int DOTA_BEHAVIOR_LEVEL_COACHING_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTABehaviorLevel_t valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTABehaviorLevel_t forNumber(int value) {
      switch (value) {
        case 0: return DOTA_BEHAVIOR_LEVEL_NONE;
        case 1: return DOTA_BEHAVIOR_LEVEL_RANKED_ALLOWED;
        case 2: return DOTA_BEHAVIOR_LEVEL_PAUSING;
        case 3: return DOTA_BEHAVIOR_LEVEL_DROPS;
        case 4: return DOTA_BEHAVIOR_LEVEL_COACHING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTABehaviorLevel_t>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTABehaviorLevel_t> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTABehaviorLevel_t>() {
            public DOTABehaviorLevel_t findValueByNumber(int number) {
              return DOTABehaviorLevel_t.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(16);
    }

    private static final DOTABehaviorLevel_t[] VALUES = values();

    public static DOTABehaviorLevel_t valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTABehaviorLevel_t(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTABehaviorLevel_t)
  }

  /**
   * Protobuf enum {@code dota2.EProfileCardSlotType}
   */
  public enum EProfileCardSlotType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EProfileCardSlotType_Empty = 0;</code>
     */
    k_EProfileCardSlotType_Empty(0),
    /**
     * <code>k_EProfileCardSlotType_Stat = 1;</code>
     */
    k_EProfileCardSlotType_Stat(1),
    /**
     * <code>k_EProfileCardSlotType_Trophy = 2;</code>
     */
    k_EProfileCardSlotType_Trophy(2),
    /**
     * <code>k_EProfileCardSlotType_Item = 3;</code>
     */
    k_EProfileCardSlotType_Item(3),
    /**
     * <code>k_EProfileCardSlotType_Hero = 4;</code>
     */
    k_EProfileCardSlotType_Hero(4),
    /**
     * <code>k_EProfileCardSlotType_Emoticon = 5;</code>
     */
    k_EProfileCardSlotType_Emoticon(5),
    /**
     * <code>k_EProfileCardSlotType_Team = 6;</code>
     */
    k_EProfileCardSlotType_Team(6),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EProfileCardSlotType.class.getName());
    }
    /**
     * <code>k_EProfileCardSlotType_Empty = 0;</code>
     */
    public static final int k_EProfileCardSlotType_Empty_VALUE = 0;
    /**
     * <code>k_EProfileCardSlotType_Stat = 1;</code>
     */
    public static final int k_EProfileCardSlotType_Stat_VALUE = 1;
    /**
     * <code>k_EProfileCardSlotType_Trophy = 2;</code>
     */
    public static final int k_EProfileCardSlotType_Trophy_VALUE = 2;
    /**
     * <code>k_EProfileCardSlotType_Item = 3;</code>
     */
    public static final int k_EProfileCardSlotType_Item_VALUE = 3;
    /**
     * <code>k_EProfileCardSlotType_Hero = 4;</code>
     */
    public static final int k_EProfileCardSlotType_Hero_VALUE = 4;
    /**
     * <code>k_EProfileCardSlotType_Emoticon = 5;</code>
     */
    public static final int k_EProfileCardSlotType_Emoticon_VALUE = 5;
    /**
     * <code>k_EProfileCardSlotType_Team = 6;</code>
     */
    public static final int k_EProfileCardSlotType_Team_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EProfileCardSlotType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EProfileCardSlotType forNumber(int value) {
      switch (value) {
        case 0: return k_EProfileCardSlotType_Empty;
        case 1: return k_EProfileCardSlotType_Stat;
        case 2: return k_EProfileCardSlotType_Trophy;
        case 3: return k_EProfileCardSlotType_Item;
        case 4: return k_EProfileCardSlotType_Hero;
        case 5: return k_EProfileCardSlotType_Emoticon;
        case 6: return k_EProfileCardSlotType_Team;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EProfileCardSlotType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EProfileCardSlotType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EProfileCardSlotType>() {
            public EProfileCardSlotType findValueByNumber(int number) {
              return EProfileCardSlotType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(17);
    }

    private static final EProfileCardSlotType[] VALUES = values();

    public static EProfileCardSlotType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EProfileCardSlotType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EProfileCardSlotType)
  }

  /**
   * Protobuf enum {@code dota2.EMatchGroupServerStatus}
   */
  public enum EMatchGroupServerStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EMatchGroupServerStatus_OK = 0;</code>
     */
    k_EMatchGroupServerStatus_OK(0),
    /**
     * <code>k_EMatchGroupServerStatus_LimitedAvailability = 1;</code>
     */
    k_EMatchGroupServerStatus_LimitedAvailability(1),
    /**
     * <code>k_EMatchGroupServerStatus_Offline = 2;</code>
     */
    k_EMatchGroupServerStatus_Offline(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EMatchGroupServerStatus.class.getName());
    }
    /**
     * <code>k_EMatchGroupServerStatus_OK = 0;</code>
     */
    public static final int k_EMatchGroupServerStatus_OK_VALUE = 0;
    /**
     * <code>k_EMatchGroupServerStatus_LimitedAvailability = 1;</code>
     */
    public static final int k_EMatchGroupServerStatus_LimitedAvailability_VALUE = 1;
    /**
     * <code>k_EMatchGroupServerStatus_Offline = 2;</code>
     */
    public static final int k_EMatchGroupServerStatus_Offline_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EMatchGroupServerStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EMatchGroupServerStatus forNumber(int value) {
      switch (value) {
        case 0: return k_EMatchGroupServerStatus_OK;
        case 1: return k_EMatchGroupServerStatus_LimitedAvailability;
        case 2: return k_EMatchGroupServerStatus_Offline;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMatchGroupServerStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EMatchGroupServerStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMatchGroupServerStatus>() {
            public EMatchGroupServerStatus findValueByNumber(int number) {
              return EMatchGroupServerStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(18);
    }

    private static final EMatchGroupServerStatus[] VALUES = values();

    public static EMatchGroupServerStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EMatchGroupServerStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EMatchGroupServerStatus)
  }

  /**
   * Protobuf enum {@code dota2.DOTA_CM_PICK}
   */
  public enum DOTA_CM_PICK
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_CM_RANDOM = 0;</code>
     */
    DOTA_CM_RANDOM(0),
    /**
     * <code>DOTA_CM_GOOD_GUYS = 1;</code>
     */
    DOTA_CM_GOOD_GUYS(1),
    /**
     * <code>DOTA_CM_BAD_GUYS = 2;</code>
     */
    DOTA_CM_BAD_GUYS(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTA_CM_PICK.class.getName());
    }
    /**
     * <code>DOTA_CM_RANDOM = 0;</code>
     */
    public static final int DOTA_CM_RANDOM_VALUE = 0;
    /**
     * <code>DOTA_CM_GOOD_GUYS = 1;</code>
     */
    public static final int DOTA_CM_GOOD_GUYS_VALUE = 1;
    /**
     * <code>DOTA_CM_BAD_GUYS = 2;</code>
     */
    public static final int DOTA_CM_BAD_GUYS_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTA_CM_PICK valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTA_CM_PICK forNumber(int value) {
      switch (value) {
        case 0: return DOTA_CM_RANDOM;
        case 1: return DOTA_CM_GOOD_GUYS;
        case 2: return DOTA_CM_BAD_GUYS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_CM_PICK>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTA_CM_PICK> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_CM_PICK>() {
            public DOTA_CM_PICK findValueByNumber(int number) {
              return DOTA_CM_PICK.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(19);
    }

    private static final DOTA_CM_PICK[] VALUES = values();

    public static DOTA_CM_PICK valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTA_CM_PICK(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTA_CM_PICK)
  }

  /**
   * Protobuf enum {@code dota2.DOTALowPriorityBanType}
   */
  public enum DOTALowPriorityBanType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_ABANDON = 0;</code>
     */
    DOTA_LOW_PRIORITY_BAN_ABANDON(0),
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_REPORTS = 1;</code>
     */
    DOTA_LOW_PRIORITY_BAN_REPORTS(1),
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON = 2;</code>
     */
    DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON(2),
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_PRE_GAME_ROLE = 3;</code>
     */
    DOTA_LOW_PRIORITY_BAN_PRE_GAME_ROLE(3),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTALowPriorityBanType.class.getName());
    }
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_ABANDON = 0;</code>
     */
    public static final int DOTA_LOW_PRIORITY_BAN_ABANDON_VALUE = 0;
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_REPORTS = 1;</code>
     */
    public static final int DOTA_LOW_PRIORITY_BAN_REPORTS_VALUE = 1;
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON = 2;</code>
     */
    public static final int DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON_VALUE = 2;
    /**
     * <code>DOTA_LOW_PRIORITY_BAN_PRE_GAME_ROLE = 3;</code>
     */
    public static final int DOTA_LOW_PRIORITY_BAN_PRE_GAME_ROLE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTALowPriorityBanType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTALowPriorityBanType forNumber(int value) {
      switch (value) {
        case 0: return DOTA_LOW_PRIORITY_BAN_ABANDON;
        case 1: return DOTA_LOW_PRIORITY_BAN_REPORTS;
        case 2: return DOTA_LOW_PRIORITY_BAN_SECONDARY_ABANDON;
        case 3: return DOTA_LOW_PRIORITY_BAN_PRE_GAME_ROLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTALowPriorityBanType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTALowPriorityBanType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTALowPriorityBanType>() {
            public DOTALowPriorityBanType findValueByNumber(int number) {
              return DOTALowPriorityBanType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(20);
    }

    private static final DOTALowPriorityBanType[] VALUES = values();

    public static DOTALowPriorityBanType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTALowPriorityBanType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTALowPriorityBanType)
  }

  /**
   * Protobuf enum {@code dota2.DOTALobbyReadyState}
   */
  public enum DOTALobbyReadyState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTALobbyReadyState_UNDECLARED = 0;</code>
     */
    DOTALobbyReadyState_UNDECLARED(0),
    /**
     * <code>DOTALobbyReadyState_ACCEPTED = 1;</code>
     */
    DOTALobbyReadyState_ACCEPTED(1),
    /**
     * <code>DOTALobbyReadyState_DECLINED = 2;</code>
     */
    DOTALobbyReadyState_DECLINED(2),
    /**
     * <code>DOTALobbyReadyState_DECLINED_REQUEUE = 3;</code>
     */
    DOTALobbyReadyState_DECLINED_REQUEUE(3),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTALobbyReadyState.class.getName());
    }
    /**
     * <code>DOTALobbyReadyState_UNDECLARED = 0;</code>
     */
    public static final int DOTALobbyReadyState_UNDECLARED_VALUE = 0;
    /**
     * <code>DOTALobbyReadyState_ACCEPTED = 1;</code>
     */
    public static final int DOTALobbyReadyState_ACCEPTED_VALUE = 1;
    /**
     * <code>DOTALobbyReadyState_DECLINED = 2;</code>
     */
    public static final int DOTALobbyReadyState_DECLINED_VALUE = 2;
    /**
     * <code>DOTALobbyReadyState_DECLINED_REQUEUE = 3;</code>
     */
    public static final int DOTALobbyReadyState_DECLINED_REQUEUE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTALobbyReadyState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTALobbyReadyState forNumber(int value) {
      switch (value) {
        case 0: return DOTALobbyReadyState_UNDECLARED;
        case 1: return DOTALobbyReadyState_ACCEPTED;
        case 2: return DOTALobbyReadyState_DECLINED;
        case 3: return DOTALobbyReadyState_DECLINED_REQUEUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTALobbyReadyState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTALobbyReadyState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTALobbyReadyState>() {
            public DOTALobbyReadyState findValueByNumber(int number) {
              return DOTALobbyReadyState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(21);
    }

    private static final DOTALobbyReadyState[] VALUES = values();

    public static DOTALobbyReadyState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTALobbyReadyState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTALobbyReadyState)
  }

  /**
   * Protobuf enum {@code dota2.DOTAJoinLobbyResult}
   */
  public enum DOTAJoinLobbyResult
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_JOIN_RESULT_SUCCESS = 0;</code>
     */
    DOTA_JOIN_RESULT_SUCCESS(0),
    /**
     * <code>DOTA_JOIN_RESULT_ALREADY_IN_GAME = 1;</code>
     */
    DOTA_JOIN_RESULT_ALREADY_IN_GAME(1),
    /**
     * <code>DOTA_JOIN_RESULT_INVALID_LOBBY = 2;</code>
     */
    DOTA_JOIN_RESULT_INVALID_LOBBY(2),
    /**
     * <code>DOTA_JOIN_RESULT_INCORRECT_PASSWORD = 3;</code>
     */
    DOTA_JOIN_RESULT_INCORRECT_PASSWORD(3),
    /**
     * <code>DOTA_JOIN_RESULT_ACCESS_DENIED = 4;</code>
     */
    DOTA_JOIN_RESULT_ACCESS_DENIED(4),
    /**
     * <code>DOTA_JOIN_RESULT_GENERIC_ERROR = 5;</code>
     */
    DOTA_JOIN_RESULT_GENERIC_ERROR(5),
    /**
     * <code>DOTA_JOIN_RESULT_INCORRECT_VERSION = 6;</code>
     */
    DOTA_JOIN_RESULT_INCORRECT_VERSION(6),
    /**
     * <code>DOTA_JOIN_RESULT_IN_TEAM_PARTY = 7;</code>
     */
    DOTA_JOIN_RESULT_IN_TEAM_PARTY(7),
    /**
     * <code>DOTA_JOIN_RESULT_NO_LOBBY_FOUND = 8;</code>
     */
    DOTA_JOIN_RESULT_NO_LOBBY_FOUND(8),
    /**
     * <code>DOTA_JOIN_RESULT_LOBBY_FULL = 9;</code>
     */
    DOTA_JOIN_RESULT_LOBBY_FULL(9),
    /**
     * <code>DOTA_JOIN_RESULT_CUSTOM_GAME_INCORRECT_VERSION = 10;</code>
     */
    DOTA_JOIN_RESULT_CUSTOM_GAME_INCORRECT_VERSION(10),
    /**
     * <code>DOTA_JOIN_RESULT_TIMEOUT = 11;</code>
     */
    DOTA_JOIN_RESULT_TIMEOUT(11),
    /**
     * <code>DOTA_JOIN_RESULT_CUSTOM_GAME_COOLDOWN = 12;</code>
     */
    DOTA_JOIN_RESULT_CUSTOM_GAME_COOLDOWN(12),
    /**
     * <code>DOTA_JOIN_RESULT_BUSY = 13;</code>
     */
    DOTA_JOIN_RESULT_BUSY(13),
    /**
     * <code>DOTA_JOIN_RESULT_NO_PLAYTIME = 14;</code>
     */
    DOTA_JOIN_RESULT_NO_PLAYTIME(14),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTAJoinLobbyResult.class.getName());
    }
    /**
     * <code>DOTA_JOIN_RESULT_SUCCESS = 0;</code>
     */
    public static final int DOTA_JOIN_RESULT_SUCCESS_VALUE = 0;
    /**
     * <code>DOTA_JOIN_RESULT_ALREADY_IN_GAME = 1;</code>
     */
    public static final int DOTA_JOIN_RESULT_ALREADY_IN_GAME_VALUE = 1;
    /**
     * <code>DOTA_JOIN_RESULT_INVALID_LOBBY = 2;</code>
     */
    public static final int DOTA_JOIN_RESULT_INVALID_LOBBY_VALUE = 2;
    /**
     * <code>DOTA_JOIN_RESULT_INCORRECT_PASSWORD = 3;</code>
     */
    public static final int DOTA_JOIN_RESULT_INCORRECT_PASSWORD_VALUE = 3;
    /**
     * <code>DOTA_JOIN_RESULT_ACCESS_DENIED = 4;</code>
     */
    public static final int DOTA_JOIN_RESULT_ACCESS_DENIED_VALUE = 4;
    /**
     * <code>DOTA_JOIN_RESULT_GENERIC_ERROR = 5;</code>
     */
    public static final int DOTA_JOIN_RESULT_GENERIC_ERROR_VALUE = 5;
    /**
     * <code>DOTA_JOIN_RESULT_INCORRECT_VERSION = 6;</code>
     */
    public static final int DOTA_JOIN_RESULT_INCORRECT_VERSION_VALUE = 6;
    /**
     * <code>DOTA_JOIN_RESULT_IN_TEAM_PARTY = 7;</code>
     */
    public static final int DOTA_JOIN_RESULT_IN_TEAM_PARTY_VALUE = 7;
    /**
     * <code>DOTA_JOIN_RESULT_NO_LOBBY_FOUND = 8;</code>
     */
    public static final int DOTA_JOIN_RESULT_NO_LOBBY_FOUND_VALUE = 8;
    /**
     * <code>DOTA_JOIN_RESULT_LOBBY_FULL = 9;</code>
     */
    public static final int DOTA_JOIN_RESULT_LOBBY_FULL_VALUE = 9;
    /**
     * <code>DOTA_JOIN_RESULT_CUSTOM_GAME_INCORRECT_VERSION = 10;</code>
     */
    public static final int DOTA_JOIN_RESULT_CUSTOM_GAME_INCORRECT_VERSION_VALUE = 10;
    /**
     * <code>DOTA_JOIN_RESULT_TIMEOUT = 11;</code>
     */
    public static final int DOTA_JOIN_RESULT_TIMEOUT_VALUE = 11;
    /**
     * <code>DOTA_JOIN_RESULT_CUSTOM_GAME_COOLDOWN = 12;</code>
     */
    public static final int DOTA_JOIN_RESULT_CUSTOM_GAME_COOLDOWN_VALUE = 12;
    /**
     * <code>DOTA_JOIN_RESULT_BUSY = 13;</code>
     */
    public static final int DOTA_JOIN_RESULT_BUSY_VALUE = 13;
    /**
     * <code>DOTA_JOIN_RESULT_NO_PLAYTIME = 14;</code>
     */
    public static final int DOTA_JOIN_RESULT_NO_PLAYTIME_VALUE = 14;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTAJoinLobbyResult valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTAJoinLobbyResult forNumber(int value) {
      switch (value) {
        case 0: return DOTA_JOIN_RESULT_SUCCESS;
        case 1: return DOTA_JOIN_RESULT_ALREADY_IN_GAME;
        case 2: return DOTA_JOIN_RESULT_INVALID_LOBBY;
        case 3: return DOTA_JOIN_RESULT_INCORRECT_PASSWORD;
        case 4: return DOTA_JOIN_RESULT_ACCESS_DENIED;
        case 5: return DOTA_JOIN_RESULT_GENERIC_ERROR;
        case 6: return DOTA_JOIN_RESULT_INCORRECT_VERSION;
        case 7: return DOTA_JOIN_RESULT_IN_TEAM_PARTY;
        case 8: return DOTA_JOIN_RESULT_NO_LOBBY_FOUND;
        case 9: return DOTA_JOIN_RESULT_LOBBY_FULL;
        case 10: return DOTA_JOIN_RESULT_CUSTOM_GAME_INCORRECT_VERSION;
        case 11: return DOTA_JOIN_RESULT_TIMEOUT;
        case 12: return DOTA_JOIN_RESULT_CUSTOM_GAME_COOLDOWN;
        case 13: return DOTA_JOIN_RESULT_BUSY;
        case 14: return DOTA_JOIN_RESULT_NO_PLAYTIME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTAJoinLobbyResult>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTAJoinLobbyResult> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTAJoinLobbyResult>() {
            public DOTAJoinLobbyResult findValueByNumber(int number) {
              return DOTAJoinLobbyResult.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(22);
    }

    private static final DOTAJoinLobbyResult[] VALUES = values();

    public static DOTAJoinLobbyResult valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTAJoinLobbyResult(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTAJoinLobbyResult)
  }

  /**
   * Protobuf enum {@code dota2.DOTASelectionPriorityRules}
   */
  public enum DOTASelectionPriorityRules
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_DOTASelectionPriorityRules_Manual = 0;</code>
     */
    k_DOTASelectionPriorityRules_Manual(0),
    /**
     * <code>k_DOTASelectionPriorityRules_Automatic = 1;</code>
     */
    k_DOTASelectionPriorityRules_Automatic(1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTASelectionPriorityRules.class.getName());
    }
    /**
     * <code>k_DOTASelectionPriorityRules_Manual = 0;</code>
     */
    public static final int k_DOTASelectionPriorityRules_Manual_VALUE = 0;
    /**
     * <code>k_DOTASelectionPriorityRules_Automatic = 1;</code>
     */
    public static final int k_DOTASelectionPriorityRules_Automatic_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTASelectionPriorityRules valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTASelectionPriorityRules forNumber(int value) {
      switch (value) {
        case 0: return k_DOTASelectionPriorityRules_Manual;
        case 1: return k_DOTASelectionPriorityRules_Automatic;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTASelectionPriorityRules>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTASelectionPriorityRules> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTASelectionPriorityRules>() {
            public DOTASelectionPriorityRules findValueByNumber(int number) {
              return DOTASelectionPriorityRules.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(23);
    }

    private static final DOTASelectionPriorityRules[] VALUES = values();

    public static DOTASelectionPriorityRules valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTASelectionPriorityRules(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTASelectionPriorityRules)
  }

  /**
   * Protobuf enum {@code dota2.DOTASelectionPriorityChoice}
   */
  public enum DOTASelectionPriorityChoice
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_DOTASelectionPriorityChoice_Invalid = 0;</code>
     */
    k_DOTASelectionPriorityChoice_Invalid(0),
    /**
     * <code>k_DOTASelectionPriorityChoice_FirstPick = 1;</code>
     */
    k_DOTASelectionPriorityChoice_FirstPick(1),
    /**
     * <code>k_DOTASelectionPriorityChoice_SecondPick = 2;</code>
     */
    k_DOTASelectionPriorityChoice_SecondPick(2),
    /**
     * <code>k_DOTASelectionPriorityChoice_Radiant = 3;</code>
     */
    k_DOTASelectionPriorityChoice_Radiant(3),
    /**
     * <code>k_DOTASelectionPriorityChoice_Dire = 4;</code>
     */
    k_DOTASelectionPriorityChoice_Dire(4),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTASelectionPriorityChoice.class.getName());
    }
    /**
     * <code>k_DOTASelectionPriorityChoice_Invalid = 0;</code>
     */
    public static final int k_DOTASelectionPriorityChoice_Invalid_VALUE = 0;
    /**
     * <code>k_DOTASelectionPriorityChoice_FirstPick = 1;</code>
     */
    public static final int k_DOTASelectionPriorityChoice_FirstPick_VALUE = 1;
    /**
     * <code>k_DOTASelectionPriorityChoice_SecondPick = 2;</code>
     */
    public static final int k_DOTASelectionPriorityChoice_SecondPick_VALUE = 2;
    /**
     * <code>k_DOTASelectionPriorityChoice_Radiant = 3;</code>
     */
    public static final int k_DOTASelectionPriorityChoice_Radiant_VALUE = 3;
    /**
     * <code>k_DOTASelectionPriorityChoice_Dire = 4;</code>
     */
    public static final int k_DOTASelectionPriorityChoice_Dire_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTASelectionPriorityChoice valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTASelectionPriorityChoice forNumber(int value) {
      switch (value) {
        case 0: return k_DOTASelectionPriorityChoice_Invalid;
        case 1: return k_DOTASelectionPriorityChoice_FirstPick;
        case 2: return k_DOTASelectionPriorityChoice_SecondPick;
        case 3: return k_DOTASelectionPriorityChoice_Radiant;
        case 4: return k_DOTASelectionPriorityChoice_Dire;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTASelectionPriorityChoice>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTASelectionPriorityChoice> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTASelectionPriorityChoice>() {
            public DOTASelectionPriorityChoice findValueByNumber(int number) {
              return DOTASelectionPriorityChoice.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(24);
    }

    private static final DOTASelectionPriorityChoice[] VALUES = values();

    public static DOTASelectionPriorityChoice valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTASelectionPriorityChoice(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTASelectionPriorityChoice)
  }

  /**
   * Protobuf enum {@code dota2.DOTAMatchVote}
   */
  public enum DOTAMatchVote
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTAMatchVote_INVALID = 0;</code>
     */
    DOTAMatchVote_INVALID(0),
    /**
     * <code>DOTAMatchVote_POSITIVE = 1;</code>
     */
    DOTAMatchVote_POSITIVE(1),
    /**
     * <code>DOTAMatchVote_NEGATIVE = 2;</code>
     */
    DOTAMatchVote_NEGATIVE(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTAMatchVote.class.getName());
    }
    /**
     * <code>DOTAMatchVote_INVALID = 0;</code>
     */
    public static final int DOTAMatchVote_INVALID_VALUE = 0;
    /**
     * <code>DOTAMatchVote_POSITIVE = 1;</code>
     */
    public static final int DOTAMatchVote_POSITIVE_VALUE = 1;
    /**
     * <code>DOTAMatchVote_NEGATIVE = 2;</code>
     */
    public static final int DOTAMatchVote_NEGATIVE_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTAMatchVote valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTAMatchVote forNumber(int value) {
      switch (value) {
        case 0: return DOTAMatchVote_INVALID;
        case 1: return DOTAMatchVote_POSITIVE;
        case 2: return DOTAMatchVote_NEGATIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTAMatchVote>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTAMatchVote> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTAMatchVote>() {
            public DOTAMatchVote findValueByNumber(int number) {
              return DOTAMatchVote.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(25);
    }

    private static final DOTAMatchVote[] VALUES = values();

    public static DOTAMatchVote valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTAMatchVote(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTAMatchVote)
  }

  /**
   * Protobuf enum {@code dota2.DOTALobbyVisibility}
   */
  public enum DOTALobbyVisibility
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTALobbyVisibility_Public = 0;</code>
     */
    DOTALobbyVisibility_Public(0),
    /**
     * <code>DOTALobbyVisibility_Friends = 1;</code>
     */
    DOTALobbyVisibility_Friends(1),
    /**
     * <code>DOTALobbyVisibility_Unlisted = 2;</code>
     */
    DOTALobbyVisibility_Unlisted(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTALobbyVisibility.class.getName());
    }
    /**
     * <code>DOTALobbyVisibility_Public = 0;</code>
     */
    public static final int DOTALobbyVisibility_Public_VALUE = 0;
    /**
     * <code>DOTALobbyVisibility_Friends = 1;</code>
     */
    public static final int DOTALobbyVisibility_Friends_VALUE = 1;
    /**
     * <code>DOTALobbyVisibility_Unlisted = 2;</code>
     */
    public static final int DOTALobbyVisibility_Unlisted_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTALobbyVisibility valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTALobbyVisibility forNumber(int value) {
      switch (value) {
        case 0: return DOTALobbyVisibility_Public;
        case 1: return DOTALobbyVisibility_Friends;
        case 2: return DOTALobbyVisibility_Unlisted;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTALobbyVisibility>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTALobbyVisibility> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTALobbyVisibility>() {
            public DOTALobbyVisibility findValueByNumber(int number) {
              return DOTALobbyVisibility.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(26);
    }

    private static final DOTALobbyVisibility[] VALUES = values();

    public static DOTALobbyVisibility valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTALobbyVisibility(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTALobbyVisibility)
  }

  /**
   * Protobuf enum {@code dota2.EDOTAPlayerMMRType}
   */
  public enum EDOTAPlayerMMRType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDOTAPlayerMMRType_Invalid = 0;</code>
     */
    k_EDOTAPlayerMMRType_Invalid(0),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralHidden = 1;</code>
     */
    k_EDOTAPlayerMMRType_GeneralHidden(1),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralCompetitive = 3;</code>
     */
    k_EDOTAPlayerMMRType_GeneralCompetitive(3),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EDOTAPlayerMMRType.class.getName());
    }
    /**
     * <code>k_EDOTAPlayerMMRType_Invalid = 0;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Invalid_VALUE = 0;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralHidden = 1;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralHidden_VALUE = 1;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralCompetitive = 3;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralCompetitive_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EDOTAPlayerMMRType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EDOTAPlayerMMRType forNumber(int value) {
      switch (value) {
        case 0: return k_EDOTAPlayerMMRType_Invalid;
        case 1: return k_EDOTAPlayerMMRType_GeneralHidden;
        case 3: return k_EDOTAPlayerMMRType_GeneralCompetitive;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EDOTAPlayerMMRType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>() {
            public EDOTAPlayerMMRType findValueByNumber(int number) {
              return EDOTAPlayerMMRType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(27);
    }

    private static final EDOTAPlayerMMRType[] VALUES = values();

    public static EDOTAPlayerMMRType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EDOTAPlayerMMRType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EDOTAPlayerMMRType)
  }

  /**
   * Protobuf enum {@code dota2.EDOTAMMRBoostType}
   */
  public enum EDOTAMMRBoostType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDOTAMMRBoostType_None = 0;</code>
     */
    k_EDOTAMMRBoostType_None(0),
    /**
     * <code>k_EDOTAMMRBoostType_Leader = 1;</code>
     */
    k_EDOTAMMRBoostType_Leader(1),
    /**
     * <code>k_EDOTAMMRBoostType_Follower = 2;</code>
     */
    k_EDOTAMMRBoostType_Follower(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EDOTAMMRBoostType.class.getName());
    }
    /**
     * <code>k_EDOTAMMRBoostType_None = 0;</code>
     */
    public static final int k_EDOTAMMRBoostType_None_VALUE = 0;
    /**
     * <code>k_EDOTAMMRBoostType_Leader = 1;</code>
     */
    public static final int k_EDOTAMMRBoostType_Leader_VALUE = 1;
    /**
     * <code>k_EDOTAMMRBoostType_Follower = 2;</code>
     */
    public static final int k_EDOTAMMRBoostType_Follower_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EDOTAMMRBoostType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EDOTAMMRBoostType forNumber(int value) {
      switch (value) {
        case 0: return k_EDOTAMMRBoostType_None;
        case 1: return k_EDOTAMMRBoostType_Leader;
        case 2: return k_EDOTAMMRBoostType_Follower;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAMMRBoostType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EDOTAMMRBoostType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAMMRBoostType>() {
            public EDOTAMMRBoostType findValueByNumber(int number) {
              return EDOTAMMRBoostType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(28);
    }

    private static final EDOTAMMRBoostType[] VALUES = values();

    public static EDOTAMMRBoostType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EDOTAMMRBoostType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EDOTAMMRBoostType)
  }

  /**
   * Protobuf enum {@code dota2.MatchType}
   */
  public enum MatchType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MATCH_TYPE_CASUAL = 0;</code>
     */
    MATCH_TYPE_CASUAL(0),
    /**
     * <code>MATCH_TYPE_COOP_BOTS = 1;</code>
     */
    MATCH_TYPE_COOP_BOTS(1),
    /**
     * <code>MATCH_TYPE_COMPETITIVE = 4;</code>
     */
    MATCH_TYPE_COMPETITIVE(4),
    /**
     * <code>MATCH_TYPE_WEEKEND_TOURNEY = 5;</code>
     */
    MATCH_TYPE_WEEKEND_TOURNEY(5),
    /**
     * <code>MATCH_TYPE_EVENT = 7;</code>
     */
    MATCH_TYPE_EVENT(7),
    /**
     * <code>MATCH_TYPE_COACHES_CHALLENGE = 12;</code>
     */
    MATCH_TYPE_COACHES_CHALLENGE(12),
    /**
     * <code>MATCH_TYPE_NEW_PLAYER_POOL = 14;</code>
     */
    MATCH_TYPE_NEW_PLAYER_POOL(14),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        MatchType.class.getName());
    }
    /**
     * <code>MATCH_TYPE_CASUAL = 0;</code>
     */
    public static final int MATCH_TYPE_CASUAL_VALUE = 0;
    /**
     * <code>MATCH_TYPE_COOP_BOTS = 1;</code>
     */
    public static final int MATCH_TYPE_COOP_BOTS_VALUE = 1;
    /**
     * <code>MATCH_TYPE_COMPETITIVE = 4;</code>
     */
    public static final int MATCH_TYPE_COMPETITIVE_VALUE = 4;
    /**
     * <code>MATCH_TYPE_WEEKEND_TOURNEY = 5;</code>
     */
    public static final int MATCH_TYPE_WEEKEND_TOURNEY_VALUE = 5;
    /**
     * <code>MATCH_TYPE_EVENT = 7;</code>
     */
    public static final int MATCH_TYPE_EVENT_VALUE = 7;
    /**
     * <code>MATCH_TYPE_COACHES_CHALLENGE = 12;</code>
     */
    public static final int MATCH_TYPE_COACHES_CHALLENGE_VALUE = 12;
    /**
     * <code>MATCH_TYPE_NEW_PLAYER_POOL = 14;</code>
     */
    public static final int MATCH_TYPE_NEW_PLAYER_POOL_VALUE = 14;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MatchType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MatchType forNumber(int value) {
      switch (value) {
        case 0: return MATCH_TYPE_CASUAL;
        case 1: return MATCH_TYPE_COOP_BOTS;
        case 4: return MATCH_TYPE_COMPETITIVE;
        case 5: return MATCH_TYPE_WEEKEND_TOURNEY;
        case 7: return MATCH_TYPE_EVENT;
        case 12: return MATCH_TYPE_COACHES_CHALLENGE;
        case 14: return MATCH_TYPE_NEW_PLAYER_POOL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MatchType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MatchType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MatchType>() {
            public MatchType findValueByNumber(int number) {
              return MatchType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(29);
    }

    private static final MatchType[] VALUES = values();

    public static MatchType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MatchType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.MatchType)
  }

  /**
   * Protobuf enum {@code dota2.DOTABotDifficulty}
   */
  public enum DOTABotDifficulty
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BOT_DIFFICULTY_PASSIVE = 0;</code>
     */
    BOT_DIFFICULTY_PASSIVE(0),
    /**
     * <code>BOT_DIFFICULTY_EASY = 1;</code>
     */
    BOT_DIFFICULTY_EASY(1),
    /**
     * <code>BOT_DIFFICULTY_MEDIUM = 2;</code>
     */
    BOT_DIFFICULTY_MEDIUM(2),
    /**
     * <code>BOT_DIFFICULTY_HARD = 3;</code>
     */
    BOT_DIFFICULTY_HARD(3),
    /**
     * <code>BOT_DIFFICULTY_UNFAIR = 4;</code>
     */
    BOT_DIFFICULTY_UNFAIR(4),
    /**
     * <code>BOT_DIFFICULTY_INVALID = 5;</code>
     */
    BOT_DIFFICULTY_INVALID(5),
    /**
     * <code>BOT_DIFFICULTY_EXTRA1 = 6;</code>
     */
    BOT_DIFFICULTY_EXTRA1(6),
    /**
     * <code>BOT_DIFFICULTY_EXTRA2 = 7;</code>
     */
    BOT_DIFFICULTY_EXTRA2(7),
    /**
     * <code>BOT_DIFFICULTY_EXTRA3 = 8;</code>
     */
    BOT_DIFFICULTY_EXTRA3(8),
    /**
     * <code>BOT_DIFFICULTY_NPX = 9;</code>
     */
    BOT_DIFFICULTY_NPX(9),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTABotDifficulty.class.getName());
    }
    /**
     * <code>BOT_DIFFICULTY_PASSIVE = 0;</code>
     */
    public static final int BOT_DIFFICULTY_PASSIVE_VALUE = 0;
    /**
     * <code>BOT_DIFFICULTY_EASY = 1;</code>
     */
    public static final int BOT_DIFFICULTY_EASY_VALUE = 1;
    /**
     * <code>BOT_DIFFICULTY_MEDIUM = 2;</code>
     */
    public static final int BOT_DIFFICULTY_MEDIUM_VALUE = 2;
    /**
     * <code>BOT_DIFFICULTY_HARD = 3;</code>
     */
    public static final int BOT_DIFFICULTY_HARD_VALUE = 3;
    /**
     * <code>BOT_DIFFICULTY_UNFAIR = 4;</code>
     */
    public static final int BOT_DIFFICULTY_UNFAIR_VALUE = 4;
    /**
     * <code>BOT_DIFFICULTY_INVALID = 5;</code>
     */
    public static final int BOT_DIFFICULTY_INVALID_VALUE = 5;
    /**
     * <code>BOT_DIFFICULTY_EXTRA1 = 6;</code>
     */
    public static final int BOT_DIFFICULTY_EXTRA1_VALUE = 6;
    /**
     * <code>BOT_DIFFICULTY_EXTRA2 = 7;</code>
     */
    public static final int BOT_DIFFICULTY_EXTRA2_VALUE = 7;
    /**
     * <code>BOT_DIFFICULTY_EXTRA3 = 8;</code>
     */
    public static final int BOT_DIFFICULTY_EXTRA3_VALUE = 8;
    /**
     * <code>BOT_DIFFICULTY_NPX = 9;</code>
     */
    public static final int BOT_DIFFICULTY_NPX_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTABotDifficulty valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTABotDifficulty forNumber(int value) {
      switch (value) {
        case 0: return BOT_DIFFICULTY_PASSIVE;
        case 1: return BOT_DIFFICULTY_EASY;
        case 2: return BOT_DIFFICULTY_MEDIUM;
        case 3: return BOT_DIFFICULTY_HARD;
        case 4: return BOT_DIFFICULTY_UNFAIR;
        case 5: return BOT_DIFFICULTY_INVALID;
        case 6: return BOT_DIFFICULTY_EXTRA1;
        case 7: return BOT_DIFFICULTY_EXTRA2;
        case 8: return BOT_DIFFICULTY_EXTRA3;
        case 9: return BOT_DIFFICULTY_NPX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTABotDifficulty>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTABotDifficulty> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTABotDifficulty>() {
            public DOTABotDifficulty findValueByNumber(int number) {
              return DOTABotDifficulty.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(30);
    }

    private static final DOTABotDifficulty[] VALUES = values();

    public static DOTABotDifficulty valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTABotDifficulty(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTABotDifficulty)
  }

  /**
   * Protobuf enum {@code dota2.DOTA_BOT_MODE}
   */
  public enum DOTA_BOT_MODE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_BOT_MODE_NONE = 0;</code>
     */
    DOTA_BOT_MODE_NONE(0),
    /**
     * <code>DOTA_BOT_MODE_LANING = 1;</code>
     */
    DOTA_BOT_MODE_LANING(1),
    /**
     * <code>DOTA_BOT_MODE_ATTACK = 2;</code>
     */
    DOTA_BOT_MODE_ATTACK(2),
    /**
     * <code>DOTA_BOT_MODE_ROAM = 3;</code>
     */
    DOTA_BOT_MODE_ROAM(3),
    /**
     * <code>DOTA_BOT_MODE_RETREAT = 4;</code>
     */
    DOTA_BOT_MODE_RETREAT(4),
    /**
     * <code>DOTA_BOT_MODE_SECRET_SHOP = 5;</code>
     */
    DOTA_BOT_MODE_SECRET_SHOP(5),
    /**
     * <code>DOTA_BOT_MODE_SIDE_SHOP = 6;</code>
     */
    DOTA_BOT_MODE_SIDE_SHOP(6),
    /**
     * <code>DOTA_BOT_MODE_RUNE = 7;</code>
     */
    DOTA_BOT_MODE_RUNE(7),
    /**
     * <code>DOTA_BOT_MODE_PUSH_TOWER_TOP = 8;</code>
     */
    DOTA_BOT_MODE_PUSH_TOWER_TOP(8),
    /**
     * <code>DOTA_BOT_MODE_PUSH_TOWER_MID = 9;</code>
     */
    DOTA_BOT_MODE_PUSH_TOWER_MID(9),
    /**
     * <code>DOTA_BOT_MODE_PUSH_TOWER_BOT = 10;</code>
     */
    DOTA_BOT_MODE_PUSH_TOWER_BOT(10),
    /**
     * <code>DOTA_BOT_MODE_DEFEND_TOWER_TOP = 11;</code>
     */
    DOTA_BOT_MODE_DEFEND_TOWER_TOP(11),
    /**
     * <code>DOTA_BOT_MODE_DEFEND_TOWER_MID = 12;</code>
     */
    DOTA_BOT_MODE_DEFEND_TOWER_MID(12),
    /**
     * <code>DOTA_BOT_MODE_DEFEND_TOWER_BOT = 13;</code>
     */
    DOTA_BOT_MODE_DEFEND_TOWER_BOT(13),
    /**
     * <code>DOTA_BOT_MODE_ASSEMBLE = 14;</code>
     */
    DOTA_BOT_MODE_ASSEMBLE(14),
    /**
     * <code>DOTA_BOT_MODE_ASSEMBLE_WITH_HUMANS = 15;</code>
     */
    DOTA_BOT_MODE_ASSEMBLE_WITH_HUMANS(15),
    /**
     * <code>DOTA_BOT_MODE_TEAM_ROAM = 16;</code>
     */
    DOTA_BOT_MODE_TEAM_ROAM(16),
    /**
     * <code>DOTA_BOT_MODE_FARM = 17;</code>
     */
    DOTA_BOT_MODE_FARM(17),
    /**
     * <code>DOTA_BOT_MODE_DEFEND_ALLY = 18;</code>
     */
    DOTA_BOT_MODE_DEFEND_ALLY(18),
    /**
     * <code>DOTA_BOT_MODE_EVASIVE_MANEUVERS = 19;</code>
     */
    DOTA_BOT_MODE_EVASIVE_MANEUVERS(19),
    /**
     * <code>DOTA_BOT_MODE_ROSHAN = 20;</code>
     */
    DOTA_BOT_MODE_ROSHAN(20),
    /**
     * <code>DOTA_BOT_MODE_ITEM = 21;</code>
     */
    DOTA_BOT_MODE_ITEM(21),
    /**
     * <code>DOTA_BOT_MODE_WARD = 22;</code>
     */
    DOTA_BOT_MODE_WARD(22),
    /**
     * <code>DOTA_BOT_MODE_COMPANION = 23;</code>
     */
    DOTA_BOT_MODE_COMPANION(23),
    /**
     * <code>DOTA_BOT_MODE_TUTORIAL_BOSS = 24;</code>
     */
    DOTA_BOT_MODE_TUTORIAL_BOSS(24),
    /**
     * <code>DOTA_BOT_MODE_MINION = 25;</code>
     */
    DOTA_BOT_MODE_MINION(25),
    /**
     * <code>DOTA_BOT_MODE_OUTPOST = 26;</code>
     */
    DOTA_BOT_MODE_OUTPOST(26),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTA_BOT_MODE.class.getName());
    }
    /**
     * <code>DOTA_BOT_MODE_NONE = 0;</code>
     */
    public static final int DOTA_BOT_MODE_NONE_VALUE = 0;
    /**
     * <code>DOTA_BOT_MODE_LANING = 1;</code>
     */
    public static final int DOTA_BOT_MODE_LANING_VALUE = 1;
    /**
     * <code>DOTA_BOT_MODE_ATTACK = 2;</code>
     */
    public static final int DOTA_BOT_MODE_ATTACK_VALUE = 2;
    /**
     * <code>DOTA_BOT_MODE_ROAM = 3;</code>
     */
    public static final int DOTA_BOT_MODE_ROAM_VALUE = 3;
    /**
     * <code>DOTA_BOT_MODE_RETREAT = 4;</code>
     */
    public static final int DOTA_BOT_MODE_RETREAT_VALUE = 4;
    /**
     * <code>DOTA_BOT_MODE_SECRET_SHOP = 5;</code>
     */
    public static final int DOTA_BOT_MODE_SECRET_SHOP_VALUE = 5;
    /**
     * <code>DOTA_BOT_MODE_SIDE_SHOP = 6;</code>
     */
    public static final int DOTA_BOT_MODE_SIDE_SHOP_VALUE = 6;
    /**
     * <code>DOTA_BOT_MODE_RUNE = 7;</code>
     */
    public static final int DOTA_BOT_MODE_RUNE_VALUE = 7;
    /**
     * <code>DOTA_BOT_MODE_PUSH_TOWER_TOP = 8;</code>
     */
    public static final int DOTA_BOT_MODE_PUSH_TOWER_TOP_VALUE = 8;
    /**
     * <code>DOTA_BOT_MODE_PUSH_TOWER_MID = 9;</code>
     */
    public static final int DOTA_BOT_MODE_PUSH_TOWER_MID_VALUE = 9;
    /**
     * <code>DOTA_BOT_MODE_PUSH_TOWER_BOT = 10;</code>
     */
    public static final int DOTA_BOT_MODE_PUSH_TOWER_BOT_VALUE = 10;
    /**
     * <code>DOTA_BOT_MODE_DEFEND_TOWER_TOP = 11;</code>
     */
    public static final int DOTA_BOT_MODE_DEFEND_TOWER_TOP_VALUE = 11;
    /**
     * <code>DOTA_BOT_MODE_DEFEND_TOWER_MID = 12;</code>
     */
    public static final int DOTA_BOT_MODE_DEFEND_TOWER_MID_VALUE = 12;
    /**
     * <code>DOTA_BOT_MODE_DEFEND_TOWER_BOT = 13;</code>
     */
    public static final int DOTA_BOT_MODE_DEFEND_TOWER_BOT_VALUE = 13;
    /**
     * <code>DOTA_BOT_MODE_ASSEMBLE = 14;</code>
     */
    public static final int DOTA_BOT_MODE_ASSEMBLE_VALUE = 14;
    /**
     * <code>DOTA_BOT_MODE_ASSEMBLE_WITH_HUMANS = 15;</code>
     */
    public static final int DOTA_BOT_MODE_ASSEMBLE_WITH_HUMANS_VALUE = 15;
    /**
     * <code>DOTA_BOT_MODE_TEAM_ROAM = 16;</code>
     */
    public static final int DOTA_BOT_MODE_TEAM_ROAM_VALUE = 16;
    /**
     * <code>DOTA_BOT_MODE_FARM = 17;</code>
     */
    public static final int DOTA_BOT_MODE_FARM_VALUE = 17;
    /**
     * <code>DOTA_BOT_MODE_DEFEND_ALLY = 18;</code>
     */
    public static final int DOTA_BOT_MODE_DEFEND_ALLY_VALUE = 18;
    /**
     * <code>DOTA_BOT_MODE_EVASIVE_MANEUVERS = 19;</code>
     */
    public static final int DOTA_BOT_MODE_EVASIVE_MANEUVERS_VALUE = 19;
    /**
     * <code>DOTA_BOT_MODE_ROSHAN = 20;</code>
     */
    public static final int DOTA_BOT_MODE_ROSHAN_VALUE = 20;
    /**
     * <code>DOTA_BOT_MODE_ITEM = 21;</code>
     */
    public static final int DOTA_BOT_MODE_ITEM_VALUE = 21;
    /**
     * <code>DOTA_BOT_MODE_WARD = 22;</code>
     */
    public static final int DOTA_BOT_MODE_WARD_VALUE = 22;
    /**
     * <code>DOTA_BOT_MODE_COMPANION = 23;</code>
     */
    public static final int DOTA_BOT_MODE_COMPANION_VALUE = 23;
    /**
     * <code>DOTA_BOT_MODE_TUTORIAL_BOSS = 24;</code>
     */
    public static final int DOTA_BOT_MODE_TUTORIAL_BOSS_VALUE = 24;
    /**
     * <code>DOTA_BOT_MODE_MINION = 25;</code>
     */
    public static final int DOTA_BOT_MODE_MINION_VALUE = 25;
    /**
     * <code>DOTA_BOT_MODE_OUTPOST = 26;</code>
     */
    public static final int DOTA_BOT_MODE_OUTPOST_VALUE = 26;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTA_BOT_MODE valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTA_BOT_MODE forNumber(int value) {
      switch (value) {
        case 0: return DOTA_BOT_MODE_NONE;
        case 1: return DOTA_BOT_MODE_LANING;
        case 2: return DOTA_BOT_MODE_ATTACK;
        case 3: return DOTA_BOT_MODE_ROAM;
        case 4: return DOTA_BOT_MODE_RETREAT;
        case 5: return DOTA_BOT_MODE_SECRET_SHOP;
        case 6: return DOTA_BOT_MODE_SIDE_SHOP;
        case 7: return DOTA_BOT_MODE_RUNE;
        case 8: return DOTA_BOT_MODE_PUSH_TOWER_TOP;
        case 9: return DOTA_BOT_MODE_PUSH_TOWER_MID;
        case 10: return DOTA_BOT_MODE_PUSH_TOWER_BOT;
        case 11: return DOTA_BOT_MODE_DEFEND_TOWER_TOP;
        case 12: return DOTA_BOT_MODE_DEFEND_TOWER_MID;
        case 13: return DOTA_BOT_MODE_DEFEND_TOWER_BOT;
        case 14: return DOTA_BOT_MODE_ASSEMBLE;
        case 15: return DOTA_BOT_MODE_ASSEMBLE_WITH_HUMANS;
        case 16: return DOTA_BOT_MODE_TEAM_ROAM;
        case 17: return DOTA_BOT_MODE_FARM;
        case 18: return DOTA_BOT_MODE_DEFEND_ALLY;
        case 19: return DOTA_BOT_MODE_EVASIVE_MANEUVERS;
        case 20: return DOTA_BOT_MODE_ROSHAN;
        case 21: return DOTA_BOT_MODE_ITEM;
        case 22: return DOTA_BOT_MODE_WARD;
        case 23: return DOTA_BOT_MODE_COMPANION;
        case 24: return DOTA_BOT_MODE_TUTORIAL_BOSS;
        case 25: return DOTA_BOT_MODE_MINION;
        case 26: return DOTA_BOT_MODE_OUTPOST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_BOT_MODE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTA_BOT_MODE> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_BOT_MODE>() {
            public DOTA_BOT_MODE findValueByNumber(int number) {
              return DOTA_BOT_MODE.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(31);
    }

    private static final DOTA_BOT_MODE[] VALUES = values();

    public static DOTA_BOT_MODE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTA_BOT_MODE(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTA_BOT_MODE)
  }

  /**
   * Protobuf enum {@code dota2.MatchLanguages}
   */
  public enum MatchLanguages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MATCH_LANGUAGE_INVALID = 0;</code>
     */
    MATCH_LANGUAGE_INVALID(0),
    /**
     * <code>MATCH_LANGUAGE_ENGLISH = 1;</code>
     */
    MATCH_LANGUAGE_ENGLISH(1),
    /**
     * <code>MATCH_LANGUAGE_RUSSIAN = 2;</code>
     */
    MATCH_LANGUAGE_RUSSIAN(2),
    /**
     * <code>MATCH_LANGUAGE_CHINESE = 3;</code>
     */
    MATCH_LANGUAGE_CHINESE(3),
    /**
     * <code>MATCH_LANGUAGE_KOREAN = 4;</code>
     */
    MATCH_LANGUAGE_KOREAN(4),
    /**
     * <code>MATCH_LANGUAGE_SPANISH = 5;</code>
     */
    MATCH_LANGUAGE_SPANISH(5),
    /**
     * <code>MATCH_LANGUAGE_PORTUGUESE = 6;</code>
     */
    MATCH_LANGUAGE_PORTUGUESE(6),
    /**
     * <code>MATCH_LANGUAGE_ENGLISH2 = 7;</code>
     */
    MATCH_LANGUAGE_ENGLISH2(7),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        MatchLanguages.class.getName());
    }
    /**
     * <code>MATCH_LANGUAGE_INVALID = 0;</code>
     */
    public static final int MATCH_LANGUAGE_INVALID_VALUE = 0;
    /**
     * <code>MATCH_LANGUAGE_ENGLISH = 1;</code>
     */
    public static final int MATCH_LANGUAGE_ENGLISH_VALUE = 1;
    /**
     * <code>MATCH_LANGUAGE_RUSSIAN = 2;</code>
     */
    public static final int MATCH_LANGUAGE_RUSSIAN_VALUE = 2;
    /**
     * <code>MATCH_LANGUAGE_CHINESE = 3;</code>
     */
    public static final int MATCH_LANGUAGE_CHINESE_VALUE = 3;
    /**
     * <code>MATCH_LANGUAGE_KOREAN = 4;</code>
     */
    public static final int MATCH_LANGUAGE_KOREAN_VALUE = 4;
    /**
     * <code>MATCH_LANGUAGE_SPANISH = 5;</code>
     */
    public static final int MATCH_LANGUAGE_SPANISH_VALUE = 5;
    /**
     * <code>MATCH_LANGUAGE_PORTUGUESE = 6;</code>
     */
    public static final int MATCH_LANGUAGE_PORTUGUESE_VALUE = 6;
    /**
     * <code>MATCH_LANGUAGE_ENGLISH2 = 7;</code>
     */
    public static final int MATCH_LANGUAGE_ENGLISH2_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MatchLanguages valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MatchLanguages forNumber(int value) {
      switch (value) {
        case 0: return MATCH_LANGUAGE_INVALID;
        case 1: return MATCH_LANGUAGE_ENGLISH;
        case 2: return MATCH_LANGUAGE_RUSSIAN;
        case 3: return MATCH_LANGUAGE_CHINESE;
        case 4: return MATCH_LANGUAGE_KOREAN;
        case 5: return MATCH_LANGUAGE_SPANISH;
        case 6: return MATCH_LANGUAGE_PORTUGUESE;
        case 7: return MATCH_LANGUAGE_ENGLISH2;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MatchLanguages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MatchLanguages> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MatchLanguages>() {
            public MatchLanguages findValueByNumber(int number) {
              return MatchLanguages.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(32);
    }

    private static final MatchLanguages[] VALUES = values();

    public static MatchLanguages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MatchLanguages(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.MatchLanguages)
  }

  /**
   * Protobuf enum {@code dota2.ETourneyQueueDeadlineState}
   */
  public enum ETourneyQueueDeadlineState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ETourneyQueueDeadlineState_Normal = 0;</code>
     */
    k_ETourneyQueueDeadlineState_Normal(0),
    /**
     * <code>k_ETourneyQueueDeadlineState_Missed = 1;</code>
     */
    k_ETourneyQueueDeadlineState_Missed(1),
    /**
     * <code>k_ETourneyQueueDeadlineState_ExpiredOK = 2;</code>
     */
    k_ETourneyQueueDeadlineState_ExpiredOK(2),
    /**
     * <code>k_ETourneyQueueDeadlineState_SeekingBye = 3;</code>
     */
    k_ETourneyQueueDeadlineState_SeekingBye(3),
    /**
     * <code>k_ETourneyQueueDeadlineState_EligibleForRefund = 4;</code>
     */
    k_ETourneyQueueDeadlineState_EligibleForRefund(4),
    /**
     * <code>k_ETourneyQueueDeadlineState_NA = -1;</code>
     */
    k_ETourneyQueueDeadlineState_NA(-1),
    /**
     * <code>k_ETourneyQueueDeadlineState_ExpiringSoon = 101;</code>
     */
    k_ETourneyQueueDeadlineState_ExpiringSoon(101),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ETourneyQueueDeadlineState.class.getName());
    }
    /**
     * <code>k_ETourneyQueueDeadlineState_Normal = 0;</code>
     */
    public static final int k_ETourneyQueueDeadlineState_Normal_VALUE = 0;
    /**
     * <code>k_ETourneyQueueDeadlineState_Missed = 1;</code>
     */
    public static final int k_ETourneyQueueDeadlineState_Missed_VALUE = 1;
    /**
     * <code>k_ETourneyQueueDeadlineState_ExpiredOK = 2;</code>
     */
    public static final int k_ETourneyQueueDeadlineState_ExpiredOK_VALUE = 2;
    /**
     * <code>k_ETourneyQueueDeadlineState_SeekingBye = 3;</code>
     */
    public static final int k_ETourneyQueueDeadlineState_SeekingBye_VALUE = 3;
    /**
     * <code>k_ETourneyQueueDeadlineState_EligibleForRefund = 4;</code>
     */
    public static final int k_ETourneyQueueDeadlineState_EligibleForRefund_VALUE = 4;
    /**
     * <code>k_ETourneyQueueDeadlineState_NA = -1;</code>
     */
    public static final int k_ETourneyQueueDeadlineState_NA_VALUE = -1;
    /**
     * <code>k_ETourneyQueueDeadlineState_ExpiringSoon = 101;</code>
     */
    public static final int k_ETourneyQueueDeadlineState_ExpiringSoon_VALUE = 101;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ETourneyQueueDeadlineState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ETourneyQueueDeadlineState forNumber(int value) {
      switch (value) {
        case 0: return k_ETourneyQueueDeadlineState_Normal;
        case 1: return k_ETourneyQueueDeadlineState_Missed;
        case 2: return k_ETourneyQueueDeadlineState_ExpiredOK;
        case 3: return k_ETourneyQueueDeadlineState_SeekingBye;
        case 4: return k_ETourneyQueueDeadlineState_EligibleForRefund;
        case -1: return k_ETourneyQueueDeadlineState_NA;
        case 101: return k_ETourneyQueueDeadlineState_ExpiringSoon;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETourneyQueueDeadlineState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ETourneyQueueDeadlineState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETourneyQueueDeadlineState>() {
            public ETourneyQueueDeadlineState findValueByNumber(int number) {
              return ETourneyQueueDeadlineState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(33);
    }

    private static final ETourneyQueueDeadlineState[] VALUES = values();

    public static ETourneyQueueDeadlineState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ETourneyQueueDeadlineState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ETourneyQueueDeadlineState)
  }

  /**
   * Protobuf enum {@code dota2.EMatchOutcome}
   */
  public enum EMatchOutcome
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EMatchOutcome_Unknown = 0;</code>
     */
    k_EMatchOutcome_Unknown(0),
    /**
     * <code>k_EMatchOutcome_RadVictory = 2;</code>
     */
    k_EMatchOutcome_RadVictory(2),
    /**
     * <code>k_EMatchOutcome_DireVictory = 3;</code>
     */
    k_EMatchOutcome_DireVictory(3),
    /**
     * <code>k_EMatchOutcome_NeutralVictory = 4;</code>
     */
    k_EMatchOutcome_NeutralVictory(4),
    /**
     * <code>k_EMatchOutcome_NoTeamWinner = 5;</code>
     */
    k_EMatchOutcome_NoTeamWinner(5),
    /**
     * <code>k_EMatchOutcome_Custom1Victory = 6;</code>
     */
    k_EMatchOutcome_Custom1Victory(6),
    /**
     * <code>k_EMatchOutcome_Custom2Victory = 7;</code>
     */
    k_EMatchOutcome_Custom2Victory(7),
    /**
     * <code>k_EMatchOutcome_Custom3Victory = 8;</code>
     */
    k_EMatchOutcome_Custom3Victory(8),
    /**
     * <code>k_EMatchOutcome_Custom4Victory = 9;</code>
     */
    k_EMatchOutcome_Custom4Victory(9),
    /**
     * <code>k_EMatchOutcome_Custom5Victory = 10;</code>
     */
    k_EMatchOutcome_Custom5Victory(10),
    /**
     * <code>k_EMatchOutcome_Custom6Victory = 11;</code>
     */
    k_EMatchOutcome_Custom6Victory(11),
    /**
     * <code>k_EMatchOutcome_Custom7Victory = 12;</code>
     */
    k_EMatchOutcome_Custom7Victory(12),
    /**
     * <code>k_EMatchOutcome_Custom8Victory = 13;</code>
     */
    k_EMatchOutcome_Custom8Victory(13),
    /**
     * <code>k_EMatchOutcome_NotScored_PoorNetworkConditions = 64;</code>
     */
    k_EMatchOutcome_NotScored_PoorNetworkConditions(64),
    /**
     * <code>k_EMatchOutcome_NotScored_Leaver = 65;</code>
     */
    k_EMatchOutcome_NotScored_Leaver(65),
    /**
     * <code>k_EMatchOutcome_NotScored_ServerCrash = 66;</code>
     */
    k_EMatchOutcome_NotScored_ServerCrash(66),
    /**
     * <code>k_EMatchOutcome_NotScored_NeverStarted = 67;</code>
     */
    k_EMatchOutcome_NotScored_NeverStarted(67),
    /**
     * <code>k_EMatchOutcome_NotScored_Canceled = 68;</code>
     */
    k_EMatchOutcome_NotScored_Canceled(68),
    /**
     * <code>k_EMatchOutcome_NotScored_Suspicious = 69;</code>
     */
    k_EMatchOutcome_NotScored_Suspicious(69),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EMatchOutcome.class.getName());
    }
    /**
     * <code>k_EMatchOutcome_Unknown = 0;</code>
     */
    public static final int k_EMatchOutcome_Unknown_VALUE = 0;
    /**
     * <code>k_EMatchOutcome_RadVictory = 2;</code>
     */
    public static final int k_EMatchOutcome_RadVictory_VALUE = 2;
    /**
     * <code>k_EMatchOutcome_DireVictory = 3;</code>
     */
    public static final int k_EMatchOutcome_DireVictory_VALUE = 3;
    /**
     * <code>k_EMatchOutcome_NeutralVictory = 4;</code>
     */
    public static final int k_EMatchOutcome_NeutralVictory_VALUE = 4;
    /**
     * <code>k_EMatchOutcome_NoTeamWinner = 5;</code>
     */
    public static final int k_EMatchOutcome_NoTeamWinner_VALUE = 5;
    /**
     * <code>k_EMatchOutcome_Custom1Victory = 6;</code>
     */
    public static final int k_EMatchOutcome_Custom1Victory_VALUE = 6;
    /**
     * <code>k_EMatchOutcome_Custom2Victory = 7;</code>
     */
    public static final int k_EMatchOutcome_Custom2Victory_VALUE = 7;
    /**
     * <code>k_EMatchOutcome_Custom3Victory = 8;</code>
     */
    public static final int k_EMatchOutcome_Custom3Victory_VALUE = 8;
    /**
     * <code>k_EMatchOutcome_Custom4Victory = 9;</code>
     */
    public static final int k_EMatchOutcome_Custom4Victory_VALUE = 9;
    /**
     * <code>k_EMatchOutcome_Custom5Victory = 10;</code>
     */
    public static final int k_EMatchOutcome_Custom5Victory_VALUE = 10;
    /**
     * <code>k_EMatchOutcome_Custom6Victory = 11;</code>
     */
    public static final int k_EMatchOutcome_Custom6Victory_VALUE = 11;
    /**
     * <code>k_EMatchOutcome_Custom7Victory = 12;</code>
     */
    public static final int k_EMatchOutcome_Custom7Victory_VALUE = 12;
    /**
     * <code>k_EMatchOutcome_Custom8Victory = 13;</code>
     */
    public static final int k_EMatchOutcome_Custom8Victory_VALUE = 13;
    /**
     * <code>k_EMatchOutcome_NotScored_PoorNetworkConditions = 64;</code>
     */
    public static final int k_EMatchOutcome_NotScored_PoorNetworkConditions_VALUE = 64;
    /**
     * <code>k_EMatchOutcome_NotScored_Leaver = 65;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Leaver_VALUE = 65;
    /**
     * <code>k_EMatchOutcome_NotScored_ServerCrash = 66;</code>
     */
    public static final int k_EMatchOutcome_NotScored_ServerCrash_VALUE = 66;
    /**
     * <code>k_EMatchOutcome_NotScored_NeverStarted = 67;</code>
     */
    public static final int k_EMatchOutcome_NotScored_NeverStarted_VALUE = 67;
    /**
     * <code>k_EMatchOutcome_NotScored_Canceled = 68;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Canceled_VALUE = 68;
    /**
     * <code>k_EMatchOutcome_NotScored_Suspicious = 69;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Suspicious_VALUE = 69;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EMatchOutcome valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EMatchOutcome forNumber(int value) {
      switch (value) {
        case 0: return k_EMatchOutcome_Unknown;
        case 2: return k_EMatchOutcome_RadVictory;
        case 3: return k_EMatchOutcome_DireVictory;
        case 4: return k_EMatchOutcome_NeutralVictory;
        case 5: return k_EMatchOutcome_NoTeamWinner;
        case 6: return k_EMatchOutcome_Custom1Victory;
        case 7: return k_EMatchOutcome_Custom2Victory;
        case 8: return k_EMatchOutcome_Custom3Victory;
        case 9: return k_EMatchOutcome_Custom4Victory;
        case 10: return k_EMatchOutcome_Custom5Victory;
        case 11: return k_EMatchOutcome_Custom6Victory;
        case 12: return k_EMatchOutcome_Custom7Victory;
        case 13: return k_EMatchOutcome_Custom8Victory;
        case 64: return k_EMatchOutcome_NotScored_PoorNetworkConditions;
        case 65: return k_EMatchOutcome_NotScored_Leaver;
        case 66: return k_EMatchOutcome_NotScored_ServerCrash;
        case 67: return k_EMatchOutcome_NotScored_NeverStarted;
        case 68: return k_EMatchOutcome_NotScored_Canceled;
        case 69: return k_EMatchOutcome_NotScored_Suspicious;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EMatchOutcome> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>() {
            public EMatchOutcome findValueByNumber(int number) {
              return EMatchOutcome.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(34);
    }

    private static final EMatchOutcome[] VALUES = values();

    public static EMatchOutcome valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EMatchOutcome(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EMatchOutcome)
  }

  /**
   * Protobuf enum {@code dota2.ELaneType}
   */
  public enum ELaneType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LANE_TYPE_UNKNOWN = 0;</code>
     */
    LANE_TYPE_UNKNOWN(0),
    /**
     * <code>LANE_TYPE_SAFE = 1;</code>
     */
    LANE_TYPE_SAFE(1),
    /**
     * <code>LANE_TYPE_OFF = 2;</code>
     */
    LANE_TYPE_OFF(2),
    /**
     * <code>LANE_TYPE_MID = 3;</code>
     */
    LANE_TYPE_MID(3),
    /**
     * <code>LANE_TYPE_JUNGLE = 4;</code>
     */
    LANE_TYPE_JUNGLE(4),
    /**
     * <code>LANE_TYPE_ROAM = 5;</code>
     */
    LANE_TYPE_ROAM(5),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELaneType.class.getName());
    }
    /**
     * <code>LANE_TYPE_UNKNOWN = 0;</code>
     */
    public static final int LANE_TYPE_UNKNOWN_VALUE = 0;
    /**
     * <code>LANE_TYPE_SAFE = 1;</code>
     */
    public static final int LANE_TYPE_SAFE_VALUE = 1;
    /**
     * <code>LANE_TYPE_OFF = 2;</code>
     */
    public static final int LANE_TYPE_OFF_VALUE = 2;
    /**
     * <code>LANE_TYPE_MID = 3;</code>
     */
    public static final int LANE_TYPE_MID_VALUE = 3;
    /**
     * <code>LANE_TYPE_JUNGLE = 4;</code>
     */
    public static final int LANE_TYPE_JUNGLE_VALUE = 4;
    /**
     * <code>LANE_TYPE_ROAM = 5;</code>
     */
    public static final int LANE_TYPE_ROAM_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELaneType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELaneType forNumber(int value) {
      switch (value) {
        case 0: return LANE_TYPE_UNKNOWN;
        case 1: return LANE_TYPE_SAFE;
        case 2: return LANE_TYPE_OFF;
        case 3: return LANE_TYPE_MID;
        case 4: return LANE_TYPE_JUNGLE;
        case 5: return LANE_TYPE_ROAM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELaneType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELaneType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELaneType>() {
            public ELaneType findValueByNumber(int number) {
              return ELaneType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(35);
    }

    private static final ELaneType[] VALUES = values();

    public static ELaneType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELaneType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELaneType)
  }

  /**
   * Protobuf enum {@code dota2.EBadgeType}
   */
  public enum EBadgeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EBadgeType_Invalid = 0;</code>
     */
    k_EBadgeType_Invalid(0),
    /**
     * <code>k_EBadgeType_TI7_Midweek = 1;</code>
     */
    k_EBadgeType_TI7_Midweek(1),
    /**
     * <code>k_EBadgeType_TI7_Finals = 2;</code>
     */
    k_EBadgeType_TI7_Finals(2),
    /**
     * <code>k_EBadgeType_TI7_AllEvent = 3;</code>
     */
    k_EBadgeType_TI7_AllEvent(3),
    /**
     * <code>k_EBadgeType_TI8_Midweek = 4;</code>
     */
    k_EBadgeType_TI8_Midweek(4),
    /**
     * <code>k_EBadgeType_TI8_Finals = 5;</code>
     */
    k_EBadgeType_TI8_Finals(5),
    /**
     * <code>k_EBadgeType_TI8_AllEvent = 6;</code>
     */
    k_EBadgeType_TI8_AllEvent(6),
    /**
     * <code>k_EBadgeType_TI10 = 7;</code>
     */
    k_EBadgeType_TI10(7),
    /**
     * <code>k_EBadgeType_TI11_PlayoffsDay1 = 8;</code>
     */
    k_EBadgeType_TI11_PlayoffsDay1(8),
    /**
     * <code>k_EBadgeType_TI11_PlayoffsDay2 = 9;</code>
     */
    k_EBadgeType_TI11_PlayoffsDay2(9),
    /**
     * <code>k_EBadgeType_TI11_PlayoffsDay3 = 10;</code>
     */
    k_EBadgeType_TI11_PlayoffsDay3(10),
    /**
     * <code>k_EBadgeType_TI11_PlayoffsDay4 = 11;</code>
     */
    k_EBadgeType_TI11_PlayoffsDay4(11),
    /**
     * <code>k_EBadgeType_TI11_FinalsWeekend = 12;</code>
     */
    k_EBadgeType_TI11_FinalsWeekend(12),
    /**
     * <code>k_EBadgeType_TI12_PlayoffsDay1 = 13;</code>
     */
    k_EBadgeType_TI12_PlayoffsDay1(13),
    /**
     * <code>k_EBadgeType_TI12_PlayoffsDay2 = 14;</code>
     */
    k_EBadgeType_TI12_PlayoffsDay2(14),
    /**
     * <code>k_EBadgeType_TI12_PlayoffsDay3 = 15;</code>
     */
    k_EBadgeType_TI12_PlayoffsDay3(15),
    /**
     * <code>k_EBadgeType_TI12_FinalsWeekend = 16;</code>
     */
    k_EBadgeType_TI12_FinalsWeekend(16),
    /**
     * <code>k_EBadgeType_TI12_Special = 17;</code>
     */
    k_EBadgeType_TI12_Special(17),
    /**
     * <code>k_EBadgeType_TI13_FinalsDay1 = 18;</code>
     */
    k_EBadgeType_TI13_FinalsDay1(18),
    /**
     * <code>k_EBadgeType_TI13_FinalsDay2 = 19;</code>
     */
    k_EBadgeType_TI13_FinalsDay2(19),
    /**
     * <code>k_EBadgeType_TI13_FinalsDay3 = 20;</code>
     */
    k_EBadgeType_TI13_FinalsDay3(20),
    /**
     * <code>k_EBadgeType_TI13_Special = 21;</code>
     */
    k_EBadgeType_TI13_Special(21),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EBadgeType.class.getName());
    }
    /**
     * <code>k_EBadgeType_Invalid = 0;</code>
     */
    public static final int k_EBadgeType_Invalid_VALUE = 0;
    /**
     * <code>k_EBadgeType_TI7_Midweek = 1;</code>
     */
    public static final int k_EBadgeType_TI7_Midweek_VALUE = 1;
    /**
     * <code>k_EBadgeType_TI7_Finals = 2;</code>
     */
    public static final int k_EBadgeType_TI7_Finals_VALUE = 2;
    /**
     * <code>k_EBadgeType_TI7_AllEvent = 3;</code>
     */
    public static final int k_EBadgeType_TI7_AllEvent_VALUE = 3;
    /**
     * <code>k_EBadgeType_TI8_Midweek = 4;</code>
     */
    public static final int k_EBadgeType_TI8_Midweek_VALUE = 4;
    /**
     * <code>k_EBadgeType_TI8_Finals = 5;</code>
     */
    public static final int k_EBadgeType_TI8_Finals_VALUE = 5;
    /**
     * <code>k_EBadgeType_TI8_AllEvent = 6;</code>
     */
    public static final int k_EBadgeType_TI8_AllEvent_VALUE = 6;
    /**
     * <code>k_EBadgeType_TI10 = 7;</code>
     */
    public static final int k_EBadgeType_TI10_VALUE = 7;
    /**
     * <code>k_EBadgeType_TI11_PlayoffsDay1 = 8;</code>
     */
    public static final int k_EBadgeType_TI11_PlayoffsDay1_VALUE = 8;
    /**
     * <code>k_EBadgeType_TI11_PlayoffsDay2 = 9;</code>
     */
    public static final int k_EBadgeType_TI11_PlayoffsDay2_VALUE = 9;
    /**
     * <code>k_EBadgeType_TI11_PlayoffsDay3 = 10;</code>
     */
    public static final int k_EBadgeType_TI11_PlayoffsDay3_VALUE = 10;
    /**
     * <code>k_EBadgeType_TI11_PlayoffsDay4 = 11;</code>
     */
    public static final int k_EBadgeType_TI11_PlayoffsDay4_VALUE = 11;
    /**
     * <code>k_EBadgeType_TI11_FinalsWeekend = 12;</code>
     */
    public static final int k_EBadgeType_TI11_FinalsWeekend_VALUE = 12;
    /**
     * <code>k_EBadgeType_TI12_PlayoffsDay1 = 13;</code>
     */
    public static final int k_EBadgeType_TI12_PlayoffsDay1_VALUE = 13;
    /**
     * <code>k_EBadgeType_TI12_PlayoffsDay2 = 14;</code>
     */
    public static final int k_EBadgeType_TI12_PlayoffsDay2_VALUE = 14;
    /**
     * <code>k_EBadgeType_TI12_PlayoffsDay3 = 15;</code>
     */
    public static final int k_EBadgeType_TI12_PlayoffsDay3_VALUE = 15;
    /**
     * <code>k_EBadgeType_TI12_FinalsWeekend = 16;</code>
     */
    public static final int k_EBadgeType_TI12_FinalsWeekend_VALUE = 16;
    /**
     * <code>k_EBadgeType_TI12_Special = 17;</code>
     */
    public static final int k_EBadgeType_TI12_Special_VALUE = 17;
    /**
     * <code>k_EBadgeType_TI13_FinalsDay1 = 18;</code>
     */
    public static final int k_EBadgeType_TI13_FinalsDay1_VALUE = 18;
    /**
     * <code>k_EBadgeType_TI13_FinalsDay2 = 19;</code>
     */
    public static final int k_EBadgeType_TI13_FinalsDay2_VALUE = 19;
    /**
     * <code>k_EBadgeType_TI13_FinalsDay3 = 20;</code>
     */
    public static final int k_EBadgeType_TI13_FinalsDay3_VALUE = 20;
    /**
     * <code>k_EBadgeType_TI13_Special = 21;</code>
     */
    public static final int k_EBadgeType_TI13_Special_VALUE = 21;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EBadgeType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EBadgeType forNumber(int value) {
      switch (value) {
        case 0: return k_EBadgeType_Invalid;
        case 1: return k_EBadgeType_TI7_Midweek;
        case 2: return k_EBadgeType_TI7_Finals;
        case 3: return k_EBadgeType_TI7_AllEvent;
        case 4: return k_EBadgeType_TI8_Midweek;
        case 5: return k_EBadgeType_TI8_Finals;
        case 6: return k_EBadgeType_TI8_AllEvent;
        case 7: return k_EBadgeType_TI10;
        case 8: return k_EBadgeType_TI11_PlayoffsDay1;
        case 9: return k_EBadgeType_TI11_PlayoffsDay2;
        case 10: return k_EBadgeType_TI11_PlayoffsDay3;
        case 11: return k_EBadgeType_TI11_PlayoffsDay4;
        case 12: return k_EBadgeType_TI11_FinalsWeekend;
        case 13: return k_EBadgeType_TI12_PlayoffsDay1;
        case 14: return k_EBadgeType_TI12_PlayoffsDay2;
        case 15: return k_EBadgeType_TI12_PlayoffsDay3;
        case 16: return k_EBadgeType_TI12_FinalsWeekend;
        case 17: return k_EBadgeType_TI12_Special;
        case 18: return k_EBadgeType_TI13_FinalsDay1;
        case 19: return k_EBadgeType_TI13_FinalsDay2;
        case 20: return k_EBadgeType_TI13_FinalsDay3;
        case 21: return k_EBadgeType_TI13_Special;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EBadgeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EBadgeType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EBadgeType>() {
            public EBadgeType findValueByNumber(int number) {
              return EBadgeType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(36);
    }

    private static final EBadgeType[] VALUES = values();

    public static EBadgeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EBadgeType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EBadgeType)
  }

  /**
   * Protobuf enum {@code dota2.ELeagueStatus}
   */
  public enum ELeagueStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEAGUE_STATUS_UNSET = 0;</code>
     */
    LEAGUE_STATUS_UNSET(0),
    /**
     * <code>LEAGUE_STATUS_UNSUBMITTED = 1;</code>
     */
    LEAGUE_STATUS_UNSUBMITTED(1),
    /**
     * <code>LEAGUE_STATUS_SUBMITTED = 2;</code>
     */
    LEAGUE_STATUS_SUBMITTED(2),
    /**
     * <code>LEAGUE_STATUS_ACCEPTED = 3;</code>
     */
    LEAGUE_STATUS_ACCEPTED(3),
    /**
     * <code>LEAGUE_STATUS_REJECTED = 4;</code>
     */
    LEAGUE_STATUS_REJECTED(4),
    /**
     * <code>LEAGUE_STATUS_CONCLUDED = 5;</code>
     */
    LEAGUE_STATUS_CONCLUDED(5),
    /**
     * <code>LEAGUE_STATUS_DELETED = 6;</code>
     */
    LEAGUE_STATUS_DELETED(6),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELeagueStatus.class.getName());
    }
    /**
     * <code>LEAGUE_STATUS_UNSET = 0;</code>
     */
    public static final int LEAGUE_STATUS_UNSET_VALUE = 0;
    /**
     * <code>LEAGUE_STATUS_UNSUBMITTED = 1;</code>
     */
    public static final int LEAGUE_STATUS_UNSUBMITTED_VALUE = 1;
    /**
     * <code>LEAGUE_STATUS_SUBMITTED = 2;</code>
     */
    public static final int LEAGUE_STATUS_SUBMITTED_VALUE = 2;
    /**
     * <code>LEAGUE_STATUS_ACCEPTED = 3;</code>
     */
    public static final int LEAGUE_STATUS_ACCEPTED_VALUE = 3;
    /**
     * <code>LEAGUE_STATUS_REJECTED = 4;</code>
     */
    public static final int LEAGUE_STATUS_REJECTED_VALUE = 4;
    /**
     * <code>LEAGUE_STATUS_CONCLUDED = 5;</code>
     */
    public static final int LEAGUE_STATUS_CONCLUDED_VALUE = 5;
    /**
     * <code>LEAGUE_STATUS_DELETED = 6;</code>
     */
    public static final int LEAGUE_STATUS_DELETED_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELeagueStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELeagueStatus forNumber(int value) {
      switch (value) {
        case 0: return LEAGUE_STATUS_UNSET;
        case 1: return LEAGUE_STATUS_UNSUBMITTED;
        case 2: return LEAGUE_STATUS_SUBMITTED;
        case 3: return LEAGUE_STATUS_ACCEPTED;
        case 4: return LEAGUE_STATUS_REJECTED;
        case 5: return LEAGUE_STATUS_CONCLUDED;
        case 6: return LEAGUE_STATUS_DELETED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELeagueStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELeagueStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELeagueStatus>() {
            public ELeagueStatus findValueByNumber(int number) {
              return ELeagueStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(37);
    }

    private static final ELeagueStatus[] VALUES = values();

    public static ELeagueStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELeagueStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELeagueStatus)
  }

  /**
   * Protobuf enum {@code dota2.ELeagueRegion}
   */
  public enum ELeagueRegion
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEAGUE_REGION_UNSET = 0;</code>
     */
    LEAGUE_REGION_UNSET(0),
    /**
     * <code>LEAGUE_REGION_NA = 1;</code>
     */
    LEAGUE_REGION_NA(1),
    /**
     * <code>LEAGUE_REGION_SA = 2;</code>
     */
    LEAGUE_REGION_SA(2),
    /**
     * <code>LEAGUE_REGION_WEU = 3;</code>
     */
    LEAGUE_REGION_WEU(3),
    /**
     * <code>LEAGUE_REGION_EEU = 4;</code>
     */
    LEAGUE_REGION_EEU(4),
    /**
     * <code>LEAGUE_REGION_CHINA = 5;</code>
     */
    LEAGUE_REGION_CHINA(5),
    /**
     * <code>LEAGUE_REGION_SEA = 6;</code>
     */
    LEAGUE_REGION_SEA(6),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELeagueRegion.class.getName());
    }
    /**
     * <code>LEAGUE_REGION_UNSET = 0;</code>
     */
    public static final int LEAGUE_REGION_UNSET_VALUE = 0;
    /**
     * <code>LEAGUE_REGION_NA = 1;</code>
     */
    public static final int LEAGUE_REGION_NA_VALUE = 1;
    /**
     * <code>LEAGUE_REGION_SA = 2;</code>
     */
    public static final int LEAGUE_REGION_SA_VALUE = 2;
    /**
     * <code>LEAGUE_REGION_WEU = 3;</code>
     */
    public static final int LEAGUE_REGION_WEU_VALUE = 3;
    /**
     * <code>LEAGUE_REGION_EEU = 4;</code>
     */
    public static final int LEAGUE_REGION_EEU_VALUE = 4;
    /**
     * <code>LEAGUE_REGION_CHINA = 5;</code>
     */
    public static final int LEAGUE_REGION_CHINA_VALUE = 5;
    /**
     * <code>LEAGUE_REGION_SEA = 6;</code>
     */
    public static final int LEAGUE_REGION_SEA_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELeagueRegion valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELeagueRegion forNumber(int value) {
      switch (value) {
        case 0: return LEAGUE_REGION_UNSET;
        case 1: return LEAGUE_REGION_NA;
        case 2: return LEAGUE_REGION_SA;
        case 3: return LEAGUE_REGION_WEU;
        case 4: return LEAGUE_REGION_EEU;
        case 5: return LEAGUE_REGION_CHINA;
        case 6: return LEAGUE_REGION_SEA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELeagueRegion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELeagueRegion> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELeagueRegion>() {
            public ELeagueRegion findValueByNumber(int number) {
              return ELeagueRegion.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(38);
    }

    private static final ELeagueRegion[] VALUES = values();

    public static ELeagueRegion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELeagueRegion(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELeagueRegion)
  }

  /**
   * Protobuf enum {@code dota2.ELeagueTier}
   */
  public enum ELeagueTier
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEAGUE_TIER_UNSET = 0;</code>
     */
    LEAGUE_TIER_UNSET(0),
    /**
     * <code>LEAGUE_TIER_AMATEUR = 1;</code>
     */
    LEAGUE_TIER_AMATEUR(1),
    /**
     * <code>LEAGUE_TIER_PROFESSIONAL = 2;</code>
     */
    LEAGUE_TIER_PROFESSIONAL(2),
    /**
     * <code>LEAGUE_TIER_MINOR = 3;</code>
     */
    LEAGUE_TIER_MINOR(3),
    /**
     * <code>LEAGUE_TIER_MAJOR = 4;</code>
     */
    LEAGUE_TIER_MAJOR(4),
    /**
     * <code>LEAGUE_TIER_INTERNATIONAL = 5;</code>
     */
    LEAGUE_TIER_INTERNATIONAL(5),
    /**
     * <code>LEAGUE_TIER_DPC_QUALIFIER = 6;</code>
     */
    LEAGUE_TIER_DPC_QUALIFIER(6),
    /**
     * <code>LEAGUE_TIER_DPC_LEAGUE_QUALIFIER = 7;</code>
     */
    LEAGUE_TIER_DPC_LEAGUE_QUALIFIER(7),
    /**
     * <code>LEAGUE_TIER_DPC_LEAGUE = 8;</code>
     */
    LEAGUE_TIER_DPC_LEAGUE(8),
    /**
     * <code>LEAGUE_TIER_DPC_LEAGUE_FINALS = 9;</code>
     */
    LEAGUE_TIER_DPC_LEAGUE_FINALS(9),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELeagueTier.class.getName());
    }
    /**
     * <code>LEAGUE_TIER_UNSET = 0;</code>
     */
    public static final int LEAGUE_TIER_UNSET_VALUE = 0;
    /**
     * <code>LEAGUE_TIER_AMATEUR = 1;</code>
     */
    public static final int LEAGUE_TIER_AMATEUR_VALUE = 1;
    /**
     * <code>LEAGUE_TIER_PROFESSIONAL = 2;</code>
     */
    public static final int LEAGUE_TIER_PROFESSIONAL_VALUE = 2;
    /**
     * <code>LEAGUE_TIER_MINOR = 3;</code>
     */
    public static final int LEAGUE_TIER_MINOR_VALUE = 3;
    /**
     * <code>LEAGUE_TIER_MAJOR = 4;</code>
     */
    public static final int LEAGUE_TIER_MAJOR_VALUE = 4;
    /**
     * <code>LEAGUE_TIER_INTERNATIONAL = 5;</code>
     */
    public static final int LEAGUE_TIER_INTERNATIONAL_VALUE = 5;
    /**
     * <code>LEAGUE_TIER_DPC_QUALIFIER = 6;</code>
     */
    public static final int LEAGUE_TIER_DPC_QUALIFIER_VALUE = 6;
    /**
     * <code>LEAGUE_TIER_DPC_LEAGUE_QUALIFIER = 7;</code>
     */
    public static final int LEAGUE_TIER_DPC_LEAGUE_QUALIFIER_VALUE = 7;
    /**
     * <code>LEAGUE_TIER_DPC_LEAGUE = 8;</code>
     */
    public static final int LEAGUE_TIER_DPC_LEAGUE_VALUE = 8;
    /**
     * <code>LEAGUE_TIER_DPC_LEAGUE_FINALS = 9;</code>
     */
    public static final int LEAGUE_TIER_DPC_LEAGUE_FINALS_VALUE = 9;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELeagueTier valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELeagueTier forNumber(int value) {
      switch (value) {
        case 0: return LEAGUE_TIER_UNSET;
        case 1: return LEAGUE_TIER_AMATEUR;
        case 2: return LEAGUE_TIER_PROFESSIONAL;
        case 3: return LEAGUE_TIER_MINOR;
        case 4: return LEAGUE_TIER_MAJOR;
        case 5: return LEAGUE_TIER_INTERNATIONAL;
        case 6: return LEAGUE_TIER_DPC_QUALIFIER;
        case 7: return LEAGUE_TIER_DPC_LEAGUE_QUALIFIER;
        case 8: return LEAGUE_TIER_DPC_LEAGUE;
        case 9: return LEAGUE_TIER_DPC_LEAGUE_FINALS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELeagueTier>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELeagueTier> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELeagueTier>() {
            public ELeagueTier findValueByNumber(int number) {
              return ELeagueTier.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(39);
    }

    private static final ELeagueTier[] VALUES = values();

    public static ELeagueTier valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELeagueTier(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELeagueTier)
  }

  /**
   * Protobuf enum {@code dota2.ELeagueTierCategory}
   */
  public enum ELeagueTierCategory
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEAGUE_TIER_CATEGORY_AMATEUR = 1;</code>
     */
    LEAGUE_TIER_CATEGORY_AMATEUR(1),
    /**
     * <code>LEAGUE_TIER_CATEGORY_PROFESSIONAL = 2;</code>
     */
    LEAGUE_TIER_CATEGORY_PROFESSIONAL(2),
    /**
     * <code>LEAGUE_TIER_CATEGORY_DPC = 3;</code>
     */
    LEAGUE_TIER_CATEGORY_DPC(3),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELeagueTierCategory.class.getName());
    }
    /**
     * <code>LEAGUE_TIER_CATEGORY_AMATEUR = 1;</code>
     */
    public static final int LEAGUE_TIER_CATEGORY_AMATEUR_VALUE = 1;
    /**
     * <code>LEAGUE_TIER_CATEGORY_PROFESSIONAL = 2;</code>
     */
    public static final int LEAGUE_TIER_CATEGORY_PROFESSIONAL_VALUE = 2;
    /**
     * <code>LEAGUE_TIER_CATEGORY_DPC = 3;</code>
     */
    public static final int LEAGUE_TIER_CATEGORY_DPC_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELeagueTierCategory valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELeagueTierCategory forNumber(int value) {
      switch (value) {
        case 1: return LEAGUE_TIER_CATEGORY_AMATEUR;
        case 2: return LEAGUE_TIER_CATEGORY_PROFESSIONAL;
        case 3: return LEAGUE_TIER_CATEGORY_DPC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELeagueTierCategory>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELeagueTierCategory> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELeagueTierCategory>() {
            public ELeagueTierCategory findValueByNumber(int number) {
              return ELeagueTierCategory.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(40);
    }

    private static final ELeagueTierCategory[] VALUES = values();

    public static ELeagueTierCategory valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELeagueTierCategory(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELeagueTierCategory)
  }

  /**
   * Protobuf enum {@code dota2.ELeagueDivision}
   */
  public enum ELeagueDivision
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEAGUE_DIVISION_UNSET = 0;</code>
     */
    LEAGUE_DIVISION_UNSET(0),
    /**
     * <code>LEAGUE_DIVISION_I = 1;</code>
     */
    LEAGUE_DIVISION_I(1),
    /**
     * <code>LEAGUE_DIVISION_II = 2;</code>
     */
    LEAGUE_DIVISION_II(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELeagueDivision.class.getName());
    }
    /**
     * <code>LEAGUE_DIVISION_UNSET = 0;</code>
     */
    public static final int LEAGUE_DIVISION_UNSET_VALUE = 0;
    /**
     * <code>LEAGUE_DIVISION_I = 1;</code>
     */
    public static final int LEAGUE_DIVISION_I_VALUE = 1;
    /**
     * <code>LEAGUE_DIVISION_II = 2;</code>
     */
    public static final int LEAGUE_DIVISION_II_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELeagueDivision valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELeagueDivision forNumber(int value) {
      switch (value) {
        case 0: return LEAGUE_DIVISION_UNSET;
        case 1: return LEAGUE_DIVISION_I;
        case 2: return LEAGUE_DIVISION_II;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELeagueDivision>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELeagueDivision> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELeagueDivision>() {
            public ELeagueDivision findValueByNumber(int number) {
              return ELeagueDivision.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(41);
    }

    private static final ELeagueDivision[] VALUES = values();

    public static ELeagueDivision valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELeagueDivision(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELeagueDivision)
  }

  /**
   * Protobuf enum {@code dota2.ELeagueBroadcastProvider}
   */
  public enum ELeagueBroadcastProvider
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEAGUE_BROADCAST_UNKNOWN = 0;</code>
     */
    LEAGUE_BROADCAST_UNKNOWN(0),
    /**
     * <code>LEAGUE_BROADCAST_STEAM = 1;</code>
     */
    LEAGUE_BROADCAST_STEAM(1),
    /**
     * <code>LEAGUE_BROADCAST_TWITCH = 2;</code>
     */
    LEAGUE_BROADCAST_TWITCH(2),
    /**
     * <code>LEAGUE_BROADCAST_YOUTUBE = 3;</code>
     */
    LEAGUE_BROADCAST_YOUTUBE(3),
    /**
     * <code>LEAGUE_BROADCAST_OTHER = 100;</code>
     */
    LEAGUE_BROADCAST_OTHER(100),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELeagueBroadcastProvider.class.getName());
    }
    /**
     * <code>LEAGUE_BROADCAST_UNKNOWN = 0;</code>
     */
    public static final int LEAGUE_BROADCAST_UNKNOWN_VALUE = 0;
    /**
     * <code>LEAGUE_BROADCAST_STEAM = 1;</code>
     */
    public static final int LEAGUE_BROADCAST_STEAM_VALUE = 1;
    /**
     * <code>LEAGUE_BROADCAST_TWITCH = 2;</code>
     */
    public static final int LEAGUE_BROADCAST_TWITCH_VALUE = 2;
    /**
     * <code>LEAGUE_BROADCAST_YOUTUBE = 3;</code>
     */
    public static final int LEAGUE_BROADCAST_YOUTUBE_VALUE = 3;
    /**
     * <code>LEAGUE_BROADCAST_OTHER = 100;</code>
     */
    public static final int LEAGUE_BROADCAST_OTHER_VALUE = 100;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELeagueBroadcastProvider valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELeagueBroadcastProvider forNumber(int value) {
      switch (value) {
        case 0: return LEAGUE_BROADCAST_UNKNOWN;
        case 1: return LEAGUE_BROADCAST_STEAM;
        case 2: return LEAGUE_BROADCAST_TWITCH;
        case 3: return LEAGUE_BROADCAST_YOUTUBE;
        case 100: return LEAGUE_BROADCAST_OTHER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELeagueBroadcastProvider>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELeagueBroadcastProvider> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELeagueBroadcastProvider>() {
            public ELeagueBroadcastProvider findValueByNumber(int number) {
              return ELeagueBroadcastProvider.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(42);
    }

    private static final ELeagueBroadcastProvider[] VALUES = values();

    public static ELeagueBroadcastProvider valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELeagueBroadcastProvider(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELeagueBroadcastProvider)
  }

  /**
   * Protobuf enum {@code dota2.ELeaguePhase}
   */
  public enum ELeaguePhase
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEAGUE_PHASE_UNSET = 0;</code>
     */
    LEAGUE_PHASE_UNSET(0),
    /**
     * <code>LEAGUE_PHASE_REGIONAL_QUALIFIER = 1;</code>
     */
    LEAGUE_PHASE_REGIONAL_QUALIFIER(1),
    /**
     * <code>LEAGUE_PHASE_GROUP_STAGE = 2;</code>
     */
    LEAGUE_PHASE_GROUP_STAGE(2),
    /**
     * <code>LEAGUE_PHASE_MAIN_EVENT = 3;</code>
     */
    LEAGUE_PHASE_MAIN_EVENT(3),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELeaguePhase.class.getName());
    }
    /**
     * <code>LEAGUE_PHASE_UNSET = 0;</code>
     */
    public static final int LEAGUE_PHASE_UNSET_VALUE = 0;
    /**
     * <code>LEAGUE_PHASE_REGIONAL_QUALIFIER = 1;</code>
     */
    public static final int LEAGUE_PHASE_REGIONAL_QUALIFIER_VALUE = 1;
    /**
     * <code>LEAGUE_PHASE_GROUP_STAGE = 2;</code>
     */
    public static final int LEAGUE_PHASE_GROUP_STAGE_VALUE = 2;
    /**
     * <code>LEAGUE_PHASE_MAIN_EVENT = 3;</code>
     */
    public static final int LEAGUE_PHASE_MAIN_EVENT_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELeaguePhase valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELeaguePhase forNumber(int value) {
      switch (value) {
        case 0: return LEAGUE_PHASE_UNSET;
        case 1: return LEAGUE_PHASE_REGIONAL_QUALIFIER;
        case 2: return LEAGUE_PHASE_GROUP_STAGE;
        case 3: return LEAGUE_PHASE_MAIN_EVENT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELeaguePhase>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELeaguePhase> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELeaguePhase>() {
            public ELeaguePhase findValueByNumber(int number) {
              return ELeaguePhase.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(43);
    }

    private static final ELeaguePhase[] VALUES = values();

    public static ELeaguePhase valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELeaguePhase(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELeaguePhase)
  }

  /**
   * Protobuf enum {@code dota2.ELeagueAuditAction}
   */
  public enum ELeagueAuditAction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LEAGUE_AUDIT_ACTION_INVALID = 0;</code>
     */
    LEAGUE_AUDIT_ACTION_INVALID(0),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_CREATE = 1;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_CREATE(1),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_EDIT = 2;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_EDIT(2),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_DELETE = 3;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_DELETE(3),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_ADD = 4;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_ADD(4),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_REVOKE = 5;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_REVOKE(5),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_PROMOTE = 6;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_PROMOTE(6),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_ADD = 7;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_ADD(7),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_REMOVE = 8;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_REMOVE(8),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_IMAGE_UPDATED = 9;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_IMAGE_UPDATED(9),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_MESSAGE_ADDED = 10;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_MESSAGE_ADDED(10),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_SUBMITTED = 11;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_SUBMITTED(11),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_SET_PRIZE_POOL = 12;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_SET_PRIZE_POOL(12),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADD_PRIZE_POOL_ITEM = 13;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_ADD_PRIZE_POOL_ITEM(13),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_PRIZE_POOL_ITEM = 14;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_PRIZE_POOL_ITEM(14),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_START = 15;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_START(15),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_END = 16;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_END(16),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADD_INVITED_TEAM = 17;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_ADD_INVITED_TEAM(17),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_INVITED_TEAM = 18;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_INVITED_TEAM(18),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_STATUS_CHANGED = 19;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_STATUS_CHANGED(19),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_EDIT = 20;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_EDIT(20),
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_TEAM_SWAP = 21;</code>
     */
    LEAGUE_AUDIT_ACTION_LEAGUE_TEAM_SWAP(21),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_CREATE = 100;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_CREATE(100),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_DESTROY = 101;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_DESTROY(101),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_ADD_TEAM = 102;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_ADD_TEAM(102),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_REMOVE_TEAM = 103;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_REMOVE_TEAM(103),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_SET_ADVANCING = 104;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_SET_ADVANCING(104),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_EDIT = 105;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_EDIT(105),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_POPULATE = 106;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_POPULATE(106),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_COMPLETED = 107;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_COMPLETED(107),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_SET_SECONDARY_ADVANCING = 108;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_SET_SECONDARY_ADVANCING(108),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_SET_TERTIARY_ADVANCING = 109;</code>
     */
    LEAGUE_AUDIT_ACTION_NODEGROUP_SET_TERTIARY_ADVANCING(109),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_CREATE = 200;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_CREATE(200),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_DESTROY = 201;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_DESTROY(201),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_AUTOCREATE = 202;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_AUTOCREATE(202),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_SET_TEAM = 203;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_SET_TEAM(203),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_SET_SERIES_ID = 204;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_SET_SERIES_ID(204),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_SET_ADVANCING = 205;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_SET_ADVANCING(205),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_SET_TIME = 206;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_SET_TIME(206),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_MATCH_COMPLETED = 207;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_MATCH_COMPLETED(207),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_COMPLETED = 208;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_COMPLETED(208),
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_EDIT = 209;</code>
     */
    LEAGUE_AUDIT_ACTION_NODE_EDIT(209),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELeagueAuditAction.class.getName());
    }
    /**
     * <code>LEAGUE_AUDIT_ACTION_INVALID = 0;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_INVALID_VALUE = 0;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_CREATE = 1;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_CREATE_VALUE = 1;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_EDIT = 2;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_EDIT_VALUE = 2;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_DELETE = 3;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_DELETE_VALUE = 3;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_ADD = 4;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_ADD_VALUE = 4;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_REVOKE = 5;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_REVOKE_VALUE = 5;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_PROMOTE = 6;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_PROMOTE_VALUE = 6;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_ADD = 7;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_ADD_VALUE = 7;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_REMOVE = 8;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_REMOVE_VALUE = 8;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_IMAGE_UPDATED = 9;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_IMAGE_UPDATED_VALUE = 9;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_MESSAGE_ADDED = 10;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_MESSAGE_ADDED_VALUE = 10;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_SUBMITTED = 11;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_SUBMITTED_VALUE = 11;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_SET_PRIZE_POOL = 12;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_SET_PRIZE_POOL_VALUE = 12;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADD_PRIZE_POOL_ITEM = 13;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_ADD_PRIZE_POOL_ITEM_VALUE = 13;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_PRIZE_POOL_ITEM = 14;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_PRIZE_POOL_ITEM_VALUE = 14;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_START = 15;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_START_VALUE = 15;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_END = 16;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_END_VALUE = 16;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_ADD_INVITED_TEAM = 17;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_ADD_INVITED_TEAM_VALUE = 17;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_INVITED_TEAM = 18;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_INVITED_TEAM_VALUE = 18;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_STATUS_CHANGED = 19;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_STATUS_CHANGED_VALUE = 19;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_EDIT = 20;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_EDIT_VALUE = 20;
    /**
     * <code>LEAGUE_AUDIT_ACTION_LEAGUE_TEAM_SWAP = 21;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_LEAGUE_TEAM_SWAP_VALUE = 21;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_CREATE = 100;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_CREATE_VALUE = 100;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_DESTROY = 101;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_DESTROY_VALUE = 101;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_ADD_TEAM = 102;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_ADD_TEAM_VALUE = 102;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_REMOVE_TEAM = 103;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_REMOVE_TEAM_VALUE = 103;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_SET_ADVANCING = 104;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_SET_ADVANCING_VALUE = 104;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_EDIT = 105;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_EDIT_VALUE = 105;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_POPULATE = 106;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_POPULATE_VALUE = 106;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_COMPLETED = 107;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_COMPLETED_VALUE = 107;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_SET_SECONDARY_ADVANCING = 108;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_SET_SECONDARY_ADVANCING_VALUE = 108;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODEGROUP_SET_TERTIARY_ADVANCING = 109;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODEGROUP_SET_TERTIARY_ADVANCING_VALUE = 109;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_CREATE = 200;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_CREATE_VALUE = 200;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_DESTROY = 201;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_DESTROY_VALUE = 201;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_AUTOCREATE = 202;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_AUTOCREATE_VALUE = 202;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_SET_TEAM = 203;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_SET_TEAM_VALUE = 203;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_SET_SERIES_ID = 204;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_SET_SERIES_ID_VALUE = 204;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_SET_ADVANCING = 205;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_SET_ADVANCING_VALUE = 205;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_SET_TIME = 206;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_SET_TIME_VALUE = 206;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_MATCH_COMPLETED = 207;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_MATCH_COMPLETED_VALUE = 207;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_COMPLETED = 208;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_COMPLETED_VALUE = 208;
    /**
     * <code>LEAGUE_AUDIT_ACTION_NODE_EDIT = 209;</code>
     */
    public static final int LEAGUE_AUDIT_ACTION_NODE_EDIT_VALUE = 209;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELeagueAuditAction valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELeagueAuditAction forNumber(int value) {
      switch (value) {
        case 0: return LEAGUE_AUDIT_ACTION_INVALID;
        case 1: return LEAGUE_AUDIT_ACTION_LEAGUE_CREATE;
        case 2: return LEAGUE_AUDIT_ACTION_LEAGUE_EDIT;
        case 3: return LEAGUE_AUDIT_ACTION_LEAGUE_DELETE;
        case 4: return LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_ADD;
        case 5: return LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_REVOKE;
        case 6: return LEAGUE_AUDIT_ACTION_LEAGUE_ADMIN_PROMOTE;
        case 7: return LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_ADD;
        case 8: return LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_REMOVE;
        case 9: return LEAGUE_AUDIT_ACTION_LEAGUE_IMAGE_UPDATED;
        case 10: return LEAGUE_AUDIT_ACTION_LEAGUE_MESSAGE_ADDED;
        case 11: return LEAGUE_AUDIT_ACTION_LEAGUE_SUBMITTED;
        case 12: return LEAGUE_AUDIT_ACTION_LEAGUE_SET_PRIZE_POOL;
        case 13: return LEAGUE_AUDIT_ACTION_LEAGUE_ADD_PRIZE_POOL_ITEM;
        case 14: return LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_PRIZE_POOL_ITEM;
        case 15: return LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_START;
        case 16: return LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_END;
        case 17: return LEAGUE_AUDIT_ACTION_LEAGUE_ADD_INVITED_TEAM;
        case 18: return LEAGUE_AUDIT_ACTION_LEAGUE_REMOVE_INVITED_TEAM;
        case 19: return LEAGUE_AUDIT_ACTION_LEAGUE_STATUS_CHANGED;
        case 20: return LEAGUE_AUDIT_ACTION_LEAGUE_STREAM_EDIT;
        case 21: return LEAGUE_AUDIT_ACTION_LEAGUE_TEAM_SWAP;
        case 100: return LEAGUE_AUDIT_ACTION_NODEGROUP_CREATE;
        case 101: return LEAGUE_AUDIT_ACTION_NODEGROUP_DESTROY;
        case 102: return LEAGUE_AUDIT_ACTION_NODEGROUP_ADD_TEAM;
        case 103: return LEAGUE_AUDIT_ACTION_NODEGROUP_REMOVE_TEAM;
        case 104: return LEAGUE_AUDIT_ACTION_NODEGROUP_SET_ADVANCING;
        case 105: return LEAGUE_AUDIT_ACTION_NODEGROUP_EDIT;
        case 106: return LEAGUE_AUDIT_ACTION_NODEGROUP_POPULATE;
        case 107: return LEAGUE_AUDIT_ACTION_NODEGROUP_COMPLETED;
        case 108: return LEAGUE_AUDIT_ACTION_NODEGROUP_SET_SECONDARY_ADVANCING;
        case 109: return LEAGUE_AUDIT_ACTION_NODEGROUP_SET_TERTIARY_ADVANCING;
        case 200: return LEAGUE_AUDIT_ACTION_NODE_CREATE;
        case 201: return LEAGUE_AUDIT_ACTION_NODE_DESTROY;
        case 202: return LEAGUE_AUDIT_ACTION_NODE_AUTOCREATE;
        case 203: return LEAGUE_AUDIT_ACTION_NODE_SET_TEAM;
        case 204: return LEAGUE_AUDIT_ACTION_NODE_SET_SERIES_ID;
        case 205: return LEAGUE_AUDIT_ACTION_NODE_SET_ADVANCING;
        case 206: return LEAGUE_AUDIT_ACTION_NODE_SET_TIME;
        case 207: return LEAGUE_AUDIT_ACTION_NODE_MATCH_COMPLETED;
        case 208: return LEAGUE_AUDIT_ACTION_NODE_COMPLETED;
        case 209: return LEAGUE_AUDIT_ACTION_NODE_EDIT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELeagueAuditAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELeagueAuditAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELeagueAuditAction>() {
            public ELeagueAuditAction findValueByNumber(int number) {
              return ELeagueAuditAction.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(44);
    }

    private static final ELeagueAuditAction[] VALUES = values();

    public static ELeagueAuditAction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELeagueAuditAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ELeagueAuditAction)
  }

  /**
   * Protobuf enum {@code dota2.DOTA_COMBATLOG_TYPES}
   */
  public enum DOTA_COMBATLOG_TYPES
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_COMBATLOG_INVALID = -1;</code>
     */
    DOTA_COMBATLOG_INVALID(-1),
    /**
     * <code>DOTA_COMBATLOG_DAMAGE = 0;</code>
     */
    DOTA_COMBATLOG_DAMAGE(0),
    /**
     * <code>DOTA_COMBATLOG_HEAL = 1;</code>
     */
    DOTA_COMBATLOG_HEAL(1),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_ADD = 2;</code>
     */
    DOTA_COMBATLOG_MODIFIER_ADD(2),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REMOVE = 3;</code>
     */
    DOTA_COMBATLOG_MODIFIER_REMOVE(3),
    /**
     * <code>DOTA_COMBATLOG_DEATH = 4;</code>
     */
    DOTA_COMBATLOG_DEATH(4),
    /**
     * <code>DOTA_COMBATLOG_ABILITY = 5;</code>
     */
    DOTA_COMBATLOG_ABILITY(5),
    /**
     * <code>DOTA_COMBATLOG_ITEM = 6;</code>
     */
    DOTA_COMBATLOG_ITEM(6),
    /**
     * <code>DOTA_COMBATLOG_LOCATION = 7;</code>
     */
    DOTA_COMBATLOG_LOCATION(7),
    /**
     * <code>DOTA_COMBATLOG_GOLD = 8;</code>
     */
    DOTA_COMBATLOG_GOLD(8),
    /**
     * <code>DOTA_COMBATLOG_GAME_STATE = 9;</code>
     */
    DOTA_COMBATLOG_GAME_STATE(9),
    /**
     * <code>DOTA_COMBATLOG_XP = 10;</code>
     */
    DOTA_COMBATLOG_XP(10),
    /**
     * <code>DOTA_COMBATLOG_PURCHASE = 11;</code>
     */
    DOTA_COMBATLOG_PURCHASE(11),
    /**
     * <code>DOTA_COMBATLOG_BUYBACK = 12;</code>
     */
    DOTA_COMBATLOG_BUYBACK(12),
    /**
     * <code>DOTA_COMBATLOG_ABILITY_TRIGGER = 13;</code>
     */
    DOTA_COMBATLOG_ABILITY_TRIGGER(13),
    /**
     * <code>DOTA_COMBATLOG_PLAYERSTATS = 14;</code>
     */
    DOTA_COMBATLOG_PLAYERSTATS(14),
    /**
     * <code>DOTA_COMBATLOG_MULTIKILL = 15;</code>
     */
    DOTA_COMBATLOG_MULTIKILL(15),
    /**
     * <code>DOTA_COMBATLOG_KILLSTREAK = 16;</code>
     */
    DOTA_COMBATLOG_KILLSTREAK(16),
    /**
     * <code>DOTA_COMBATLOG_TEAM_BUILDING_KILL = 17;</code>
     */
    DOTA_COMBATLOG_TEAM_BUILDING_KILL(17),
    /**
     * <code>DOTA_COMBATLOG_FIRST_BLOOD = 18;</code>
     */
    DOTA_COMBATLOG_FIRST_BLOOD(18),
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_STACK_EVENT = 19;</code>
     */
    DOTA_COMBATLOG_MODIFIER_STACK_EVENT(19),
    /**
     * <code>DOTA_COMBATLOG_NEUTRAL_CAMP_STACK = 20;</code>
     */
    DOTA_COMBATLOG_NEUTRAL_CAMP_STACK(20),
    /**
     * <code>DOTA_COMBATLOG_PICKUP_RUNE = 21;</code>
     */
    DOTA_COMBATLOG_PICKUP_RUNE(21),
    /**
     * <code>DOTA_COMBATLOG_REVEALED_INVISIBLE = 22;</code>
     */
    DOTA_COMBATLOG_REVEALED_INVISIBLE(22),
    /**
     * <code>DOTA_COMBATLOG_HERO_SAVED = 23;</code>
     */
    DOTA_COMBATLOG_HERO_SAVED(23),
    /**
     * <code>DOTA_COMBATLOG_MANA_RESTORED = 24;</code>
     */
    DOTA_COMBATLOG_MANA_RESTORED(24),
    /**
     * <code>DOTA_COMBATLOG_HERO_LEVELUP = 25;</code>
     */
    DOTA_COMBATLOG_HERO_LEVELUP(25),
    /**
     * <code>DOTA_COMBATLOG_BOTTLE_HEAL_ALLY = 26;</code>
     */
    DOTA_COMBATLOG_BOTTLE_HEAL_ALLY(26),
    /**
     * <code>DOTA_COMBATLOG_ENDGAME_STATS = 27;</code>
     */
    DOTA_COMBATLOG_ENDGAME_STATS(27),
    /**
     * <code>DOTA_COMBATLOG_INTERRUPT_CHANNEL = 28;</code>
     */
    DOTA_COMBATLOG_INTERRUPT_CHANNEL(28),
    /**
     * <code>DOTA_COMBATLOG_ALLIED_GOLD = 29;</code>
     */
    DOTA_COMBATLOG_ALLIED_GOLD(29),
    /**
     * <code>DOTA_COMBATLOG_AEGIS_TAKEN = 30;</code>
     */
    DOTA_COMBATLOG_AEGIS_TAKEN(30),
    /**
     * <code>DOTA_COMBATLOG_MANA_DAMAGE = 31;</code>
     */
    DOTA_COMBATLOG_MANA_DAMAGE(31),
    /**
     * <code>DOTA_COMBATLOG_PHYSICAL_DAMAGE_PREVENTED = 32;</code>
     */
    DOTA_COMBATLOG_PHYSICAL_DAMAGE_PREVENTED(32),
    /**
     * <code>DOTA_COMBATLOG_UNIT_SUMMONED = 33;</code>
     */
    DOTA_COMBATLOG_UNIT_SUMMONED(33),
    /**
     * <code>DOTA_COMBATLOG_ATTACK_EVADE = 34;</code>
     */
    DOTA_COMBATLOG_ATTACK_EVADE(34),
    /**
     * <code>DOTA_COMBATLOG_TREE_CUT = 35;</code>
     */
    DOTA_COMBATLOG_TREE_CUT(35),
    /**
     * <code>DOTA_COMBATLOG_SUCCESSFUL_SCAN = 36;</code>
     */
    DOTA_COMBATLOG_SUCCESSFUL_SCAN(36),
    /**
     * <code>DOTA_COMBATLOG_END_KILLSTREAK = 37;</code>
     */
    DOTA_COMBATLOG_END_KILLSTREAK(37),
    /**
     * <code>DOTA_COMBATLOG_BLOODSTONE_CHARGE = 38;</code>
     */
    DOTA_COMBATLOG_BLOODSTONE_CHARGE(38),
    /**
     * <code>DOTA_COMBATLOG_CRITICAL_DAMAGE = 39;</code>
     */
    DOTA_COMBATLOG_CRITICAL_DAMAGE(39),
    /**
     * <code>DOTA_COMBATLOG_SPELL_ABSORB = 40;</code>
     */
    DOTA_COMBATLOG_SPELL_ABSORB(40),
    /**
     * <code>DOTA_COMBATLOG_UNIT_TELEPORTED = 41;</code>
     */
    DOTA_COMBATLOG_UNIT_TELEPORTED(41),
    /**
     * <code>DOTA_COMBATLOG_KILL_EATER_EVENT = 42;</code>
     */
    DOTA_COMBATLOG_KILL_EATER_EVENT(42),
    /**
     * <code>DOTA_COMBATLOG_NEUTRAL_ITEM_EARNED = 43;</code>
     */
    DOTA_COMBATLOG_NEUTRAL_ITEM_EARNED(43),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DOTA_COMBATLOG_TYPES.class.getName());
    }
    /**
     * <code>DOTA_COMBATLOG_INVALID = -1;</code>
     */
    public static final int DOTA_COMBATLOG_INVALID_VALUE = -1;
    /**
     * <code>DOTA_COMBATLOG_DAMAGE = 0;</code>
     */
    public static final int DOTA_COMBATLOG_DAMAGE_VALUE = 0;
    /**
     * <code>DOTA_COMBATLOG_HEAL = 1;</code>
     */
    public static final int DOTA_COMBATLOG_HEAL_VALUE = 1;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_ADD = 2;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_ADD_VALUE = 2;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_REMOVE = 3;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_REMOVE_VALUE = 3;
    /**
     * <code>DOTA_COMBATLOG_DEATH = 4;</code>
     */
    public static final int DOTA_COMBATLOG_DEATH_VALUE = 4;
    /**
     * <code>DOTA_COMBATLOG_ABILITY = 5;</code>
     */
    public static final int DOTA_COMBATLOG_ABILITY_VALUE = 5;
    /**
     * <code>DOTA_COMBATLOG_ITEM = 6;</code>
     */
    public static final int DOTA_COMBATLOG_ITEM_VALUE = 6;
    /**
     * <code>DOTA_COMBATLOG_LOCATION = 7;</code>
     */
    public static final int DOTA_COMBATLOG_LOCATION_VALUE = 7;
    /**
     * <code>DOTA_COMBATLOG_GOLD = 8;</code>
     */
    public static final int DOTA_COMBATLOG_GOLD_VALUE = 8;
    /**
     * <code>DOTA_COMBATLOG_GAME_STATE = 9;</code>
     */
    public static final int DOTA_COMBATLOG_GAME_STATE_VALUE = 9;
    /**
     * <code>DOTA_COMBATLOG_XP = 10;</code>
     */
    public static final int DOTA_COMBATLOG_XP_VALUE = 10;
    /**
     * <code>DOTA_COMBATLOG_PURCHASE = 11;</code>
     */
    public static final int DOTA_COMBATLOG_PURCHASE_VALUE = 11;
    /**
     * <code>DOTA_COMBATLOG_BUYBACK = 12;</code>
     */
    public static final int DOTA_COMBATLOG_BUYBACK_VALUE = 12;
    /**
     * <code>DOTA_COMBATLOG_ABILITY_TRIGGER = 13;</code>
     */
    public static final int DOTA_COMBATLOG_ABILITY_TRIGGER_VALUE = 13;
    /**
     * <code>DOTA_COMBATLOG_PLAYERSTATS = 14;</code>
     */
    public static final int DOTA_COMBATLOG_PLAYERSTATS_VALUE = 14;
    /**
     * <code>DOTA_COMBATLOG_MULTIKILL = 15;</code>
     */
    public static final int DOTA_COMBATLOG_MULTIKILL_VALUE = 15;
    /**
     * <code>DOTA_COMBATLOG_KILLSTREAK = 16;</code>
     */
    public static final int DOTA_COMBATLOG_KILLSTREAK_VALUE = 16;
    /**
     * <code>DOTA_COMBATLOG_TEAM_BUILDING_KILL = 17;</code>
     */
    public static final int DOTA_COMBATLOG_TEAM_BUILDING_KILL_VALUE = 17;
    /**
     * <code>DOTA_COMBATLOG_FIRST_BLOOD = 18;</code>
     */
    public static final int DOTA_COMBATLOG_FIRST_BLOOD_VALUE = 18;
    /**
     * <code>DOTA_COMBATLOG_MODIFIER_STACK_EVENT = 19;</code>
     */
    public static final int DOTA_COMBATLOG_MODIFIER_STACK_EVENT_VALUE = 19;
    /**
     * <code>DOTA_COMBATLOG_NEUTRAL_CAMP_STACK = 20;</code>
     */
    public static final int DOTA_COMBATLOG_NEUTRAL_CAMP_STACK_VALUE = 20;
    /**
     * <code>DOTA_COMBATLOG_PICKUP_RUNE = 21;</code>
     */
    public static final int DOTA_COMBATLOG_PICKUP_RUNE_VALUE = 21;
    /**
     * <code>DOTA_COMBATLOG_REVEALED_INVISIBLE = 22;</code>
     */
    public static final int DOTA_COMBATLOG_REVEALED_INVISIBLE_VALUE = 22;
    /**
     * <code>DOTA_COMBATLOG_HERO_SAVED = 23;</code>
     */
    public static final int DOTA_COMBATLOG_HERO_SAVED_VALUE = 23;
    /**
     * <code>DOTA_COMBATLOG_MANA_RESTORED = 24;</code>
     */
    public static final int DOTA_COMBATLOG_MANA_RESTORED_VALUE = 24;
    /**
     * <code>DOTA_COMBATLOG_HERO_LEVELUP = 25;</code>
     */
    public static final int DOTA_COMBATLOG_HERO_LEVELUP_VALUE = 25;
    /**
     * <code>DOTA_COMBATLOG_BOTTLE_HEAL_ALLY = 26;</code>
     */
    public static final int DOTA_COMBATLOG_BOTTLE_HEAL_ALLY_VALUE = 26;
    /**
     * <code>DOTA_COMBATLOG_ENDGAME_STATS = 27;</code>
     */
    public static final int DOTA_COMBATLOG_ENDGAME_STATS_VALUE = 27;
    /**
     * <code>DOTA_COMBATLOG_INTERRUPT_CHANNEL = 28;</code>
     */
    public static final int DOTA_COMBATLOG_INTERRUPT_CHANNEL_VALUE = 28;
    /**
     * <code>DOTA_COMBATLOG_ALLIED_GOLD = 29;</code>
     */
    public static final int DOTA_COMBATLOG_ALLIED_GOLD_VALUE = 29;
    /**
     * <code>DOTA_COMBATLOG_AEGIS_TAKEN = 30;</code>
     */
    public static final int DOTA_COMBATLOG_AEGIS_TAKEN_VALUE = 30;
    /**
     * <code>DOTA_COMBATLOG_MANA_DAMAGE = 31;</code>
     */
    public static final int DOTA_COMBATLOG_MANA_DAMAGE_VALUE = 31;
    /**
     * <code>DOTA_COMBATLOG_PHYSICAL_DAMAGE_PREVENTED = 32;</code>
     */
    public static final int DOTA_COMBATLOG_PHYSICAL_DAMAGE_PREVENTED_VALUE = 32;
    /**
     * <code>DOTA_COMBATLOG_UNIT_SUMMONED = 33;</code>
     */
    public static final int DOTA_COMBATLOG_UNIT_SUMMONED_VALUE = 33;
    /**
     * <code>DOTA_COMBATLOG_ATTACK_EVADE = 34;</code>
     */
    public static final int DOTA_COMBATLOG_ATTACK_EVADE_VALUE = 34;
    /**
     * <code>DOTA_COMBATLOG_TREE_CUT = 35;</code>
     */
    public static final int DOTA_COMBATLOG_TREE_CUT_VALUE = 35;
    /**
     * <code>DOTA_COMBATLOG_SUCCESSFUL_SCAN = 36;</code>
     */
    public static final int DOTA_COMBATLOG_SUCCESSFUL_SCAN_VALUE = 36;
    /**
     * <code>DOTA_COMBATLOG_END_KILLSTREAK = 37;</code>
     */
    public static final int DOTA_COMBATLOG_END_KILLSTREAK_VALUE = 37;
    /**
     * <code>DOTA_COMBATLOG_BLOODSTONE_CHARGE = 38;</code>
     */
    public static final int DOTA_COMBATLOG_BLOODSTONE_CHARGE_VALUE = 38;
    /**
     * <code>DOTA_COMBATLOG_CRITICAL_DAMAGE = 39;</code>
     */
    public static final int DOTA_COMBATLOG_CRITICAL_DAMAGE_VALUE = 39;
    /**
     * <code>DOTA_COMBATLOG_SPELL_ABSORB = 40;</code>
     */
    public static final int DOTA_COMBATLOG_SPELL_ABSORB_VALUE = 40;
    /**
     * <code>DOTA_COMBATLOG_UNIT_TELEPORTED = 41;</code>
     */
    public static final int DOTA_COMBATLOG_UNIT_TELEPORTED_VALUE = 41;
    /**
     * <code>DOTA_COMBATLOG_KILL_EATER_EVENT = 42;</code>
     */
    public static final int DOTA_COMBATLOG_KILL_EATER_EVENT_VALUE = 42;
    /**
     * <code>DOTA_COMBATLOG_NEUTRAL_ITEM_EARNED = 43;</code>
     */
    public static final int DOTA_COMBATLOG_NEUTRAL_ITEM_EARNED_VALUE = 43;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DOTA_COMBATLOG_TYPES valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DOTA_COMBATLOG_TYPES forNumber(int value) {
      switch (value) {
        case -1: return DOTA_COMBATLOG_INVALID;
        case 0: return DOTA_COMBATLOG_DAMAGE;
        case 1: return DOTA_COMBATLOG_HEAL;
        case 2: return DOTA_COMBATLOG_MODIFIER_ADD;
        case 3: return DOTA_COMBATLOG_MODIFIER_REMOVE;
        case 4: return DOTA_COMBATLOG_DEATH;
        case 5: return DOTA_COMBATLOG_ABILITY;
        case 6: return DOTA_COMBATLOG_ITEM;
        case 7: return DOTA_COMBATLOG_LOCATION;
        case 8: return DOTA_COMBATLOG_GOLD;
        case 9: return DOTA_COMBATLOG_GAME_STATE;
        case 10: return DOTA_COMBATLOG_XP;
        case 11: return DOTA_COMBATLOG_PURCHASE;
        case 12: return DOTA_COMBATLOG_BUYBACK;
        case 13: return DOTA_COMBATLOG_ABILITY_TRIGGER;
        case 14: return DOTA_COMBATLOG_PLAYERSTATS;
        case 15: return DOTA_COMBATLOG_MULTIKILL;
        case 16: return DOTA_COMBATLOG_KILLSTREAK;
        case 17: return DOTA_COMBATLOG_TEAM_BUILDING_KILL;
        case 18: return DOTA_COMBATLOG_FIRST_BLOOD;
        case 19: return DOTA_COMBATLOG_MODIFIER_STACK_EVENT;
        case 20: return DOTA_COMBATLOG_NEUTRAL_CAMP_STACK;
        case 21: return DOTA_COMBATLOG_PICKUP_RUNE;
        case 22: return DOTA_COMBATLOG_REVEALED_INVISIBLE;
        case 23: return DOTA_COMBATLOG_HERO_SAVED;
        case 24: return DOTA_COMBATLOG_MANA_RESTORED;
        case 25: return DOTA_COMBATLOG_HERO_LEVELUP;
        case 26: return DOTA_COMBATLOG_BOTTLE_HEAL_ALLY;
        case 27: return DOTA_COMBATLOG_ENDGAME_STATS;
        case 28: return DOTA_COMBATLOG_INTERRUPT_CHANNEL;
        case 29: return DOTA_COMBATLOG_ALLIED_GOLD;
        case 30: return DOTA_COMBATLOG_AEGIS_TAKEN;
        case 31: return DOTA_COMBATLOG_MANA_DAMAGE;
        case 32: return DOTA_COMBATLOG_PHYSICAL_DAMAGE_PREVENTED;
        case 33: return DOTA_COMBATLOG_UNIT_SUMMONED;
        case 34: return DOTA_COMBATLOG_ATTACK_EVADE;
        case 35: return DOTA_COMBATLOG_TREE_CUT;
        case 36: return DOTA_COMBATLOG_SUCCESSFUL_SCAN;
        case 37: return DOTA_COMBATLOG_END_KILLSTREAK;
        case 38: return DOTA_COMBATLOG_BLOODSTONE_CHARGE;
        case 39: return DOTA_COMBATLOG_CRITICAL_DAMAGE;
        case 40: return DOTA_COMBATLOG_SPELL_ABSORB;
        case 41: return DOTA_COMBATLOG_UNIT_TELEPORTED;
        case 42: return DOTA_COMBATLOG_KILL_EATER_EVENT;
        case 43: return DOTA_COMBATLOG_NEUTRAL_ITEM_EARNED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DOTA_COMBATLOG_TYPES> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_COMBATLOG_TYPES>() {
            public DOTA_COMBATLOG_TYPES findValueByNumber(int number) {
              return DOTA_COMBATLOG_TYPES.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(45);
    }

    private static final DOTA_COMBATLOG_TYPES[] VALUES = values();

    public static DOTA_COMBATLOG_TYPES valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DOTA_COMBATLOG_TYPES(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.DOTA_COMBATLOG_TYPES)
  }

  /**
   * Protobuf enum {@code dota2.EDPCFavoriteType}
   */
  public enum EDPCFavoriteType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>FAVORITE_TYPE_ALL = 0;</code>
     */
    FAVORITE_TYPE_ALL(0),
    /**
     * <code>FAVORITE_TYPE_PLAYER = 1;</code>
     */
    FAVORITE_TYPE_PLAYER(1),
    /**
     * <code>FAVORITE_TYPE_TEAM = 2;</code>
     */
    FAVORITE_TYPE_TEAM(2),
    /**
     * <code>FAVORITE_TYPE_LEAGUE = 3;</code>
     */
    FAVORITE_TYPE_LEAGUE(3),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EDPCFavoriteType.class.getName());
    }
    /**
     * <code>FAVORITE_TYPE_ALL = 0;</code>
     */
    public static final int FAVORITE_TYPE_ALL_VALUE = 0;
    /**
     * <code>FAVORITE_TYPE_PLAYER = 1;</code>
     */
    public static final int FAVORITE_TYPE_PLAYER_VALUE = 1;
    /**
     * <code>FAVORITE_TYPE_TEAM = 2;</code>
     */
    public static final int FAVORITE_TYPE_TEAM_VALUE = 2;
    /**
     * <code>FAVORITE_TYPE_LEAGUE = 3;</code>
     */
    public static final int FAVORITE_TYPE_LEAGUE_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EDPCFavoriteType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EDPCFavoriteType forNumber(int value) {
      switch (value) {
        case 0: return FAVORITE_TYPE_ALL;
        case 1: return FAVORITE_TYPE_PLAYER;
        case 2: return FAVORITE_TYPE_TEAM;
        case 3: return FAVORITE_TYPE_LEAGUE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDPCFavoriteType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EDPCFavoriteType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDPCFavoriteType>() {
            public EDPCFavoriteType findValueByNumber(int number) {
              return EDPCFavoriteType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(46);
    }

    private static final EDPCFavoriteType[] VALUES = values();

    public static EDPCFavoriteType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EDPCFavoriteType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EDPCFavoriteType)
  }

  /**
   * Protobuf enum {@code dota2.EDPCPushNotification}
   */
  public enum EDPCPushNotification
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DPC_PUSH_NOTIFICATION_MATCH_STARTING = 1;</code>
     */
    DPC_PUSH_NOTIFICATION_MATCH_STARTING(1),
    /**
     * <code>DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM = 10;</code>
     */
    DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM(10),
    /**
     * <code>DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM = 11;</code>
     */
    DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM(11),
    /**
     * <code>DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM_AS_COACH = 12;</code>
     */
    DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM_AS_COACH(12),
    /**
     * <code>DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM_AS_COACH = 13;</code>
     */
    DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM_AS_COACH(13),
    /**
     * <code>DPC_PUSH_NOTIFICATION_LEAGUE_RESULT = 20;</code>
     */
    DPC_PUSH_NOTIFICATION_LEAGUE_RESULT(20),
    /**
     * <code>DPC_PUSH_NOTIFICATION_PREDICTION_MATCHES_AVAILABLE = 30;</code>
     */
    DPC_PUSH_NOTIFICATION_PREDICTION_MATCHES_AVAILABLE(30),
    /**
     * <code>DPC_PUSH_NOTIFICATION_PREDICTION_RESULT = 31;</code>
     */
    DPC_PUSH_NOTIFICATION_PREDICTION_RESULT(31),
    /**
     * <code>DPC_PUSH_NOTIFICATION_FANTASY_PLAYER_CLEARED = 40;</code>
     */
    DPC_PUSH_NOTIFICATION_FANTASY_PLAYER_CLEARED(40),
    /**
     * <code>DPC_PUSH_NOTIFICATION_FANTASY_DAILY_SUMMARY = 41;</code>
     */
    DPC_PUSH_NOTIFICATION_FANTASY_DAILY_SUMMARY(41),
    /**
     * <code>DPC_PUSH_NOTIFICATION_FANTASY_FINAL_RESULTS = 42;</code>
     */
    DPC_PUSH_NOTIFICATION_FANTASY_FINAL_RESULTS(42),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EDPCPushNotification.class.getName());
    }
    /**
     * <code>DPC_PUSH_NOTIFICATION_MATCH_STARTING = 1;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_MATCH_STARTING_VALUE = 1;
    /**
     * <code>DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM = 10;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM_VALUE = 10;
    /**
     * <code>DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM = 11;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM_VALUE = 11;
    /**
     * <code>DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM_AS_COACH = 12;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM_AS_COACH_VALUE = 12;
    /**
     * <code>DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM_AS_COACH = 13;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM_AS_COACH_VALUE = 13;
    /**
     * <code>DPC_PUSH_NOTIFICATION_LEAGUE_RESULT = 20;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_LEAGUE_RESULT_VALUE = 20;
    /**
     * <code>DPC_PUSH_NOTIFICATION_PREDICTION_MATCHES_AVAILABLE = 30;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_PREDICTION_MATCHES_AVAILABLE_VALUE = 30;
    /**
     * <code>DPC_PUSH_NOTIFICATION_PREDICTION_RESULT = 31;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_PREDICTION_RESULT_VALUE = 31;
    /**
     * <code>DPC_PUSH_NOTIFICATION_FANTASY_PLAYER_CLEARED = 40;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_FANTASY_PLAYER_CLEARED_VALUE = 40;
    /**
     * <code>DPC_PUSH_NOTIFICATION_FANTASY_DAILY_SUMMARY = 41;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_FANTASY_DAILY_SUMMARY_VALUE = 41;
    /**
     * <code>DPC_PUSH_NOTIFICATION_FANTASY_FINAL_RESULTS = 42;</code>
     */
    public static final int DPC_PUSH_NOTIFICATION_FANTASY_FINAL_RESULTS_VALUE = 42;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EDPCPushNotification valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EDPCPushNotification forNumber(int value) {
      switch (value) {
        case 1: return DPC_PUSH_NOTIFICATION_MATCH_STARTING;
        case 10: return DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM;
        case 11: return DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM;
        case 12: return DPC_PUSH_NOTIFICATION_PLAYER_JOINED_TEAM_AS_COACH;
        case 13: return DPC_PUSH_NOTIFICATION_PLAYER_LEFT_TEAM_AS_COACH;
        case 20: return DPC_PUSH_NOTIFICATION_LEAGUE_RESULT;
        case 30: return DPC_PUSH_NOTIFICATION_PREDICTION_MATCHES_AVAILABLE;
        case 31: return DPC_PUSH_NOTIFICATION_PREDICTION_RESULT;
        case 40: return DPC_PUSH_NOTIFICATION_FANTASY_PLAYER_CLEARED;
        case 41: return DPC_PUSH_NOTIFICATION_FANTASY_DAILY_SUMMARY;
        case 42: return DPC_PUSH_NOTIFICATION_FANTASY_FINAL_RESULTS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDPCPushNotification>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EDPCPushNotification> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDPCPushNotification>() {
            public EDPCPushNotification findValueByNumber(int number) {
              return EDPCPushNotification.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(47);
    }

    private static final EDPCPushNotification[] VALUES = values();

    public static EDPCPushNotification valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EDPCPushNotification(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EDPCPushNotification)
  }

  /**
   * Protobuf enum {@code dota2.EEventActionScoreMode}
   */
  public enum EEventActionScoreMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_eEventActionScoreMode_Add = 0;</code>
     */
    k_eEventActionScoreMode_Add(0),
    /**
     * <code>k_eEventActionScoreMode_Min = 1;</code>
     */
    k_eEventActionScoreMode_Min(1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EEventActionScoreMode.class.getName());
    }
    /**
     * <code>k_eEventActionScoreMode_Add = 0;</code>
     */
    public static final int k_eEventActionScoreMode_Add_VALUE = 0;
    /**
     * <code>k_eEventActionScoreMode_Min = 1;</code>
     */
    public static final int k_eEventActionScoreMode_Min_VALUE = 1;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EEventActionScoreMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EEventActionScoreMode forNumber(int value) {
      switch (value) {
        case 0: return k_eEventActionScoreMode_Add;
        case 1: return k_eEventActionScoreMode_Min;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EEventActionScoreMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EEventActionScoreMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EEventActionScoreMode>() {
            public EEventActionScoreMode findValueByNumber(int number) {
              return EEventActionScoreMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(48);
    }

    private static final EEventActionScoreMode[] VALUES = values();

    public static EEventActionScoreMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EEventActionScoreMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EEventActionScoreMode)
  }

  /**
   * Protobuf enum {@code dota2.EPlayerChallengeHistoryType}
   */
  public enum EPlayerChallengeHistoryType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EPlayerChallengeHistoryType_Invalid = 0;</code>
     */
    k_EPlayerChallengeHistoryType_Invalid(0),
    /**
     * <code>k_EPlayerChallengeHistoryType_KillEater = 1;</code>
     */
    k_EPlayerChallengeHistoryType_KillEater(1),
    /**
     * <code>k_EPlayerChallengeHistoryType_DotaPlusRelic = 2;</code>
     */
    k_EPlayerChallengeHistoryType_DotaPlusRelic(2),
    /**
     * <code>k_EPlayerChallengeHistoryType_DotaPlusHeroPlayerChallenge = 3;</code>
     */
    k_EPlayerChallengeHistoryType_DotaPlusHeroPlayerChallenge(3),
    /**
     * <code>k_EPlayerChallengeHistoryType_InGameEventChallenge = 4;</code>
     */
    k_EPlayerChallengeHistoryType_InGameEventChallenge(4),
    /**
     * <code>k_EPlayerChallengeHistoryType_GuildContract = 5;</code>
     */
    k_EPlayerChallengeHistoryType_GuildContract(5),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EPlayerChallengeHistoryType.class.getName());
    }
    /**
     * <code>k_EPlayerChallengeHistoryType_Invalid = 0;</code>
     */
    public static final int k_EPlayerChallengeHistoryType_Invalid_VALUE = 0;
    /**
     * <code>k_EPlayerChallengeHistoryType_KillEater = 1;</code>
     */
    public static final int k_EPlayerChallengeHistoryType_KillEater_VALUE = 1;
    /**
     * <code>k_EPlayerChallengeHistoryType_DotaPlusRelic = 2;</code>
     */
    public static final int k_EPlayerChallengeHistoryType_DotaPlusRelic_VALUE = 2;
    /**
     * <code>k_EPlayerChallengeHistoryType_DotaPlusHeroPlayerChallenge = 3;</code>
     */
    public static final int k_EPlayerChallengeHistoryType_DotaPlusHeroPlayerChallenge_VALUE = 3;
    /**
     * <code>k_EPlayerChallengeHistoryType_InGameEventChallenge = 4;</code>
     */
    public static final int k_EPlayerChallengeHistoryType_InGameEventChallenge_VALUE = 4;
    /**
     * <code>k_EPlayerChallengeHistoryType_GuildContract = 5;</code>
     */
    public static final int k_EPlayerChallengeHistoryType_GuildContract_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EPlayerChallengeHistoryType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EPlayerChallengeHistoryType forNumber(int value) {
      switch (value) {
        case 0: return k_EPlayerChallengeHistoryType_Invalid;
        case 1: return k_EPlayerChallengeHistoryType_KillEater;
        case 2: return k_EPlayerChallengeHistoryType_DotaPlusRelic;
        case 3: return k_EPlayerChallengeHistoryType_DotaPlusHeroPlayerChallenge;
        case 4: return k_EPlayerChallengeHistoryType_InGameEventChallenge;
        case 5: return k_EPlayerChallengeHistoryType_GuildContract;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EPlayerChallengeHistoryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EPlayerChallengeHistoryType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EPlayerChallengeHistoryType>() {
            public EPlayerChallengeHistoryType findValueByNumber(int number) {
              return EPlayerChallengeHistoryType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(49);
    }

    private static final EPlayerChallengeHistoryType[] VALUES = values();

    public static EPlayerChallengeHistoryType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EPlayerChallengeHistoryType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EPlayerChallengeHistoryType)
  }

  /**
   * Protobuf enum {@code dota2.EOverwatchReportReason}
   */
  public enum EOverwatchReportReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EOverwatchReportReason_Unknown = 0;</code>
     */
    k_EOverwatchReportReason_Unknown(0),
    /**
     * <code>k_EOverwatchReportReason_Cheating = 1;</code>
     */
    k_EOverwatchReportReason_Cheating(1),
    /**
     * <code>k_EOverwatchReportReason_Feeding = 2;</code>
     */
    k_EOverwatchReportReason_Feeding(2),
    /**
     * <code>k_EOverwatchReportReason_Griefing = 3;</code>
     */
    k_EOverwatchReportReason_Griefing(3),
    /**
     * <code>k_EOverwatchReportReason_Suspicious = 4;</code>
     */
    k_EOverwatchReportReason_Suspicious(4),
    /**
     * <code>k_EOverwatchReportReason_AbilityAbuse = 5;</code>
     */
    k_EOverwatchReportReason_AbilityAbuse(5),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        EOverwatchReportReason.class.getName());
    }
    /**
     * <code>k_EOverwatchReportReason_Unknown = 0;</code>
     */
    public static final int k_EOverwatchReportReason_Unknown_VALUE = 0;
    /**
     * <code>k_EOverwatchReportReason_Cheating = 1;</code>
     */
    public static final int k_EOverwatchReportReason_Cheating_VALUE = 1;
    /**
     * <code>k_EOverwatchReportReason_Feeding = 2;</code>
     */
    public static final int k_EOverwatchReportReason_Feeding_VALUE = 2;
    /**
     * <code>k_EOverwatchReportReason_Griefing = 3;</code>
     */
    public static final int k_EOverwatchReportReason_Griefing_VALUE = 3;
    /**
     * <code>k_EOverwatchReportReason_Suspicious = 4;</code>
     */
    public static final int k_EOverwatchReportReason_Suspicious_VALUE = 4;
    /**
     * <code>k_EOverwatchReportReason_AbilityAbuse = 5;</code>
     */
    public static final int k_EOverwatchReportReason_AbilityAbuse_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EOverwatchReportReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EOverwatchReportReason forNumber(int value) {
      switch (value) {
        case 0: return k_EOverwatchReportReason_Unknown;
        case 1: return k_EOverwatchReportReason_Cheating;
        case 2: return k_EOverwatchReportReason_Feeding;
        case 3: return k_EOverwatchReportReason_Griefing;
        case 4: return k_EOverwatchReportReason_Suspicious;
        case 5: return k_EOverwatchReportReason_AbilityAbuse;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EOverwatchReportReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EOverwatchReportReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EOverwatchReportReason>() {
            public EOverwatchReportReason findValueByNumber(int number) {
              return EOverwatchReportReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(50);
    }

    private static final EOverwatchReportReason[] VALUES = values();

    public static EOverwatchReportReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EOverwatchReportReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.EOverwatchReportReason)
  }

  /**
   * Protobuf enum {@code dota2.ECandyShopUpgrade}
   */
  public enum ECandyShopUpgrade
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ECandyShopUpgradeInvalid = -1;</code>
     */
    k_ECandyShopUpgradeInvalid(-1),
    /**
     * <code>k_ECandyShopUpgrade_InventorySize = 0;</code>
     */
    k_ECandyShopUpgrade_InventorySize(0),
    /**
     * <code>k_ECandyShopUpgrade_RewardShelf = 1;</code>
     */
    k_ECandyShopUpgrade_RewardShelf(1),
    /**
     * <code>k_ECandyShopUpgrade_ExtraExchangeRecipe = 2;</code>
     */
    k_ECandyShopUpgrade_ExtraExchangeRecipe(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ECandyShopUpgrade.class.getName());
    }
    /**
     * <code>k_ECandyShopUpgradeInvalid = -1;</code>
     */
    public static final int k_ECandyShopUpgradeInvalid_VALUE = -1;
    /**
     * <code>k_ECandyShopUpgrade_InventorySize = 0;</code>
     */
    public static final int k_ECandyShopUpgrade_InventorySize_VALUE = 0;
    /**
     * <code>k_ECandyShopUpgrade_RewardShelf = 1;</code>
     */
    public static final int k_ECandyShopUpgrade_RewardShelf_VALUE = 1;
    /**
     * <code>k_ECandyShopUpgrade_ExtraExchangeRecipe = 2;</code>
     */
    public static final int k_ECandyShopUpgrade_ExtraExchangeRecipe_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ECandyShopUpgrade valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ECandyShopUpgrade forNumber(int value) {
      switch (value) {
        case -1: return k_ECandyShopUpgradeInvalid;
        case 0: return k_ECandyShopUpgrade_InventorySize;
        case 1: return k_ECandyShopUpgrade_RewardShelf;
        case 2: return k_ECandyShopUpgrade_ExtraExchangeRecipe;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ECandyShopUpgrade>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ECandyShopUpgrade> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ECandyShopUpgrade>() {
            public ECandyShopUpgrade findValueByNumber(int number) {
              return ECandyShopUpgrade.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.getDescriptor().getEnumTypes().get(51);
    }

    private static final ECandyShopUpgrade[] VALUES = values();

    public static ECandyShopUpgrade valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ECandyShopUpgrade(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dota2.ECandyShopUpgrade)
  }

  public interface CDOTAClientHardwareSpecsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dota2.CDOTAClientHardwareSpecs)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 logical_processors = 1;</code>
     * @return Whether the logicalProcessors field is set.
     */
    boolean hasLogicalProcessors();
    /**
     * <code>optional uint32 logical_processors = 1;</code>
     * @return The logicalProcessors.
     */
    int getLogicalProcessors();

    /**
     * <code>optional fixed64 cpu_cycles_per_second = 2;</code>
     * @return Whether the cpuCyclesPerSecond field is set.
     */
    boolean hasCpuCyclesPerSecond();
    /**
     * <code>optional fixed64 cpu_cycles_per_second = 2;</code>
     * @return The cpuCyclesPerSecond.
     */
    long getCpuCyclesPerSecond();

    /**
     * <code>optional fixed64 total_physical_memory = 3;</code>
     * @return Whether the totalPhysicalMemory field is set.
     */
    boolean hasTotalPhysicalMemory();
    /**
     * <code>optional fixed64 total_physical_memory = 3;</code>
     * @return The totalPhysicalMemory.
     */
    long getTotalPhysicalMemory();

    /**
     * <code>optional bool is_64_bit_os = 4;</code>
     * @return Whether the is64BitOs field is set.
     */
    boolean hasIs64BitOs();
    /**
     * <code>optional bool is_64_bit_os = 4;</code>
     * @return The is64BitOs.
     */
    boolean getIs64BitOs();

    /**
     * <code>optional uint64 upload_measurement = 5;</code>
     * @return Whether the uploadMeasurement field is set.
     */
    boolean hasUploadMeasurement();
    /**
     * <code>optional uint64 upload_measurement = 5;</code>
     * @return The uploadMeasurement.
     */
    long getUploadMeasurement();

    /**
     * <code>optional bool prefer_not_host = 6;</code>
     * @return Whether the preferNotHost field is set.
     */
    boolean hasPreferNotHost();
    /**
     * <code>optional bool prefer_not_host = 6;</code>
     * @return The preferNotHost.
     */
    boolean getPreferNotHost();

    /**
     * <code>repeated uint32 crc = 7;</code>
     * @return A list containing the crc.
     */
    java.util.List<java.lang.Integer> getCrcList();
    /**
     * <code>repeated uint32 crc = 7;</code>
     * @return The count of crc.
     */
    int getCrcCount();
    /**
     * <code>repeated uint32 crc = 7;</code>
     * @param index The index of the element to return.
     * @return The crc at the given index.
     */
    int getCrc(int index);
  }
  /**
   * Protobuf type {@code dota2.CDOTAClientHardwareSpecs}
   */
  public static final class CDOTAClientHardwareSpecs extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dota2.CDOTAClientHardwareSpecs)
      CDOTAClientHardwareSpecsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CDOTAClientHardwareSpecs.class.getName());
    }
    // Use CDOTAClientHardwareSpecs.newBuilder() to construct.
    private CDOTAClientHardwareSpecs(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CDOTAClientHardwareSpecs() {
      crc_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTAClientHardwareSpecs_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTAClientHardwareSpecs_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs.Builder.class);
    }

    private int bitField0_;
    public static final int LOGICAL_PROCESSORS_FIELD_NUMBER = 1;
    private int logicalProcessors_ = 0;
    /**
     * <code>optional uint32 logical_processors = 1;</code>
     * @return Whether the logicalProcessors field is set.
     */
    @java.lang.Override
    public boolean hasLogicalProcessors() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 logical_processors = 1;</code>
     * @return The logicalProcessors.
     */
    @java.lang.Override
    public int getLogicalProcessors() {
      return logicalProcessors_;
    }

    public static final int CPU_CYCLES_PER_SECOND_FIELD_NUMBER = 2;
    private long cpuCyclesPerSecond_ = 0L;
    /**
     * <code>optional fixed64 cpu_cycles_per_second = 2;</code>
     * @return Whether the cpuCyclesPerSecond field is set.
     */
    @java.lang.Override
    public boolean hasCpuCyclesPerSecond() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 cpu_cycles_per_second = 2;</code>
     * @return The cpuCyclesPerSecond.
     */
    @java.lang.Override
    public long getCpuCyclesPerSecond() {
      return cpuCyclesPerSecond_;
    }

    public static final int TOTAL_PHYSICAL_MEMORY_FIELD_NUMBER = 3;
    private long totalPhysicalMemory_ = 0L;
    /**
     * <code>optional fixed64 total_physical_memory = 3;</code>
     * @return Whether the totalPhysicalMemory field is set.
     */
    @java.lang.Override
    public boolean hasTotalPhysicalMemory() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional fixed64 total_physical_memory = 3;</code>
     * @return The totalPhysicalMemory.
     */
    @java.lang.Override
    public long getTotalPhysicalMemory() {
      return totalPhysicalMemory_;
    }

    public static final int IS_64_BIT_OS_FIELD_NUMBER = 4;
    private boolean is64BitOs_ = false;
    /**
     * <code>optional bool is_64_bit_os = 4;</code>
     * @return Whether the is64BitOs field is set.
     */
    @java.lang.Override
    public boolean hasIs64BitOs() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool is_64_bit_os = 4;</code>
     * @return The is64BitOs.
     */
    @java.lang.Override
    public boolean getIs64BitOs() {
      return is64BitOs_;
    }

    public static final int UPLOAD_MEASUREMENT_FIELD_NUMBER = 5;
    private long uploadMeasurement_ = 0L;
    /**
     * <code>optional uint64 upload_measurement = 5;</code>
     * @return Whether the uploadMeasurement field is set.
     */
    @java.lang.Override
    public boolean hasUploadMeasurement() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint64 upload_measurement = 5;</code>
     * @return The uploadMeasurement.
     */
    @java.lang.Override
    public long getUploadMeasurement() {
      return uploadMeasurement_;
    }

    public static final int PREFER_NOT_HOST_FIELD_NUMBER = 6;
    private boolean preferNotHost_ = false;
    /**
     * <code>optional bool prefer_not_host = 6;</code>
     * @return Whether the preferNotHost field is set.
     */
    @java.lang.Override
    public boolean hasPreferNotHost() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional bool prefer_not_host = 6;</code>
     * @return The preferNotHost.
     */
    @java.lang.Override
    public boolean getPreferNotHost() {
      return preferNotHost_;
    }

    public static final int CRC_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList crc_ =
        emptyIntList();
    /**
     * <code>repeated uint32 crc = 7;</code>
     * @return A list containing the crc.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getCrcList() {
      return crc_;
    }
    /**
     * <code>repeated uint32 crc = 7;</code>
     * @return The count of crc.
     */
    public int getCrcCount() {
      return crc_.size();
    }
    /**
     * <code>repeated uint32 crc = 7;</code>
     * @param index The index of the element to return.
     * @return The crc at the given index.
     */
    public int getCrc(int index) {
      return crc_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, logicalProcessors_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, cpuCyclesPerSecond_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeFixed64(3, totalPhysicalMemory_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, is64BitOs_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt64(5, uploadMeasurement_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBool(6, preferNotHost_);
      }
      for (int i = 0; i < crc_.size(); i++) {
        output.writeUInt32(7, crc_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, logicalProcessors_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, cpuCyclesPerSecond_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(3, totalPhysicalMemory_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, is64BitOs_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, uploadMeasurement_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, preferNotHost_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < crc_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(crc_.getInt(i));
        }
        size += dataSize;
        size += 1 * getCrcList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs other = (com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs) obj;

      if (hasLogicalProcessors() != other.hasLogicalProcessors()) return false;
      if (hasLogicalProcessors()) {
        if (getLogicalProcessors()
            != other.getLogicalProcessors()) return false;
      }
      if (hasCpuCyclesPerSecond() != other.hasCpuCyclesPerSecond()) return false;
      if (hasCpuCyclesPerSecond()) {
        if (getCpuCyclesPerSecond()
            != other.getCpuCyclesPerSecond()) return false;
      }
      if (hasTotalPhysicalMemory() != other.hasTotalPhysicalMemory()) return false;
      if (hasTotalPhysicalMemory()) {
        if (getTotalPhysicalMemory()
            != other.getTotalPhysicalMemory()) return false;
      }
      if (hasIs64BitOs() != other.hasIs64BitOs()) return false;
      if (hasIs64BitOs()) {
        if (getIs64BitOs()
            != other.getIs64BitOs()) return false;
      }
      if (hasUploadMeasurement() != other.hasUploadMeasurement()) return false;
      if (hasUploadMeasurement()) {
        if (getUploadMeasurement()
            != other.getUploadMeasurement()) return false;
      }
      if (hasPreferNotHost() != other.hasPreferNotHost()) return false;
      if (hasPreferNotHost()) {
        if (getPreferNotHost()
            != other.getPreferNotHost()) return false;
      }
      if (!getCrcList()
          .equals(other.getCrcList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLogicalProcessors()) {
        hash = (37 * hash) + LOGICAL_PROCESSORS_FIELD_NUMBER;
        hash = (53 * hash) + getLogicalProcessors();
      }
      if (hasCpuCyclesPerSecond()) {
        hash = (37 * hash) + CPU_CYCLES_PER_SECOND_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCpuCyclesPerSecond());
      }
      if (hasTotalPhysicalMemory()) {
        hash = (37 * hash) + TOTAL_PHYSICAL_MEMORY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalPhysicalMemory());
      }
      if (hasIs64BitOs()) {
        hash = (37 * hash) + IS_64_BIT_OS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIs64BitOs());
      }
      if (hasUploadMeasurement()) {
        hash = (37 * hash) + UPLOAD_MEASUREMENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUploadMeasurement());
      }
      if (hasPreferNotHost()) {
        hash = (37 * hash) + PREFER_NOT_HOST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPreferNotHost());
      }
      if (getCrcCount() > 0) {
        hash = (37 * hash) + CRC_FIELD_NUMBER;
        hash = (53 * hash) + getCrcList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dota2.CDOTAClientHardwareSpecs}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dota2.CDOTAClientHardwareSpecs)
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTAClientHardwareSpecs_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTAClientHardwareSpecs_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs.Builder.class);
      }

      // Construct using com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        logicalProcessors_ = 0;
        cpuCyclesPerSecond_ = 0L;
        totalPhysicalMemory_ = 0L;
        is64BitOs_ = false;
        uploadMeasurement_ = 0L;
        preferNotHost_ = false;
        crc_ = emptyIntList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTAClientHardwareSpecs_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs getDefaultInstanceForType() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs build() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs buildPartial() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs result = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.logicalProcessors_ = logicalProcessors_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.cpuCyclesPerSecond_ = cpuCyclesPerSecond_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.totalPhysicalMemory_ = totalPhysicalMemory_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.is64BitOs_ = is64BitOs_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.uploadMeasurement_ = uploadMeasurement_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.preferNotHost_ = preferNotHost_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          crc_.makeImmutable();
          result.crc_ = crc_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs) {
          return mergeFrom((com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs other) {
        if (other == com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs.getDefaultInstance()) return this;
        if (other.hasLogicalProcessors()) {
          setLogicalProcessors(other.getLogicalProcessors());
        }
        if (other.hasCpuCyclesPerSecond()) {
          setCpuCyclesPerSecond(other.getCpuCyclesPerSecond());
        }
        if (other.hasTotalPhysicalMemory()) {
          setTotalPhysicalMemory(other.getTotalPhysicalMemory());
        }
        if (other.hasIs64BitOs()) {
          setIs64BitOs(other.getIs64BitOs());
        }
        if (other.hasUploadMeasurement()) {
          setUploadMeasurement(other.getUploadMeasurement());
        }
        if (other.hasPreferNotHost()) {
          setPreferNotHost(other.getPreferNotHost());
        }
        if (!other.crc_.isEmpty()) {
          if (crc_.isEmpty()) {
            crc_ = other.crc_;
            crc_.makeImmutable();
            bitField0_ |= 0x00000040;
          } else {
            ensureCrcIsMutable();
            crc_.addAll(other.crc_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                logicalProcessors_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 17: {
                cpuCyclesPerSecond_ = input.readFixed64();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                totalPhysicalMemory_ = input.readFixed64();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 32: {
                is64BitOs_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                uploadMeasurement_ = input.readUInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                preferNotHost_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                int v = input.readUInt32();
                ensureCrcIsMutable();
                crc_.addInt(v);
                break;
              } // case 56
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureCrcIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  crc_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int logicalProcessors_ ;
      /**
       * <code>optional uint32 logical_processors = 1;</code>
       * @return Whether the logicalProcessors field is set.
       */
      @java.lang.Override
      public boolean hasLogicalProcessors() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 logical_processors = 1;</code>
       * @return The logicalProcessors.
       */
      @java.lang.Override
      public int getLogicalProcessors() {
        return logicalProcessors_;
      }
      /**
       * <code>optional uint32 logical_processors = 1;</code>
       * @param value The logicalProcessors to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalProcessors(int value) {

        logicalProcessors_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 logical_processors = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogicalProcessors() {
        bitField0_ = (bitField0_ & ~0x00000001);
        logicalProcessors_ = 0;
        onChanged();
        return this;
      }

      private long cpuCyclesPerSecond_ ;
      /**
       * <code>optional fixed64 cpu_cycles_per_second = 2;</code>
       * @return Whether the cpuCyclesPerSecond field is set.
       */
      @java.lang.Override
      public boolean hasCpuCyclesPerSecond() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 cpu_cycles_per_second = 2;</code>
       * @return The cpuCyclesPerSecond.
       */
      @java.lang.Override
      public long getCpuCyclesPerSecond() {
        return cpuCyclesPerSecond_;
      }
      /**
       * <code>optional fixed64 cpu_cycles_per_second = 2;</code>
       * @param value The cpuCyclesPerSecond to set.
       * @return This builder for chaining.
       */
      public Builder setCpuCyclesPerSecond(long value) {

        cpuCyclesPerSecond_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 cpu_cycles_per_second = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpuCyclesPerSecond() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cpuCyclesPerSecond_ = 0L;
        onChanged();
        return this;
      }

      private long totalPhysicalMemory_ ;
      /**
       * <code>optional fixed64 total_physical_memory = 3;</code>
       * @return Whether the totalPhysicalMemory field is set.
       */
      @java.lang.Override
      public boolean hasTotalPhysicalMemory() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional fixed64 total_physical_memory = 3;</code>
       * @return The totalPhysicalMemory.
       */
      @java.lang.Override
      public long getTotalPhysicalMemory() {
        return totalPhysicalMemory_;
      }
      /**
       * <code>optional fixed64 total_physical_memory = 3;</code>
       * @param value The totalPhysicalMemory to set.
       * @return This builder for chaining.
       */
      public Builder setTotalPhysicalMemory(long value) {

        totalPhysicalMemory_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 total_physical_memory = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalPhysicalMemory() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalPhysicalMemory_ = 0L;
        onChanged();
        return this;
      }

      private boolean is64BitOs_ ;
      /**
       * <code>optional bool is_64_bit_os = 4;</code>
       * @return Whether the is64BitOs field is set.
       */
      @java.lang.Override
      public boolean hasIs64BitOs() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool is_64_bit_os = 4;</code>
       * @return The is64BitOs.
       */
      @java.lang.Override
      public boolean getIs64BitOs() {
        return is64BitOs_;
      }
      /**
       * <code>optional bool is_64_bit_os = 4;</code>
       * @param value The is64BitOs to set.
       * @return This builder for chaining.
       */
      public Builder setIs64BitOs(boolean value) {

        is64BitOs_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_64_bit_os = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIs64BitOs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        is64BitOs_ = false;
        onChanged();
        return this;
      }

      private long uploadMeasurement_ ;
      /**
       * <code>optional uint64 upload_measurement = 5;</code>
       * @return Whether the uploadMeasurement field is set.
       */
      @java.lang.Override
      public boolean hasUploadMeasurement() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint64 upload_measurement = 5;</code>
       * @return The uploadMeasurement.
       */
      @java.lang.Override
      public long getUploadMeasurement() {
        return uploadMeasurement_;
      }
      /**
       * <code>optional uint64 upload_measurement = 5;</code>
       * @param value The uploadMeasurement to set.
       * @return This builder for chaining.
       */
      public Builder setUploadMeasurement(long value) {

        uploadMeasurement_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 upload_measurement = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUploadMeasurement() {
        bitField0_ = (bitField0_ & ~0x00000010);
        uploadMeasurement_ = 0L;
        onChanged();
        return this;
      }

      private boolean preferNotHost_ ;
      /**
       * <code>optional bool prefer_not_host = 6;</code>
       * @return Whether the preferNotHost field is set.
       */
      @java.lang.Override
      public boolean hasPreferNotHost() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool prefer_not_host = 6;</code>
       * @return The preferNotHost.
       */
      @java.lang.Override
      public boolean getPreferNotHost() {
        return preferNotHost_;
      }
      /**
       * <code>optional bool prefer_not_host = 6;</code>
       * @param value The preferNotHost to set.
       * @return This builder for chaining.
       */
      public Builder setPreferNotHost(boolean value) {

        preferNotHost_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool prefer_not_host = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreferNotHost() {
        bitField0_ = (bitField0_ & ~0x00000020);
        preferNotHost_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList crc_ = emptyIntList();
      private void ensureCrcIsMutable() {
        if (!crc_.isModifiable()) {
          crc_ = makeMutableCopy(crc_);
        }
        bitField0_ |= 0x00000040;
      }
      /**
       * <code>repeated uint32 crc = 7;</code>
       * @return A list containing the crc.
       */
      public java.util.List<java.lang.Integer>
          getCrcList() {
        crc_.makeImmutable();
        return crc_;
      }
      /**
       * <code>repeated uint32 crc = 7;</code>
       * @return The count of crc.
       */
      public int getCrcCount() {
        return crc_.size();
      }
      /**
       * <code>repeated uint32 crc = 7;</code>
       * @param index The index of the element to return.
       * @return The crc at the given index.
       */
      public int getCrc(int index) {
        return crc_.getInt(index);
      }
      /**
       * <code>repeated uint32 crc = 7;</code>
       * @param index The index to set the value at.
       * @param value The crc to set.
       * @return This builder for chaining.
       */
      public Builder setCrc(
          int index, int value) {

        ensureCrcIsMutable();
        crc_.setInt(index, value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 crc = 7;</code>
       * @param value The crc to add.
       * @return This builder for chaining.
       */
      public Builder addCrc(int value) {

        ensureCrcIsMutable();
        crc_.addInt(value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 crc = 7;</code>
       * @param values The crc to add.
       * @return This builder for chaining.
       */
      public Builder addAllCrc(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCrcIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, crc_);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 crc = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCrc() {
        crc_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dota2.CDOTAClientHardwareSpecs)
    }

    // @@protoc_insertion_point(class_scope:dota2.CDOTAClientHardwareSpecs)
    private static final com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs();
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CDOTAClientHardwareSpecs>
        PARSER = new com.google.protobuf.AbstractParser<CDOTAClientHardwareSpecs>() {
      @java.lang.Override
      public CDOTAClientHardwareSpecs parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CDOTAClientHardwareSpecs> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTAClientHardwareSpecs> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTAClientHardwareSpecs getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CDOTASaveGameOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dota2.CDOTASaveGame)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 match_id = 5;</code>
     * @return Whether the matchId field is set.
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 5;</code>
     * @return The matchId.
     */
    long getMatchId();

    /**
     * <code>optional uint32 save_time = 2;</code>
     * @return Whether the saveTime field is set.
     */
    boolean hasSaveTime();
    /**
     * <code>optional uint32 save_time = 2;</code>
     * @return The saveTime.
     */
    int getSaveTime();

    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player> 
        getPlayersList();
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player getPlayers(int index);
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder getPlayersOrBuilder(
        int index);

    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance> 
        getSaveInstancesList();
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance getSaveInstances(int index);
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    int getSaveInstancesCount();
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder> 
        getSaveInstancesOrBuilderList();
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder getSaveInstancesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dota2.CDOTASaveGame}
   */
  public static final class CDOTASaveGame extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dota2.CDOTASaveGame)
      CDOTASaveGameOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CDOTASaveGame.class.getName());
    }
    // Use CDOTASaveGame.newBuilder() to construct.
    private CDOTASaveGame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CDOTASaveGame() {
      players_ = java.util.Collections.emptyList();
      saveInstances_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Builder.class);
    }

    public interface PlayerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dota2.CDOTASaveGame.Player)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .dota2.DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       * @return Whether the team field is set.
       */
      boolean hasTeam();
      /**
       * <code>optional .dota2.DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       * @return The team.
       */
      com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM getTeam();

      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <code>optional string hero = 3;</code>
       * @return Whether the hero field is set.
       */
      boolean hasHero();
      /**
       * <code>optional string hero = 3;</code>
       * @return The hero.
       */
      java.lang.String getHero();
      /**
       * <code>optional string hero = 3;</code>
       * @return The bytes for hero.
       */
      com.google.protobuf.ByteString
          getHeroBytes();
    }
    /**
     * Protobuf type {@code dota2.CDOTASaveGame.Player}
     */
    public static final class Player extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dota2.CDOTASaveGame.Player)
        PlayerOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          Player.class.getName());
      }
      // Use Player.newBuilder() to construct.
      private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Player() {
        team_ = 0;
        name_ = "";
        hero_ = "";
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_Player_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder.class);
      }

      private int bitField0_;
      public static final int TEAM_FIELD_NUMBER = 1;
      private int team_ = 0;
      /**
       * <code>optional .dota2.DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       * @return Whether the team field is set.
       */
      @java.lang.Override public boolean hasTeam() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .dota2.DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
       * @return The team.
       */
      @java.lang.Override public com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM getTeam() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM result = com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM.forNumber(team_);
        return result == null ? com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS : result;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int HERO_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object hero_ = "";
      /**
       * <code>optional string hero = 3;</code>
       * @return Whether the hero field is set.
       */
      @java.lang.Override
      public boolean hasHero() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string hero = 3;</code>
       * @return The hero.
       */
      @java.lang.Override
      public java.lang.String getHero() {
        java.lang.Object ref = hero_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hero_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string hero = 3;</code>
       * @return The bytes for hero.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHeroBytes() {
        java.lang.Object ref = hero_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hero_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeEnum(1, team_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 3, hero_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, team_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(3, hero_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player)) {
          return super.equals(obj);
        }
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player other = (com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player) obj;

        if (hasTeam() != other.hasTeam()) return false;
        if (hasTeam()) {
          if (team_ != other.team_) return false;
        }
        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (hasHero() != other.hasHero()) return false;
        if (hasHero()) {
          if (!getHero()
              .equals(other.getHero())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTeam()) {
          hash = (37 * hash) + TEAM_FIELD_NUMBER;
          hash = (53 * hash) + team_;
        }
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (hasHero()) {
          hash = (37 * hash) + HERO_FIELD_NUMBER;
          hash = (53 * hash) + getHero().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dota2.CDOTASaveGame.Player}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dota2.CDOTASaveGame.Player)
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_Player_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_Player_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder.class);
        }

        // Construct using com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          team_ = 0;
          name_ = "";
          hero_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_Player_descriptor;
        }

        @java.lang.Override
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player getDefaultInstanceForType() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.getDefaultInstance();
        }

        @java.lang.Override
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player build() {
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player buildPartial() {
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player result = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.team_ = team_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.hero_ = hero_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player) {
            return mergeFrom((com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player other) {
          if (other == com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.getDefaultInstance()) return this;
          if (other.hasTeam()) {
            setTeam(other.getTeam());
          }
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000002;
            onChanged();
          }
          if (other.hasHero()) {
            hero_ = other.hero_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int tmpRaw = input.readEnum();
                  com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM tmpValue =
                      com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(1, tmpRaw);
                  } else {
                    team_ = tmpRaw;
                    bitField0_ |= 0x00000001;
                  }
                  break;
                } // case 8
                case 18: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  hero_ = input.readBytes();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int team_ = 0;
        /**
         * <code>optional .dota2.DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
         * @return Whether the team field is set.
         */
        @java.lang.Override public boolean hasTeam() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional .dota2.DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
         * @return The team.
         */
        @java.lang.Override
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM getTeam() {
          com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM result = com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM.forNumber(team_);
          return result == null ? com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM.DOTA_GC_TEAM_GOOD_GUYS : result;
        }
        /**
         * <code>optional .dota2.DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
         * @param value The team to set.
         * @return This builder for chaining.
         */
        public Builder setTeam(com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_GC_TEAM value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          team_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .dota2.DOTA_GC_TEAM team = 1 [default = DOTA_GC_TEAM_GOOD_GUYS];</code>
         * @return This builder for chaining.
         */
        public Builder clearTeam() {
          bitField0_ = (bitField0_ & ~0x00000001);
          team_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional string name = 2;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }

        private java.lang.Object hero_ = "";
        /**
         * <code>optional string hero = 3;</code>
         * @return Whether the hero field is set.
         */
        public boolean hasHero() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional string hero = 3;</code>
         * @return The hero.
         */
        public java.lang.String getHero() {
          java.lang.Object ref = hero_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              hero_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string hero = 3;</code>
         * @return The bytes for hero.
         */
        public com.google.protobuf.ByteString
            getHeroBytes() {
          java.lang.Object ref = hero_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            hero_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string hero = 3;</code>
         * @param value The hero to set.
         * @return This builder for chaining.
         */
        public Builder setHero(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          hero_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional string hero = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearHero() {
          hero_ = getDefaultInstance().getHero();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>optional string hero = 3;</code>
         * @param value The bytes for hero to set.
         * @return This builder for chaining.
         */
        public Builder setHeroBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          hero_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:dota2.CDOTASaveGame.Player)
      }

      // @@protoc_insertion_point(class_scope:dota2.CDOTASaveGame.Player)
      private static final com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player();
      }

      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Player>
          PARSER = new com.google.protobuf.AbstractParser<Player>() {
        @java.lang.Override
        public Player parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Player> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Player> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SaveInstanceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dota2.CDOTASaveGame.SaveInstance)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 game_time = 2;</code>
       * @return Whether the gameTime field is set.
       */
      boolean hasGameTime();
      /**
       * <code>optional uint32 game_time = 2;</code>
       * @return The gameTime.
       */
      int getGameTime();

      /**
       * <code>optional uint32 team1_score = 3;</code>
       * @return Whether the team1Score field is set.
       */
      boolean hasTeam1Score();
      /**
       * <code>optional uint32 team1_score = 3;</code>
       * @return The team1Score.
       */
      int getTeam1Score();

      /**
       * <code>optional uint32 team2_score = 4;</code>
       * @return Whether the team2Score field is set.
       */
      boolean hasTeam2Score();
      /**
       * <code>optional uint32 team2_score = 4;</code>
       * @return The team2Score.
       */
      int getTeam2Score();

      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions> 
          getPlayerPositionsList();
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions getPlayerPositions(int index);
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      int getPlayerPositionsCount();
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> 
          getPlayerPositionsOrBuilderList();
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder getPlayerPositionsOrBuilder(
          int index);

      /**
       * <code>optional uint32 save_id = 6;</code>
       * @return Whether the saveId field is set.
       */
      boolean hasSaveId();
      /**
       * <code>optional uint32 save_id = 6;</code>
       * @return The saveId.
       */
      int getSaveId();

      /**
       * <code>optional uint32 save_time = 7;</code>
       * @return Whether the saveTime field is set.
       */
      boolean hasSaveTime();
      /**
       * <code>optional uint32 save_time = 7;</code>
       * @return The saveTime.
       */
      int getSaveTime();
    }
    /**
     * Protobuf type {@code dota2.CDOTASaveGame.SaveInstance}
     */
    public static final class SaveInstance extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:dota2.CDOTASaveGame.SaveInstance)
        SaveInstanceOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          SaveInstance.class.getName());
      }
      // Use SaveInstance.newBuilder() to construct.
      private SaveInstance(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private SaveInstance() {
        playerPositions_ = java.util.Collections.emptyList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder.class);
      }

      public interface PlayerPositionsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:dota2.CDOTASaveGame.SaveInstance.PlayerPositions)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional float x = 1;</code>
         * @return Whether the x field is set.
         */
        boolean hasX();
        /**
         * <code>optional float x = 1;</code>
         * @return The x.
         */
        float getX();

        /**
         * <code>optional float y = 2;</code>
         * @return Whether the y field is set.
         */
        boolean hasY();
        /**
         * <code>optional float y = 2;</code>
         * @return The y.
         */
        float getY();
      }
      /**
       * Protobuf type {@code dota2.CDOTASaveGame.SaveInstance.PlayerPositions}
       */
      public static final class PlayerPositions extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:dota2.CDOTASaveGame.SaveInstance.PlayerPositions)
          PlayerPositionsOrBuilder {
      private static final long serialVersionUID = 0L;
        static {
          com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
            com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
            /* major= */ 4,
            /* minor= */ 28,
            /* patch= */ 2,
            /* suffix= */ "",
            PlayerPositions.class.getName());
        }
        // Use PlayerPositions.newBuilder() to construct.
        private PlayerPositions(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
        }
        private PlayerPositions() {
        }

        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder.class);
        }

        private int bitField0_;
        public static final int X_FIELD_NUMBER = 1;
        private float x_ = 0F;
        /**
         * <code>optional float x = 1;</code>
         * @return Whether the x field is set.
         */
        @java.lang.Override
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional float x = 1;</code>
         * @return The x.
         */
        @java.lang.Override
        public float getX() {
          return x_;
        }

        public static final int Y_FIELD_NUMBER = 2;
        private float y_ = 0F;
        /**
         * <code>optional float y = 2;</code>
         * @return Whether the y field is set.
         */
        @java.lang.Override
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional float y = 2;</code>
         * @return The y.
         */
        @java.lang.Override
        public float getY() {
          return y_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeFloat(1, x_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeFloat(2, y_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, x_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, y_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions)) {
            return super.equals(obj);
          }
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions other = (com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions) obj;

          if (hasX() != other.hasX()) return false;
          if (hasX()) {
            if (java.lang.Float.floatToIntBits(getX())
                != java.lang.Float.floatToIntBits(
                    other.getX())) return false;
          }
          if (hasY() != other.hasY()) return false;
          if (hasY()) {
            if (java.lang.Float.floatToIntBits(getY())
                != java.lang.Float.floatToIntBits(
                    other.getY())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasX()) {
            hash = (37 * hash) + X_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getX());
          }
          if (hasY()) {
            hash = (37 * hash) + Y_FIELD_NUMBER;
            hash = (53 * hash) + java.lang.Float.floatToIntBits(
                getY());
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input);
        }

        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input);
        }
        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessage
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code dota2.CDOTASaveGame.SaveInstance.PlayerPositions}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:dota2.CDOTASaveGame.SaveInstance.PlayerPositions)
            com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder.class);
          }

          // Construct using com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            x_ = 0F;
            y_ = 0F;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor;
          }

          @java.lang.Override
          public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions getDefaultInstanceForType() {
            return com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.getDefaultInstance();
          }

          @java.lang.Override
          public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions build() {
            com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions buildPartial() {
            com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions result = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.x_ = x_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.y_ = y_;
              to_bitField0_ |= 0x00000002;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions) {
              return mergeFrom((com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions other) {
            if (other == com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.getDefaultInstance()) return this;
            if (other.hasX()) {
              setX(other.getX());
            }
            if (other.hasY()) {
              setY(other.getY());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 13: {
                    x_ = input.readFloat();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 13
                  case 21: {
                    y_ = input.readFloat();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 21
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private float x_ ;
          /**
           * <code>optional float x = 1;</code>
           * @return Whether the x field is set.
           */
          @java.lang.Override
          public boolean hasX() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <code>optional float x = 1;</code>
           * @return The x.
           */
          @java.lang.Override
          public float getX() {
            return x_;
          }
          /**
           * <code>optional float x = 1;</code>
           * @param value The x to set.
           * @return This builder for chaining.
           */
          public Builder setX(float value) {

            x_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <code>optional float x = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearX() {
            bitField0_ = (bitField0_ & ~0x00000001);
            x_ = 0F;
            onChanged();
            return this;
          }

          private float y_ ;
          /**
           * <code>optional float y = 2;</code>
           * @return Whether the y field is set.
           */
          @java.lang.Override
          public boolean hasY() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <code>optional float y = 2;</code>
           * @return The y.
           */
          @java.lang.Override
          public float getY() {
            return y_;
          }
          /**
           * <code>optional float y = 2;</code>
           * @param value The y to set.
           * @return This builder for chaining.
           */
          public Builder setY(float value) {

            y_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <code>optional float y = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearY() {
            bitField0_ = (bitField0_ & ~0x00000002);
            y_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:dota2.CDOTASaveGame.SaveInstance.PlayerPositions)
        }

        // @@protoc_insertion_point(class_scope:dota2.CDOTASaveGame.SaveInstance.PlayerPositions)
        private static final com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions();
        }

        public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<PlayerPositions>
            PARSER = new com.google.protobuf.AbstractParser<PlayerPositions>() {
          @java.lang.Override
          public PlayerPositions parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<PlayerPositions> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PlayerPositions> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int GAME_TIME_FIELD_NUMBER = 2;
      private int gameTime_ = 0;
      /**
       * <code>optional uint32 game_time = 2;</code>
       * @return Whether the gameTime field is set.
       */
      @java.lang.Override
      public boolean hasGameTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 game_time = 2;</code>
       * @return The gameTime.
       */
      @java.lang.Override
      public int getGameTime() {
        return gameTime_;
      }

      public static final int TEAM1_SCORE_FIELD_NUMBER = 3;
      private int team1Score_ = 0;
      /**
       * <code>optional uint32 team1_score = 3;</code>
       * @return Whether the team1Score field is set.
       */
      @java.lang.Override
      public boolean hasTeam1Score() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 team1_score = 3;</code>
       * @return The team1Score.
       */
      @java.lang.Override
      public int getTeam1Score() {
        return team1Score_;
      }

      public static final int TEAM2_SCORE_FIELD_NUMBER = 4;
      private int team2Score_ = 0;
      /**
       * <code>optional uint32 team2_score = 4;</code>
       * @return Whether the team2Score field is set.
       */
      @java.lang.Override
      public boolean hasTeam2Score() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 team2_score = 4;</code>
       * @return The team2Score.
       */
      @java.lang.Override
      public int getTeam2Score() {
        return team2Score_;
      }

      public static final int PLAYER_POSITIONS_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions> playerPositions_;
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      @java.lang.Override
      public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions> getPlayerPositionsList() {
        return playerPositions_;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      @java.lang.Override
      public java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> 
          getPlayerPositionsOrBuilderList() {
        return playerPositions_;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      @java.lang.Override
      public int getPlayerPositionsCount() {
        return playerPositions_.size();
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions getPlayerPositions(int index) {
        return playerPositions_.get(index);
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
       */
      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder getPlayerPositionsOrBuilder(
          int index) {
        return playerPositions_.get(index);
      }

      public static final int SAVE_ID_FIELD_NUMBER = 6;
      private int saveId_ = 0;
      /**
       * <code>optional uint32 save_id = 6;</code>
       * @return Whether the saveId field is set.
       */
      @java.lang.Override
      public boolean hasSaveId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 save_id = 6;</code>
       * @return The saveId.
       */
      @java.lang.Override
      public int getSaveId() {
        return saveId_;
      }

      public static final int SAVE_TIME_FIELD_NUMBER = 7;
      private int saveTime_ = 0;
      /**
       * <code>optional uint32 save_time = 7;</code>
       * @return Whether the saveTime field is set.
       */
      @java.lang.Override
      public boolean hasSaveTime() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 save_time = 7;</code>
       * @return The saveTime.
       */
      @java.lang.Override
      public int getSaveTime() {
        return saveTime_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(2, gameTime_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(3, team1Score_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(4, team2Score_);
        }
        for (int i = 0; i < playerPositions_.size(); i++) {
          output.writeMessage(5, playerPositions_.get(i));
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(6, saveId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(7, saveTime_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, gameTime_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, team1Score_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, team2Score_);
        }
        for (int i = 0; i < playerPositions_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, playerPositions_.get(i));
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, saveId_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, saveTime_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance)) {
          return super.equals(obj);
        }
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance other = (com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance) obj;

        if (hasGameTime() != other.hasGameTime()) return false;
        if (hasGameTime()) {
          if (getGameTime()
              != other.getGameTime()) return false;
        }
        if (hasTeam1Score() != other.hasTeam1Score()) return false;
        if (hasTeam1Score()) {
          if (getTeam1Score()
              != other.getTeam1Score()) return false;
        }
        if (hasTeam2Score() != other.hasTeam2Score()) return false;
        if (hasTeam2Score()) {
          if (getTeam2Score()
              != other.getTeam2Score()) return false;
        }
        if (!getPlayerPositionsList()
            .equals(other.getPlayerPositionsList())) return false;
        if (hasSaveId() != other.hasSaveId()) return false;
        if (hasSaveId()) {
          if (getSaveId()
              != other.getSaveId()) return false;
        }
        if (hasSaveTime() != other.hasSaveTime()) return false;
        if (hasSaveTime()) {
          if (getSaveTime()
              != other.getSaveTime()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasGameTime()) {
          hash = (37 * hash) + GAME_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getGameTime();
        }
        if (hasTeam1Score()) {
          hash = (37 * hash) + TEAM1_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getTeam1Score();
        }
        if (hasTeam2Score()) {
          hash = (37 * hash) + TEAM2_SCORE_FIELD_NUMBER;
          hash = (53 * hash) + getTeam2Score();
        }
        if (getPlayerPositionsCount() > 0) {
          hash = (37 * hash) + PLAYER_POSITIONS_FIELD_NUMBER;
          hash = (53 * hash) + getPlayerPositionsList().hashCode();
        }
        if (hasSaveId()) {
          hash = (37 * hash) + SAVE_ID_FIELD_NUMBER;
          hash = (53 * hash) + getSaveId();
        }
        if (hasSaveTime()) {
          hash = (37 * hash) + SAVE_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getSaveTime();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dota2.CDOTASaveGame.SaveInstance}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dota2.CDOTASaveGame.SaveInstance)
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder.class);
        }

        // Construct using com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          gameTime_ = 0;
          team1Score_ = 0;
          team2Score_ = 0;
          if (playerPositionsBuilder_ == null) {
            playerPositions_ = java.util.Collections.emptyList();
          } else {
            playerPositions_ = null;
            playerPositionsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          saveId_ = 0;
          saveTime_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_SaveInstance_descriptor;
        }

        @java.lang.Override
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance getDefaultInstanceForType() {
          return com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.getDefaultInstance();
        }

        @java.lang.Override
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance build() {
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance buildPartial() {
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance result = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance result) {
          if (playerPositionsBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0)) {
              playerPositions_ = java.util.Collections.unmodifiableList(playerPositions_);
              bitField0_ = (bitField0_ & ~0x00000008);
            }
            result.playerPositions_ = playerPositions_;
          } else {
            result.playerPositions_ = playerPositionsBuilder_.build();
          }
        }

        private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.gameTime_ = gameTime_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.team1Score_ = team1Score_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.team2Score_ = team2Score_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.saveId_ = saveId_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.saveTime_ = saveTime_;
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance) {
            return mergeFrom((com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance other) {
          if (other == com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.getDefaultInstance()) return this;
          if (other.hasGameTime()) {
            setGameTime(other.getGameTime());
          }
          if (other.hasTeam1Score()) {
            setTeam1Score(other.getTeam1Score());
          }
          if (other.hasTeam2Score()) {
            setTeam2Score(other.getTeam2Score());
          }
          if (playerPositionsBuilder_ == null) {
            if (!other.playerPositions_.isEmpty()) {
              if (playerPositions_.isEmpty()) {
                playerPositions_ = other.playerPositions_;
                bitField0_ = (bitField0_ & ~0x00000008);
              } else {
                ensurePlayerPositionsIsMutable();
                playerPositions_.addAll(other.playerPositions_);
              }
              onChanged();
            }
          } else {
            if (!other.playerPositions_.isEmpty()) {
              if (playerPositionsBuilder_.isEmpty()) {
                playerPositionsBuilder_.dispose();
                playerPositionsBuilder_ = null;
                playerPositions_ = other.playerPositions_;
                bitField0_ = (bitField0_ & ~0x00000008);
                playerPositionsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPlayerPositionsFieldBuilder() : null;
              } else {
                playerPositionsBuilder_.addAllMessages(other.playerPositions_);
              }
            }
          }
          if (other.hasSaveId()) {
            setSaveId(other.getSaveId());
          }
          if (other.hasSaveTime()) {
            setSaveTime(other.getSaveTime());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 16: {
                  gameTime_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 16
                case 24: {
                  team1Score_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 24
                case 32: {
                  team2Score_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 32
                case 42: {
                  com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions m =
                      input.readMessage(
                          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.parser(),
                          extensionRegistry);
                  if (playerPositionsBuilder_ == null) {
                    ensurePlayerPositionsIsMutable();
                    playerPositions_.add(m);
                  } else {
                    playerPositionsBuilder_.addMessage(m);
                  }
                  break;
                } // case 42
                case 48: {
                  saveId_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 48
                case 56: {
                  saveTime_ = input.readUInt32();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 56
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int gameTime_ ;
        /**
         * <code>optional uint32 game_time = 2;</code>
         * @return Whether the gameTime field is set.
         */
        @java.lang.Override
        public boolean hasGameTime() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 game_time = 2;</code>
         * @return The gameTime.
         */
        @java.lang.Override
        public int getGameTime() {
          return gameTime_;
        }
        /**
         * <code>optional uint32 game_time = 2;</code>
         * @param value The gameTime to set.
         * @return This builder for chaining.
         */
        public Builder setGameTime(int value) {

          gameTime_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 game_time = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearGameTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          gameTime_ = 0;
          onChanged();
          return this;
        }

        private int team1Score_ ;
        /**
         * <code>optional uint32 team1_score = 3;</code>
         * @return Whether the team1Score field is set.
         */
        @java.lang.Override
        public boolean hasTeam1Score() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint32 team1_score = 3;</code>
         * @return The team1Score.
         */
        @java.lang.Override
        public int getTeam1Score() {
          return team1Score_;
        }
        /**
         * <code>optional uint32 team1_score = 3;</code>
         * @param value The team1Score to set.
         * @return This builder for chaining.
         */
        public Builder setTeam1Score(int value) {

          team1Score_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team1_score = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeam1Score() {
          bitField0_ = (bitField0_ & ~0x00000002);
          team1Score_ = 0;
          onChanged();
          return this;
        }

        private int team2Score_ ;
        /**
         * <code>optional uint32 team2_score = 4;</code>
         * @return Whether the team2Score field is set.
         */
        @java.lang.Override
        public boolean hasTeam2Score() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint32 team2_score = 4;</code>
         * @return The team2Score.
         */
        @java.lang.Override
        public int getTeam2Score() {
          return team2Score_;
        }
        /**
         * <code>optional uint32 team2_score = 4;</code>
         * @param value The team2Score to set.
         * @return This builder for chaining.
         */
        public Builder setTeam2Score(int value) {

          team2Score_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 team2_score = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTeam2Score() {
          bitField0_ = (bitField0_ & ~0x00000004);
          team2Score_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions> playerPositions_ =
          java.util.Collections.emptyList();
        private void ensurePlayerPositionsIsMutable() {
          if (!((bitField0_ & 0x00000008) != 0)) {
            playerPositions_ = new java.util.ArrayList<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions>(playerPositions_);
            bitField0_ |= 0x00000008;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> playerPositionsBuilder_;

        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions> getPlayerPositionsList() {
          if (playerPositionsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(playerPositions_);
          } else {
            return playerPositionsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public int getPlayerPositionsCount() {
          if (playerPositionsBuilder_ == null) {
            return playerPositions_.size();
          } else {
            return playerPositionsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions getPlayerPositions(int index) {
          if (playerPositionsBuilder_ == null) {
            return playerPositions_.get(index);
          } else {
            return playerPositionsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder setPlayerPositions(
            int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions value) {
          if (playerPositionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayerPositionsIsMutable();
            playerPositions_.set(index, value);
            onChanged();
          } else {
            playerPositionsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder setPlayerPositions(
            int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder builderForValue) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            playerPositions_.set(index, builderForValue.build());
            onChanged();
          } else {
            playerPositionsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addPlayerPositions(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions value) {
          if (playerPositionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayerPositionsIsMutable();
            playerPositions_.add(value);
            onChanged();
          } else {
            playerPositionsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addPlayerPositions(
            int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions value) {
          if (playerPositionsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePlayerPositionsIsMutable();
            playerPositions_.add(index, value);
            onChanged();
          } else {
            playerPositionsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addPlayerPositions(
            com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder builderForValue) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            playerPositions_.add(builderForValue.build());
            onChanged();
          } else {
            playerPositionsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addPlayerPositions(
            int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder builderForValue) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            playerPositions_.add(index, builderForValue.build());
            onChanged();
          } else {
            playerPositionsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder addAllPlayerPositions(
            java.lang.Iterable<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions> values) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, playerPositions_);
            onChanged();
          } else {
            playerPositionsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder clearPlayerPositions() {
          if (playerPositionsBuilder_ == null) {
            playerPositions_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000008);
            onChanged();
          } else {
            playerPositionsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public Builder removePlayerPositions(int index) {
          if (playerPositionsBuilder_ == null) {
            ensurePlayerPositionsIsMutable();
            playerPositions_.remove(index);
            onChanged();
          } else {
            playerPositionsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder getPlayerPositionsBuilder(
            int index) {
          return getPlayerPositionsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder getPlayerPositionsOrBuilder(
            int index) {
          if (playerPositionsBuilder_ == null) {
            return playerPositions_.get(index);  } else {
            return playerPositionsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> 
             getPlayerPositionsOrBuilderList() {
          if (playerPositionsBuilder_ != null) {
            return playerPositionsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(playerPositions_);
          }
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder addPlayerPositionsBuilder() {
          return getPlayerPositionsFieldBuilder().addBuilder(
              com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.getDefaultInstance());
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder addPlayerPositionsBuilder(
            int index) {
          return getPlayerPositionsFieldBuilder().addBuilder(
              index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.getDefaultInstance());
        }
        /**
         * <code>repeated .dota2.CDOTASaveGame.SaveInstance.PlayerPositions player_positions = 5;</code>
         */
        public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder> 
             getPlayerPositionsBuilderList() {
          return getPlayerPositionsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder> 
            getPlayerPositionsFieldBuilder() {
          if (playerPositionsBuilder_ == null) {
            playerPositionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositions.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.PlayerPositionsOrBuilder>(
                    playerPositions_,
                    ((bitField0_ & 0x00000008) != 0),
                    getParentForChildren(),
                    isClean());
            playerPositions_ = null;
          }
          return playerPositionsBuilder_;
        }

        private int saveId_ ;
        /**
         * <code>optional uint32 save_id = 6;</code>
         * @return Whether the saveId field is set.
         */
        @java.lang.Override
        public boolean hasSaveId() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint32 save_id = 6;</code>
         * @return The saveId.
         */
        @java.lang.Override
        public int getSaveId() {
          return saveId_;
        }
        /**
         * <code>optional uint32 save_id = 6;</code>
         * @param value The saveId to set.
         * @return This builder for chaining.
         */
        public Builder setSaveId(int value) {

          saveId_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 save_id = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearSaveId() {
          bitField0_ = (bitField0_ & ~0x00000010);
          saveId_ = 0;
          onChanged();
          return this;
        }

        private int saveTime_ ;
        /**
         * <code>optional uint32 save_time = 7;</code>
         * @return Whether the saveTime field is set.
         */
        @java.lang.Override
        public boolean hasSaveTime() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional uint32 save_time = 7;</code>
         * @return The saveTime.
         */
        @java.lang.Override
        public int getSaveTime() {
          return saveTime_;
        }
        /**
         * <code>optional uint32 save_time = 7;</code>
         * @param value The saveTime to set.
         * @return This builder for chaining.
         */
        public Builder setSaveTime(int value) {

          saveTime_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 save_time = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearSaveTime() {
          bitField0_ = (bitField0_ & ~0x00000020);
          saveTime_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:dota2.CDOTASaveGame.SaveInstance)
      }

      // @@protoc_insertion_point(class_scope:dota2.CDOTASaveGame.SaveInstance)
      private static final com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance();
      }

      public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SaveInstance>
          PARSER = new com.google.protobuf.AbstractParser<SaveInstance>() {
        @java.lang.Override
        public SaveInstance parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<SaveInstance> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SaveInstance> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int MATCH_ID_FIELD_NUMBER = 5;
    private long matchId_ = 0L;
    /**
     * <code>optional uint64 match_id = 5;</code>
     * @return Whether the matchId field is set.
     */
    @java.lang.Override
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 match_id = 5;</code>
     * @return The matchId.
     */
    @java.lang.Override
    public long getMatchId() {
      return matchId_;
    }

    public static final int SAVE_TIME_FIELD_NUMBER = 2;
    private int saveTime_ = 0;
    /**
     * <code>optional uint32 save_time = 2;</code>
     * @return Whether the saveTime field is set.
     */
    @java.lang.Override
    public boolean hasSaveTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 save_time = 2;</code>
     * @return The saveTime.
     */
    @java.lang.Override
    public int getSaveTime() {
      return saveTime_;
    }

    public static final int PLAYERS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player> players_;
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    @java.lang.Override
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
     */
    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    public static final int SAVE_INSTANCES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance> saveInstances_;
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    @java.lang.Override
    public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance> getSaveInstancesList() {
      return saveInstances_;
    }
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder> 
        getSaveInstancesOrBuilderList() {
      return saveInstances_;
    }
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    @java.lang.Override
    public int getSaveInstancesCount() {
      return saveInstances_.size();
    }
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance getSaveInstances(int index) {
      return saveInstances_.get(index);
    }
    /**
     * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
     */
    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder getSaveInstancesOrBuilder(
        int index) {
      return saveInstances_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, saveTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(3, players_.get(i));
      }
      for (int i = 0; i < saveInstances_.size(); i++) {
        output.writeMessage(4, saveInstances_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(5, matchId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, saveTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, players_.get(i));
      }
      for (int i = 0; i < saveInstances_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, saveInstances_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, matchId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame other = (com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame) obj;

      if (hasMatchId() != other.hasMatchId()) return false;
      if (hasMatchId()) {
        if (getMatchId()
            != other.getMatchId()) return false;
      }
      if (hasSaveTime() != other.hasSaveTime()) return false;
      if (hasSaveTime()) {
        if (getSaveTime()
            != other.getSaveTime()) return false;
      }
      if (!getPlayersList()
          .equals(other.getPlayersList())) return false;
      if (!getSaveInstancesList()
          .equals(other.getSaveInstancesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMatchId()) {
        hash = (37 * hash) + MATCH_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMatchId());
      }
      if (hasSaveTime()) {
        hash = (37 * hash) + SAVE_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getSaveTime();
      }
      if (getPlayersCount() > 0) {
        hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayersList().hashCode();
      }
      if (getSaveInstancesCount() > 0) {
        hash = (37 * hash) + SAVE_INSTANCES_FIELD_NUMBER;
        hash = (53 * hash) + getSaveInstancesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dota2.CDOTASaveGame}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dota2.CDOTASaveGame)
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Builder.class);
      }

      // Construct using com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        matchId_ = 0L;
        saveTime_ = 0;
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
        } else {
          players_ = null;
          playersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (saveInstancesBuilder_ == null) {
          saveInstances_ = java.util.Collections.emptyList();
        } else {
          saveInstances_ = null;
          saveInstancesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CDOTASaveGame_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame getDefaultInstanceForType() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame build() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame buildPartial() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame result = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame result) {
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (saveInstancesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            saveInstances_ = java.util.Collections.unmodifiableList(saveInstances_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.saveInstances_ = saveInstances_;
        } else {
          result.saveInstances_ = saveInstancesBuilder_.build();
        }
      }

      private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.matchId_ = matchId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.saveTime_ = saveTime_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame) {
          return mergeFrom((com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame other) {
        if (other == com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.getDefaultInstance()) return this;
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasSaveTime()) {
          setSaveTime(other.getSaveTime());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000004);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (saveInstancesBuilder_ == null) {
          if (!other.saveInstances_.isEmpty()) {
            if (saveInstances_.isEmpty()) {
              saveInstances_ = other.saveInstances_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSaveInstancesIsMutable();
              saveInstances_.addAll(other.saveInstances_);
            }
            onChanged();
          }
        } else {
          if (!other.saveInstances_.isEmpty()) {
            if (saveInstancesBuilder_.isEmpty()) {
              saveInstancesBuilder_.dispose();
              saveInstancesBuilder_ = null;
              saveInstances_ = other.saveInstances_;
              bitField0_ = (bitField0_ & ~0x00000008);
              saveInstancesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSaveInstancesFieldBuilder() : null;
            } else {
              saveInstancesBuilder_.addAllMessages(other.saveInstances_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 16: {
                saveTime_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player m =
                    input.readMessage(
                        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.parser(),
                        extensionRegistry);
                if (playersBuilder_ == null) {
                  ensurePlayersIsMutable();
                  players_.add(m);
                } else {
                  playersBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance m =
                    input.readMessage(
                        com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.parser(),
                        extensionRegistry);
                if (saveInstancesBuilder_ == null) {
                  ensureSaveInstancesIsMutable();
                  saveInstances_.add(m);
                } else {
                  saveInstancesBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 40: {
                matchId_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 5;</code>
       * @return Whether the matchId field is set.
       */
      @java.lang.Override
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 match_id = 5;</code>
       * @return The matchId.
       */
      @java.lang.Override
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 5;</code>
       * @param value The matchId to set.
       * @return This builder for chaining.
       */
      public Builder setMatchId(long value) {

        matchId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private int saveTime_ ;
      /**
       * <code>optional uint32 save_time = 2;</code>
       * @return Whether the saveTime field is set.
       */
      @java.lang.Override
      public boolean hasSaveTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 save_time = 2;</code>
       * @return The saveTime.
       */
      @java.lang.Override
      public int getSaveTime() {
        return saveTime_;
      }
      /**
       * <code>optional uint32 save_time = 2;</code>
       * @param value The saveTime to set.
       * @return This builder for chaining.
       */
      public Builder setSaveTime(int value) {

        saveTime_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 save_time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSaveTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        saveTime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          players_ = new java.util.ArrayList<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player>(players_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder setPlayers(
          int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder setPlayers(
          int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addPlayers(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addPlayers(
          int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addPlayers(
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addPlayers(
          int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.Player players = 3;</code>
       */
      public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.Player.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      private java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance> saveInstances_ =
        java.util.Collections.emptyList();
      private void ensureSaveInstancesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          saveInstances_ = new java.util.ArrayList<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance>(saveInstances_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder> saveInstancesBuilder_;

      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance> getSaveInstancesList() {
        if (saveInstancesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(saveInstances_);
        } else {
          return saveInstancesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public int getSaveInstancesCount() {
        if (saveInstancesBuilder_ == null) {
          return saveInstances_.size();
        } else {
          return saveInstancesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance getSaveInstances(int index) {
        if (saveInstancesBuilder_ == null) {
          return saveInstances_.get(index);
        } else {
          return saveInstancesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder setSaveInstances(
          int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance value) {
        if (saveInstancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveInstancesIsMutable();
          saveInstances_.set(index, value);
          onChanged();
        } else {
          saveInstancesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder setSaveInstances(
          int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder builderForValue) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          saveInstances_.set(index, builderForValue.build());
          onChanged();
        } else {
          saveInstancesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addSaveInstances(com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance value) {
        if (saveInstancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveInstancesIsMutable();
          saveInstances_.add(value);
          onChanged();
        } else {
          saveInstancesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addSaveInstances(
          int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance value) {
        if (saveInstancesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSaveInstancesIsMutable();
          saveInstances_.add(index, value);
          onChanged();
        } else {
          saveInstancesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addSaveInstances(
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder builderForValue) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          saveInstances_.add(builderForValue.build());
          onChanged();
        } else {
          saveInstancesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addSaveInstances(
          int index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder builderForValue) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          saveInstances_.add(index, builderForValue.build());
          onChanged();
        } else {
          saveInstancesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder addAllSaveInstances(
          java.lang.Iterable<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance> values) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, saveInstances_);
          onChanged();
        } else {
          saveInstancesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder clearSaveInstances() {
        if (saveInstancesBuilder_ == null) {
          saveInstances_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          saveInstancesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public Builder removeSaveInstances(int index) {
        if (saveInstancesBuilder_ == null) {
          ensureSaveInstancesIsMutable();
          saveInstances_.remove(index);
          onChanged();
        } else {
          saveInstancesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder getSaveInstancesBuilder(
          int index) {
        return getSaveInstancesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder getSaveInstancesOrBuilder(
          int index) {
        if (saveInstancesBuilder_ == null) {
          return saveInstances_.get(index);  } else {
          return saveInstancesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public java.util.List<? extends com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder> 
           getSaveInstancesOrBuilderList() {
        if (saveInstancesBuilder_ != null) {
          return saveInstancesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(saveInstances_);
        }
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder addSaveInstancesBuilder() {
        return getSaveInstancesFieldBuilder().addBuilder(
            com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.getDefaultInstance());
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder addSaveInstancesBuilder(
          int index) {
        return getSaveInstancesFieldBuilder().addBuilder(
            index, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.getDefaultInstance());
      }
      /**
       * <code>repeated .dota2.CDOTASaveGame.SaveInstance save_instances = 4;</code>
       */
      public java.util.List<com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder> 
           getSaveInstancesBuilderList() {
        return getSaveInstancesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder> 
          getSaveInstancesFieldBuilder() {
        if (saveInstancesBuilder_ == null) {
          saveInstancesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstance.Builder, com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame.SaveInstanceOrBuilder>(
                  saveInstances_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          saveInstances_ = null;
        }
        return saveInstancesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:dota2.CDOTASaveGame)
    }

    // @@protoc_insertion_point(class_scope:dota2.CDOTASaveGame)
    private static final com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame();
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CDOTASaveGame>
        PARSER = new com.google.protobuf.AbstractParser<CDOTASaveGame>() {
      @java.lang.Override
      public CDOTASaveGame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CDOTASaveGame> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CDOTASaveGame> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSharedEnums.CDOTASaveGame getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgDOTACombatLogEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dota2.CMsgDOTACombatLogEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dota2.DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_INVALID];</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>optional .dota2.DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_INVALID];</code>
     * @return The type.
     */
    com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES getType();

    /**
     * <code>optional uint32 target_name = 2;</code>
     * @return Whether the targetName field is set.
     */
    boolean hasTargetName();
    /**
     * <code>optional uint32 target_name = 2;</code>
     * @return The targetName.
     */
    int getTargetName();

    /**
     * <code>optional uint32 target_source_name = 3;</code>
     * @return Whether the targetSourceName field is set.
     */
    boolean hasTargetSourceName();
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     * @return The targetSourceName.
     */
    int getTargetSourceName();

    /**
     * <code>optional uint32 attacker_name = 4;</code>
     * @return Whether the attackerName field is set.
     */
    boolean hasAttackerName();
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     * @return The attackerName.
     */
    int getAttackerName();

    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     * @return Whether the damageSourceName field is set.
     */
    boolean hasDamageSourceName();
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     * @return The damageSourceName.
     */
    int getDamageSourceName();

    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     * @return Whether the inflictorName field is set.
     */
    boolean hasInflictorName();
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     * @return The inflictorName.
     */
    int getInflictorName();

    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     * @return Whether the isAttackerIllusion field is set.
     */
    boolean hasIsAttackerIllusion();
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     * @return The isAttackerIllusion.
     */
    boolean getIsAttackerIllusion();

    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     * @return Whether the isAttackerHero field is set.
     */
    boolean hasIsAttackerHero();
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     * @return The isAttackerHero.
     */
    boolean getIsAttackerHero();

    /**
     * <code>optional bool is_target_illusion = 9;</code>
     * @return Whether the isTargetIllusion field is set.
     */
    boolean hasIsTargetIllusion();
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     * @return The isTargetIllusion.
     */
    boolean getIsTargetIllusion();

    /**
     * <code>optional bool is_target_hero = 10;</code>
     * @return Whether the isTargetHero field is set.
     */
    boolean hasIsTargetHero();
    /**
     * <code>optional bool is_target_hero = 10;</code>
     * @return The isTargetHero.
     */
    boolean getIsTargetHero();

    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     * @return Whether the isVisibleRadiant field is set.
     */
    boolean hasIsVisibleRadiant();
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     * @return The isVisibleRadiant.
     */
    boolean getIsVisibleRadiant();

    /**
     * <code>optional bool is_visible_dire = 12;</code>
     * @return Whether the isVisibleDire field is set.
     */
    boolean hasIsVisibleDire();
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     * @return The isVisibleDire.
     */
    boolean getIsVisibleDire();

    /**
     * <code>optional uint32 value = 13;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>optional uint32 value = 13;</code>
     * @return The value.
     */
    int getValue();

    /**
     * <code>optional int32 health = 14;</code>
     * @return Whether the health field is set.
     */
    boolean hasHealth();
    /**
     * <code>optional int32 health = 14;</code>
     * @return The health.
     */
    int getHealth();

    /**
     * <code>optional float timestamp = 15;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <code>optional float timestamp = 15;</code>
     * @return The timestamp.
     */
    float getTimestamp();

    /**
     * <code>optional float stun_duration = 16;</code>
     * @return Whether the stunDuration field is set.
     */
    boolean hasStunDuration();
    /**
     * <code>optional float stun_duration = 16;</code>
     * @return The stunDuration.
     */
    float getStunDuration();

    /**
     * <code>optional float slow_duration = 17;</code>
     * @return Whether the slowDuration field is set.
     */
    boolean hasSlowDuration();
    /**
     * <code>optional float slow_duration = 17;</code>
     * @return The slowDuration.
     */
    float getSlowDuration();

    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     * @return Whether the isAbilityToggleOn field is set.
     */
    boolean hasIsAbilityToggleOn();
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     * @return The isAbilityToggleOn.
     */
    boolean getIsAbilityToggleOn();

    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     * @return Whether the isAbilityToggleOff field is set.
     */
    boolean hasIsAbilityToggleOff();
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     * @return The isAbilityToggleOff.
     */
    boolean getIsAbilityToggleOff();

    /**
     * <code>optional uint32 ability_level = 20;</code>
     * @return Whether the abilityLevel field is set.
     */
    boolean hasAbilityLevel();
    /**
     * <code>optional uint32 ability_level = 20;</code>
     * @return The abilityLevel.
     */
    int getAbilityLevel();

    /**
     * <code>optional float location_x = 21;</code>
     * @return Whether the locationX field is set.
     */
    boolean hasLocationX();
    /**
     * <code>optional float location_x = 21;</code>
     * @return The locationX.
     */
    float getLocationX();

    /**
     * <code>optional float location_y = 22;</code>
     * @return Whether the locationY field is set.
     */
    boolean hasLocationY();
    /**
     * <code>optional float location_y = 22;</code>
     * @return The locationY.
     */
    float getLocationY();

    /**
     * <code>optional uint32 gold_reason = 23;</code>
     * @return Whether the goldReason field is set.
     */
    boolean hasGoldReason();
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     * @return The goldReason.
     */
    int getGoldReason();

    /**
     * <code>optional float timestamp_raw = 24;</code>
     * @return Whether the timestampRaw field is set.
     */
    boolean hasTimestampRaw();
    /**
     * <code>optional float timestamp_raw = 24;</code>
     * @return The timestampRaw.
     */
    float getTimestampRaw();

    /**
     * <code>optional float modifier_duration = 25;</code>
     * @return Whether the modifierDuration field is set.
     */
    boolean hasModifierDuration();
    /**
     * <code>optional float modifier_duration = 25;</code>
     * @return The modifierDuration.
     */
    float getModifierDuration();

    /**
     * <code>optional uint32 xp_reason = 26;</code>
     * @return Whether the xpReason field is set.
     */
    boolean hasXpReason();
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     * @return The xpReason.
     */
    int getXpReason();

    /**
     * <code>optional uint32 last_hits = 27;</code>
     * @return Whether the lastHits field is set.
     */
    boolean hasLastHits();
    /**
     * <code>optional uint32 last_hits = 27;</code>
     * @return The lastHits.
     */
    int getLastHits();

    /**
     * <code>optional uint32 attacker_team = 28;</code>
     * @return Whether the attackerTeam field is set.
     */
    boolean hasAttackerTeam();
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     * @return The attackerTeam.
     */
    int getAttackerTeam();

    /**
     * <code>optional uint32 target_team = 29;</code>
     * @return Whether the targetTeam field is set.
     */
    boolean hasTargetTeam();
    /**
     * <code>optional uint32 target_team = 29;</code>
     * @return The targetTeam.
     */
    int getTargetTeam();

    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     * @return Whether the obsWardsPlaced field is set.
     */
    boolean hasObsWardsPlaced();
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     * @return The obsWardsPlaced.
     */
    int getObsWardsPlaced();

    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     * @return Whether the assistPlayer0 field is set.
     */
    boolean hasAssistPlayer0();
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     * @return The assistPlayer0.
     */
    int getAssistPlayer0();

    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     * @return Whether the assistPlayer1 field is set.
     */
    boolean hasAssistPlayer1();
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     * @return The assistPlayer1.
     */
    int getAssistPlayer1();

    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     * @return Whether the assistPlayer2 field is set.
     */
    boolean hasAssistPlayer2();
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     * @return The assistPlayer2.
     */
    int getAssistPlayer2();

    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     * @return Whether the assistPlayer3 field is set.
     */
    boolean hasAssistPlayer3();
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     * @return The assistPlayer3.
     */
    int getAssistPlayer3();

    /**
     * <code>optional uint32 stack_count = 35;</code>
     * @return Whether the stackCount field is set.
     */
    boolean hasStackCount();
    /**
     * <code>optional uint32 stack_count = 35;</code>
     * @return The stackCount.
     */
    int getStackCount();

    /**
     * <code>optional bool hidden_modifier = 36;</code>
     * @return Whether the hiddenModifier field is set.
     */
    boolean hasHiddenModifier();
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     * @return The hiddenModifier.
     */
    boolean getHiddenModifier();

    /**
     * <code>optional bool is_target_building = 37;</code>
     * @return Whether the isTargetBuilding field is set.
     */
    boolean hasIsTargetBuilding();
    /**
     * <code>optional bool is_target_building = 37;</code>
     * @return The isTargetBuilding.
     */
    boolean getIsTargetBuilding();

    /**
     * <code>optional uint32 neutral_camp_type = 38;</code>
     * @return Whether the neutralCampType field is set.
     */
    boolean hasNeutralCampType();
    /**
     * <code>optional uint32 neutral_camp_type = 38;</code>
     * @return The neutralCampType.
     */
    int getNeutralCampType();

    /**
     * <code>optional uint32 rune_type = 39;</code>
     * @return Whether the runeType field is set.
     */
    boolean hasRuneType();
    /**
     * <code>optional uint32 rune_type = 39;</code>
     * @return The runeType.
     */
    int getRuneType();

    /**
     * <code>repeated int32 assist_players = 40;</code>
     * @return A list containing the assistPlayers.
     */
    java.util.List<java.lang.Integer> getAssistPlayersList();
    /**
     * <code>repeated int32 assist_players = 40;</code>
     * @return The count of assistPlayers.
     */
    int getAssistPlayersCount();
    /**
     * <code>repeated int32 assist_players = 40;</code>
     * @param index The index of the element to return.
     * @return The assistPlayers at the given index.
     */
    int getAssistPlayers(int index);

    /**
     * <code>optional bool is_heal_save = 41;</code>
     * @return Whether the isHealSave field is set.
     */
    boolean hasIsHealSave();
    /**
     * <code>optional bool is_heal_save = 41;</code>
     * @return The isHealSave.
     */
    boolean getIsHealSave();

    /**
     * <code>optional bool is_ultimate_ability = 42;</code>
     * @return Whether the isUltimateAbility field is set.
     */
    boolean hasIsUltimateAbility();
    /**
     * <code>optional bool is_ultimate_ability = 42;</code>
     * @return The isUltimateAbility.
     */
    boolean getIsUltimateAbility();

    /**
     * <code>optional uint32 attacker_hero_level = 43;</code>
     * @return Whether the attackerHeroLevel field is set.
     */
    boolean hasAttackerHeroLevel();
    /**
     * <code>optional uint32 attacker_hero_level = 43;</code>
     * @return The attackerHeroLevel.
     */
    int getAttackerHeroLevel();

    /**
     * <code>optional uint32 target_hero_level = 44;</code>
     * @return Whether the targetHeroLevel field is set.
     */
    boolean hasTargetHeroLevel();
    /**
     * <code>optional uint32 target_hero_level = 44;</code>
     * @return The targetHeroLevel.
     */
    int getTargetHeroLevel();

    /**
     * <code>optional uint32 xpm = 45;</code>
     * @return Whether the xpm field is set.
     */
    boolean hasXpm();
    /**
     * <code>optional uint32 xpm = 45;</code>
     * @return The xpm.
     */
    int getXpm();

    /**
     * <code>optional uint32 gpm = 46;</code>
     * @return Whether the gpm field is set.
     */
    boolean hasGpm();
    /**
     * <code>optional uint32 gpm = 46;</code>
     * @return The gpm.
     */
    int getGpm();

    /**
     * <code>optional uint32 event_location = 47;</code>
     * @return Whether the eventLocation field is set.
     */
    boolean hasEventLocation();
    /**
     * <code>optional uint32 event_location = 47;</code>
     * @return The eventLocation.
     */
    int getEventLocation();

    /**
     * <code>optional bool target_is_self = 48;</code>
     * @return Whether the targetIsSelf field is set.
     */
    boolean hasTargetIsSelf();
    /**
     * <code>optional bool target_is_self = 48;</code>
     * @return The targetIsSelf.
     */
    boolean getTargetIsSelf();

    /**
     * <code>optional uint32 damage_type = 49;</code>
     * @return Whether the damageType field is set.
     */
    boolean hasDamageType();
    /**
     * <code>optional uint32 damage_type = 49;</code>
     * @return The damageType.
     */
    int getDamageType();

    /**
     * <code>optional bool invisibility_modifier = 50;</code>
     * @return Whether the invisibilityModifier field is set.
     */
    boolean hasInvisibilityModifier();
    /**
     * <code>optional bool invisibility_modifier = 50;</code>
     * @return The invisibilityModifier.
     */
    boolean getInvisibilityModifier();

    /**
     * <code>optional uint32 damage_category = 51;</code>
     * @return Whether the damageCategory field is set.
     */
    boolean hasDamageCategory();
    /**
     * <code>optional uint32 damage_category = 51;</code>
     * @return The damageCategory.
     */
    int getDamageCategory();

    /**
     * <code>optional uint32 networth = 52;</code>
     * @return Whether the networth field is set.
     */
    boolean hasNetworth();
    /**
     * <code>optional uint32 networth = 52;</code>
     * @return The networth.
     */
    int getNetworth();

    /**
     * <code>optional uint32 building_type = 53;</code>
     * @return Whether the buildingType field is set.
     */
    boolean hasBuildingType();
    /**
     * <code>optional uint32 building_type = 53;</code>
     * @return The buildingType.
     */
    int getBuildingType();

    /**
     * <code>optional float modifier_elapsed_duration = 54;</code>
     * @return Whether the modifierElapsedDuration field is set.
     */
    boolean hasModifierElapsedDuration();
    /**
     * <code>optional float modifier_elapsed_duration = 54;</code>
     * @return The modifierElapsedDuration.
     */
    float getModifierElapsedDuration();

    /**
     * <code>optional bool silence_modifier = 55;</code>
     * @return Whether the silenceModifier field is set.
     */
    boolean hasSilenceModifier();
    /**
     * <code>optional bool silence_modifier = 55;</code>
     * @return The silenceModifier.
     */
    boolean getSilenceModifier();

    /**
     * <code>optional bool heal_from_lifesteal = 56;</code>
     * @return Whether the healFromLifesteal field is set.
     */
    boolean hasHealFromLifesteal();
    /**
     * <code>optional bool heal_from_lifesteal = 56;</code>
     * @return The healFromLifesteal.
     */
    boolean getHealFromLifesteal();

    /**
     * <code>optional bool modifier_purged = 57;</code>
     * @return Whether the modifierPurged field is set.
     */
    boolean hasModifierPurged();
    /**
     * <code>optional bool modifier_purged = 57;</code>
     * @return The modifierPurged.
     */
    boolean getModifierPurged();

    /**
     * <code>optional bool spell_evaded = 58;</code>
     * @return Whether the spellEvaded field is set.
     */
    boolean hasSpellEvaded();
    /**
     * <code>optional bool spell_evaded = 58;</code>
     * @return The spellEvaded.
     */
    boolean getSpellEvaded();

    /**
     * <code>optional bool motion_controller_modifier = 59;</code>
     * @return Whether the motionControllerModifier field is set.
     */
    boolean hasMotionControllerModifier();
    /**
     * <code>optional bool motion_controller_modifier = 59;</code>
     * @return The motionControllerModifier.
     */
    boolean getMotionControllerModifier();

    /**
     * <code>optional bool long_range_kill = 60;</code>
     * @return Whether the longRangeKill field is set.
     */
    boolean hasLongRangeKill();
    /**
     * <code>optional bool long_range_kill = 60;</code>
     * @return The longRangeKill.
     */
    boolean getLongRangeKill();

    /**
     * <code>optional uint32 modifier_purge_ability = 61;</code>
     * @return Whether the modifierPurgeAbility field is set.
     */
    boolean hasModifierPurgeAbility();
    /**
     * <code>optional uint32 modifier_purge_ability = 61;</code>
     * @return The modifierPurgeAbility.
     */
    int getModifierPurgeAbility();

    /**
     * <code>optional uint32 modifier_purge_npc = 62;</code>
     * @return Whether the modifierPurgeNpc field is set.
     */
    boolean hasModifierPurgeNpc();
    /**
     * <code>optional uint32 modifier_purge_npc = 62;</code>
     * @return The modifierPurgeNpc.
     */
    int getModifierPurgeNpc();

    /**
     * <code>optional bool root_modifier = 63;</code>
     * @return Whether the rootModifier field is set.
     */
    boolean hasRootModifier();
    /**
     * <code>optional bool root_modifier = 63;</code>
     * @return The rootModifier.
     */
    boolean getRootModifier();

    /**
     * <code>optional uint32 total_unit_death_count = 64;</code>
     * @return Whether the totalUnitDeathCount field is set.
     */
    boolean hasTotalUnitDeathCount();
    /**
     * <code>optional uint32 total_unit_death_count = 64;</code>
     * @return The totalUnitDeathCount.
     */
    int getTotalUnitDeathCount();

    /**
     * <code>optional bool aura_modifier = 65;</code>
     * @return Whether the auraModifier field is set.
     */
    boolean hasAuraModifier();
    /**
     * <code>optional bool aura_modifier = 65;</code>
     * @return The auraModifier.
     */
    boolean getAuraModifier();

    /**
     * <code>optional bool armor_debuff_modifier = 66;</code>
     * @return Whether the armorDebuffModifier field is set.
     */
    boolean hasArmorDebuffModifier();
    /**
     * <code>optional bool armor_debuff_modifier = 66;</code>
     * @return The armorDebuffModifier.
     */
    boolean getArmorDebuffModifier();

    /**
     * <code>optional bool no_physical_damage_modifier = 67;</code>
     * @return Whether the noPhysicalDamageModifier field is set.
     */
    boolean hasNoPhysicalDamageModifier();
    /**
     * <code>optional bool no_physical_damage_modifier = 67;</code>
     * @return The noPhysicalDamageModifier.
     */
    boolean getNoPhysicalDamageModifier();

    /**
     * <code>optional uint32 modifier_ability = 68;</code>
     * @return Whether the modifierAbility field is set.
     */
    boolean hasModifierAbility();
    /**
     * <code>optional uint32 modifier_ability = 68;</code>
     * @return The modifierAbility.
     */
    int getModifierAbility();

    /**
     * <code>optional bool modifier_hidden = 69;</code>
     * @return Whether the modifierHidden field is set.
     */
    boolean hasModifierHidden();
    /**
     * <code>optional bool modifier_hidden = 69;</code>
     * @return The modifierHidden.
     */
    boolean getModifierHidden();

    /**
     * <code>optional bool inflictor_is_stolen_ability = 70;</code>
     * @return Whether the inflictorIsStolenAbility field is set.
     */
    boolean hasInflictorIsStolenAbility();
    /**
     * <code>optional bool inflictor_is_stolen_ability = 70;</code>
     * @return The inflictorIsStolenAbility.
     */
    boolean getInflictorIsStolenAbility();

    /**
     * <code>optional uint32 kill_eater_event = 71;</code>
     * @return Whether the killEaterEvent field is set.
     */
    boolean hasKillEaterEvent();
    /**
     * <code>optional uint32 kill_eater_event = 71;</code>
     * @return The killEaterEvent.
     */
    int getKillEaterEvent();

    /**
     * <code>optional uint32 unit_status_label = 72;</code>
     * @return Whether the unitStatusLabel field is set.
     */
    boolean hasUnitStatusLabel();
    /**
     * <code>optional uint32 unit_status_label = 72;</code>
     * @return The unitStatusLabel.
     */
    int getUnitStatusLabel();

    /**
     * <code>optional bool spell_generated_attack = 73;</code>
     * @return Whether the spellGeneratedAttack field is set.
     */
    boolean hasSpellGeneratedAttack();
    /**
     * <code>optional bool spell_generated_attack = 73;</code>
     * @return The spellGeneratedAttack.
     */
    boolean getSpellGeneratedAttack();

    /**
     * <code>optional bool at_night_time = 74;</code>
     * @return Whether the atNightTime field is set.
     */
    boolean hasAtNightTime();
    /**
     * <code>optional bool at_night_time = 74;</code>
     * @return The atNightTime.
     */
    boolean getAtNightTime();

    /**
     * <code>optional bool attacker_has_scepter = 75;</code>
     * @return Whether the attackerHasScepter field is set.
     */
    boolean hasAttackerHasScepter();
    /**
     * <code>optional bool attacker_has_scepter = 75;</code>
     * @return The attackerHasScepter.
     */
    boolean getAttackerHasScepter();

    /**
     * <code>optional uint32 neutral_camp_team = 76;</code>
     * @return Whether the neutralCampTeam field is set.
     */
    boolean hasNeutralCampTeam();
    /**
     * <code>optional uint32 neutral_camp_team = 76;</code>
     * @return The neutralCampTeam.
     */
    int getNeutralCampTeam();

    /**
     * <code>optional float regenerated_health = 77;</code>
     * @return Whether the regeneratedHealth field is set.
     */
    boolean hasRegeneratedHealth();
    /**
     * <code>optional float regenerated_health = 77;</code>
     * @return The regeneratedHealth.
     */
    float getRegeneratedHealth();

    /**
     * <code>optional bool will_reincarnate = 78;</code>
     * @return Whether the willReincarnate field is set.
     */
    boolean hasWillReincarnate();
    /**
     * <code>optional bool will_reincarnate = 78;</code>
     * @return The willReincarnate.
     */
    boolean getWillReincarnate();

    /**
     * <code>optional bool uses_charges = 79;</code>
     * @return Whether the usesCharges field is set.
     */
    boolean hasUsesCharges();
    /**
     * <code>optional bool uses_charges = 79;</code>
     * @return The usesCharges.
     */
    boolean getUsesCharges();
  }
  /**
   * Protobuf type {@code dota2.CMsgDOTACombatLogEntry}
   */
  public static final class CMsgDOTACombatLogEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dota2.CMsgDOTACombatLogEntry)
      CMsgDOTACombatLogEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CMsgDOTACombatLogEntry.class.getName());
    }
    // Use CMsgDOTACombatLogEntry.newBuilder() to construct.
    private CMsgDOTACombatLogEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgDOTACombatLogEntry() {
      type_ = -1;
      assistPlayers_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgDOTACombatLogEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgDOTACombatLogEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry.Builder.class);
    }

    private int bitField0_;
    private int bitField1_;
    private int bitField2_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = -1;
    /**
     * <code>optional .dota2.DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_INVALID];</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .dota2.DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_INVALID];</code>
     * @return The type.
     */
    @java.lang.Override public com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES getType() {
      com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES result = com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES.forNumber(type_);
      return result == null ? com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_INVALID : result;
    }

    public static final int TARGET_NAME_FIELD_NUMBER = 2;
    private int targetName_ = 0;
    /**
     * <code>optional uint32 target_name = 2;</code>
     * @return Whether the targetName field is set.
     */
    @java.lang.Override
    public boolean hasTargetName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 target_name = 2;</code>
     * @return The targetName.
     */
    @java.lang.Override
    public int getTargetName() {
      return targetName_;
    }

    public static final int TARGET_SOURCE_NAME_FIELD_NUMBER = 3;
    private int targetSourceName_ = 0;
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     * @return Whether the targetSourceName field is set.
     */
    @java.lang.Override
    public boolean hasTargetSourceName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 target_source_name = 3;</code>
     * @return The targetSourceName.
     */
    @java.lang.Override
    public int getTargetSourceName() {
      return targetSourceName_;
    }

    public static final int ATTACKER_NAME_FIELD_NUMBER = 4;
    private int attackerName_ = 0;
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     * @return Whether the attackerName field is set.
     */
    @java.lang.Override
    public boolean hasAttackerName() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 attacker_name = 4;</code>
     * @return The attackerName.
     */
    @java.lang.Override
    public int getAttackerName() {
      return attackerName_;
    }

    public static final int DAMAGE_SOURCE_NAME_FIELD_NUMBER = 5;
    private int damageSourceName_ = 0;
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     * @return Whether the damageSourceName field is set.
     */
    @java.lang.Override
    public boolean hasDamageSourceName() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 damage_source_name = 5;</code>
     * @return The damageSourceName.
     */
    @java.lang.Override
    public int getDamageSourceName() {
      return damageSourceName_;
    }

    public static final int INFLICTOR_NAME_FIELD_NUMBER = 6;
    private int inflictorName_ = 0;
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     * @return Whether the inflictorName field is set.
     */
    @java.lang.Override
    public boolean hasInflictorName() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 inflictor_name = 6;</code>
     * @return The inflictorName.
     */
    @java.lang.Override
    public int getInflictorName() {
      return inflictorName_;
    }

    public static final int IS_ATTACKER_ILLUSION_FIELD_NUMBER = 7;
    private boolean isAttackerIllusion_ = false;
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     * @return Whether the isAttackerIllusion field is set.
     */
    @java.lang.Override
    public boolean hasIsAttackerIllusion() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional bool is_attacker_illusion = 7;</code>
     * @return The isAttackerIllusion.
     */
    @java.lang.Override
    public boolean getIsAttackerIllusion() {
      return isAttackerIllusion_;
    }

    public static final int IS_ATTACKER_HERO_FIELD_NUMBER = 8;
    private boolean isAttackerHero_ = false;
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     * @return Whether the isAttackerHero field is set.
     */
    @java.lang.Override
    public boolean hasIsAttackerHero() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional bool is_attacker_hero = 8;</code>
     * @return The isAttackerHero.
     */
    @java.lang.Override
    public boolean getIsAttackerHero() {
      return isAttackerHero_;
    }

    public static final int IS_TARGET_ILLUSION_FIELD_NUMBER = 9;
    private boolean isTargetIllusion_ = false;
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     * @return Whether the isTargetIllusion field is set.
     */
    @java.lang.Override
    public boolean hasIsTargetIllusion() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool is_target_illusion = 9;</code>
     * @return The isTargetIllusion.
     */
    @java.lang.Override
    public boolean getIsTargetIllusion() {
      return isTargetIllusion_;
    }

    public static final int IS_TARGET_HERO_FIELD_NUMBER = 10;
    private boolean isTargetHero_ = false;
    /**
     * <code>optional bool is_target_hero = 10;</code>
     * @return Whether the isTargetHero field is set.
     */
    @java.lang.Override
    public boolean hasIsTargetHero() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional bool is_target_hero = 10;</code>
     * @return The isTargetHero.
     */
    @java.lang.Override
    public boolean getIsTargetHero() {
      return isTargetHero_;
    }

    public static final int IS_VISIBLE_RADIANT_FIELD_NUMBER = 11;
    private boolean isVisibleRadiant_ = false;
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     * @return Whether the isVisibleRadiant field is set.
     */
    @java.lang.Override
    public boolean hasIsVisibleRadiant() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional bool is_visible_radiant = 11;</code>
     * @return The isVisibleRadiant.
     */
    @java.lang.Override
    public boolean getIsVisibleRadiant() {
      return isVisibleRadiant_;
    }

    public static final int IS_VISIBLE_DIRE_FIELD_NUMBER = 12;
    private boolean isVisibleDire_ = false;
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     * @return Whether the isVisibleDire field is set.
     */
    @java.lang.Override
    public boolean hasIsVisibleDire() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional bool is_visible_dire = 12;</code>
     * @return The isVisibleDire.
     */
    @java.lang.Override
    public boolean getIsVisibleDire() {
      return isVisibleDire_;
    }

    public static final int VALUE_FIELD_NUMBER = 13;
    private int value_ = 0;
    /**
     * <code>optional uint32 value = 13;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional uint32 value = 13;</code>
     * @return The value.
     */
    @java.lang.Override
    public int getValue() {
      return value_;
    }

    public static final int HEALTH_FIELD_NUMBER = 14;
    private int health_ = 0;
    /**
     * <code>optional int32 health = 14;</code>
     * @return Whether the health field is set.
     */
    @java.lang.Override
    public boolean hasHealth() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional int32 health = 14;</code>
     * @return The health.
     */
    @java.lang.Override
    public int getHealth() {
      return health_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 15;
    private float timestamp_ = 0F;
    /**
     * <code>optional float timestamp = 15;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional float timestamp = 15;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public float getTimestamp() {
      return timestamp_;
    }

    public static final int STUN_DURATION_FIELD_NUMBER = 16;
    private float stunDuration_ = 0F;
    /**
     * <code>optional float stun_duration = 16;</code>
     * @return Whether the stunDuration field is set.
     */
    @java.lang.Override
    public boolean hasStunDuration() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional float stun_duration = 16;</code>
     * @return The stunDuration.
     */
    @java.lang.Override
    public float getStunDuration() {
      return stunDuration_;
    }

    public static final int SLOW_DURATION_FIELD_NUMBER = 17;
    private float slowDuration_ = 0F;
    /**
     * <code>optional float slow_duration = 17;</code>
     * @return Whether the slowDuration field is set.
     */
    @java.lang.Override
    public boolean hasSlowDuration() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional float slow_duration = 17;</code>
     * @return The slowDuration.
     */
    @java.lang.Override
    public float getSlowDuration() {
      return slowDuration_;
    }

    public static final int IS_ABILITY_TOGGLE_ON_FIELD_NUMBER = 18;
    private boolean isAbilityToggleOn_ = false;
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     * @return Whether the isAbilityToggleOn field is set.
     */
    @java.lang.Override
    public boolean hasIsAbilityToggleOn() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional bool is_ability_toggle_on = 18;</code>
     * @return The isAbilityToggleOn.
     */
    @java.lang.Override
    public boolean getIsAbilityToggleOn() {
      return isAbilityToggleOn_;
    }

    public static final int IS_ABILITY_TOGGLE_OFF_FIELD_NUMBER = 19;
    private boolean isAbilityToggleOff_ = false;
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     * @return Whether the isAbilityToggleOff field is set.
     */
    @java.lang.Override
    public boolean hasIsAbilityToggleOff() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>optional bool is_ability_toggle_off = 19;</code>
     * @return The isAbilityToggleOff.
     */
    @java.lang.Override
    public boolean getIsAbilityToggleOff() {
      return isAbilityToggleOff_;
    }

    public static final int ABILITY_LEVEL_FIELD_NUMBER = 20;
    private int abilityLevel_ = 0;
    /**
     * <code>optional uint32 ability_level = 20;</code>
     * @return Whether the abilityLevel field is set.
     */
    @java.lang.Override
    public boolean hasAbilityLevel() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>optional uint32 ability_level = 20;</code>
     * @return The abilityLevel.
     */
    @java.lang.Override
    public int getAbilityLevel() {
      return abilityLevel_;
    }

    public static final int LOCATION_X_FIELD_NUMBER = 21;
    private float locationX_ = 0F;
    /**
     * <code>optional float location_x = 21;</code>
     * @return Whether the locationX field is set.
     */
    @java.lang.Override
    public boolean hasLocationX() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional float location_x = 21;</code>
     * @return The locationX.
     */
    @java.lang.Override
    public float getLocationX() {
      return locationX_;
    }

    public static final int LOCATION_Y_FIELD_NUMBER = 22;
    private float locationY_ = 0F;
    /**
     * <code>optional float location_y = 22;</code>
     * @return Whether the locationY field is set.
     */
    @java.lang.Override
    public boolean hasLocationY() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <code>optional float location_y = 22;</code>
     * @return The locationY.
     */
    @java.lang.Override
    public float getLocationY() {
      return locationY_;
    }

    public static final int GOLD_REASON_FIELD_NUMBER = 23;
    private int goldReason_ = 0;
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     * @return Whether the goldReason field is set.
     */
    @java.lang.Override
    public boolean hasGoldReason() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <code>optional uint32 gold_reason = 23;</code>
     * @return The goldReason.
     */
    @java.lang.Override
    public int getGoldReason() {
      return goldReason_;
    }

    public static final int TIMESTAMP_RAW_FIELD_NUMBER = 24;
    private float timestampRaw_ = 0F;
    /**
     * <code>optional float timestamp_raw = 24;</code>
     * @return Whether the timestampRaw field is set.
     */
    @java.lang.Override
    public boolean hasTimestampRaw() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <code>optional float timestamp_raw = 24;</code>
     * @return The timestampRaw.
     */
    @java.lang.Override
    public float getTimestampRaw() {
      return timestampRaw_;
    }

    public static final int MODIFIER_DURATION_FIELD_NUMBER = 25;
    private float modifierDuration_ = 0F;
    /**
     * <code>optional float modifier_duration = 25;</code>
     * @return Whether the modifierDuration field is set.
     */
    @java.lang.Override
    public boolean hasModifierDuration() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <code>optional float modifier_duration = 25;</code>
     * @return The modifierDuration.
     */
    @java.lang.Override
    public float getModifierDuration() {
      return modifierDuration_;
    }

    public static final int XP_REASON_FIELD_NUMBER = 26;
    private int xpReason_ = 0;
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     * @return Whether the xpReason field is set.
     */
    @java.lang.Override
    public boolean hasXpReason() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <code>optional uint32 xp_reason = 26;</code>
     * @return The xpReason.
     */
    @java.lang.Override
    public int getXpReason() {
      return xpReason_;
    }

    public static final int LAST_HITS_FIELD_NUMBER = 27;
    private int lastHits_ = 0;
    /**
     * <code>optional uint32 last_hits = 27;</code>
     * @return Whether the lastHits field is set.
     */
    @java.lang.Override
    public boolean hasLastHits() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <code>optional uint32 last_hits = 27;</code>
     * @return The lastHits.
     */
    @java.lang.Override
    public int getLastHits() {
      return lastHits_;
    }

    public static final int ATTACKER_TEAM_FIELD_NUMBER = 28;
    private int attackerTeam_ = 0;
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     * @return Whether the attackerTeam field is set.
     */
    @java.lang.Override
    public boolean hasAttackerTeam() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <code>optional uint32 attacker_team = 28;</code>
     * @return The attackerTeam.
     */
    @java.lang.Override
    public int getAttackerTeam() {
      return attackerTeam_;
    }

    public static final int TARGET_TEAM_FIELD_NUMBER = 29;
    private int targetTeam_ = 0;
    /**
     * <code>optional uint32 target_team = 29;</code>
     * @return Whether the targetTeam field is set.
     */
    @java.lang.Override
    public boolean hasTargetTeam() {
      return ((bitField0_ & 0x10000000) != 0);
    }
    /**
     * <code>optional uint32 target_team = 29;</code>
     * @return The targetTeam.
     */
    @java.lang.Override
    public int getTargetTeam() {
      return targetTeam_;
    }

    public static final int OBS_WARDS_PLACED_FIELD_NUMBER = 30;
    private int obsWardsPlaced_ = 0;
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     * @return Whether the obsWardsPlaced field is set.
     */
    @java.lang.Override
    public boolean hasObsWardsPlaced() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <code>optional uint32 obs_wards_placed = 30;</code>
     * @return The obsWardsPlaced.
     */
    @java.lang.Override
    public int getObsWardsPlaced() {
      return obsWardsPlaced_;
    }

    public static final int ASSIST_PLAYER0_FIELD_NUMBER = 31;
    private int assistPlayer0_ = 0;
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     * @return Whether the assistPlayer0 field is set.
     */
    @java.lang.Override
    public boolean hasAssistPlayer0() {
      return ((bitField0_ & 0x40000000) != 0);
    }
    /**
     * <code>optional uint32 assist_player0 = 31;</code>
     * @return The assistPlayer0.
     */
    @java.lang.Override
    public int getAssistPlayer0() {
      return assistPlayer0_;
    }

    public static final int ASSIST_PLAYER1_FIELD_NUMBER = 32;
    private int assistPlayer1_ = 0;
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     * @return Whether the assistPlayer1 field is set.
     */
    @java.lang.Override
    public boolean hasAssistPlayer1() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <code>optional uint32 assist_player1 = 32;</code>
     * @return The assistPlayer1.
     */
    @java.lang.Override
    public int getAssistPlayer1() {
      return assistPlayer1_;
    }

    public static final int ASSIST_PLAYER2_FIELD_NUMBER = 33;
    private int assistPlayer2_ = 0;
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     * @return Whether the assistPlayer2 field is set.
     */
    @java.lang.Override
    public boolean hasAssistPlayer2() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 assist_player2 = 33;</code>
     * @return The assistPlayer2.
     */
    @java.lang.Override
    public int getAssistPlayer2() {
      return assistPlayer2_;
    }

    public static final int ASSIST_PLAYER3_FIELD_NUMBER = 34;
    private int assistPlayer3_ = 0;
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     * @return Whether the assistPlayer3 field is set.
     */
    @java.lang.Override
    public boolean hasAssistPlayer3() {
      return ((bitField1_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 assist_player3 = 34;</code>
     * @return The assistPlayer3.
     */
    @java.lang.Override
    public int getAssistPlayer3() {
      return assistPlayer3_;
    }

    public static final int STACK_COUNT_FIELD_NUMBER = 35;
    private int stackCount_ = 0;
    /**
     * <code>optional uint32 stack_count = 35;</code>
     * @return Whether the stackCount field is set.
     */
    @java.lang.Override
    public boolean hasStackCount() {
      return ((bitField1_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 stack_count = 35;</code>
     * @return The stackCount.
     */
    @java.lang.Override
    public int getStackCount() {
      return stackCount_;
    }

    public static final int HIDDEN_MODIFIER_FIELD_NUMBER = 36;
    private boolean hiddenModifier_ = false;
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     * @return Whether the hiddenModifier field is set.
     */
    @java.lang.Override
    public boolean hasHiddenModifier() {
      return ((bitField1_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool hidden_modifier = 36;</code>
     * @return The hiddenModifier.
     */
    @java.lang.Override
    public boolean getHiddenModifier() {
      return hiddenModifier_;
    }

    public static final int IS_TARGET_BUILDING_FIELD_NUMBER = 37;
    private boolean isTargetBuilding_ = false;
    /**
     * <code>optional bool is_target_building = 37;</code>
     * @return Whether the isTargetBuilding field is set.
     */
    @java.lang.Override
    public boolean hasIsTargetBuilding() {
      return ((bitField1_ & 0x00000010) != 0);
    }
    /**
     * <code>optional bool is_target_building = 37;</code>
     * @return The isTargetBuilding.
     */
    @java.lang.Override
    public boolean getIsTargetBuilding() {
      return isTargetBuilding_;
    }

    public static final int NEUTRAL_CAMP_TYPE_FIELD_NUMBER = 38;
    private int neutralCampType_ = 0;
    /**
     * <code>optional uint32 neutral_camp_type = 38;</code>
     * @return Whether the neutralCampType field is set.
     */
    @java.lang.Override
    public boolean hasNeutralCampType() {
      return ((bitField1_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 neutral_camp_type = 38;</code>
     * @return The neutralCampType.
     */
    @java.lang.Override
    public int getNeutralCampType() {
      return neutralCampType_;
    }

    public static final int RUNE_TYPE_FIELD_NUMBER = 39;
    private int runeType_ = 0;
    /**
     * <code>optional uint32 rune_type = 39;</code>
     * @return Whether the runeType field is set.
     */
    @java.lang.Override
    public boolean hasRuneType() {
      return ((bitField1_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint32 rune_type = 39;</code>
     * @return The runeType.
     */
    @java.lang.Override
    public int getRuneType() {
      return runeType_;
    }

    public static final int ASSIST_PLAYERS_FIELD_NUMBER = 40;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList assistPlayers_ =
        emptyIntList();
    /**
     * <code>repeated int32 assist_players = 40;</code>
     * @return A list containing the assistPlayers.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAssistPlayersList() {
      return assistPlayers_;
    }
    /**
     * <code>repeated int32 assist_players = 40;</code>
     * @return The count of assistPlayers.
     */
    public int getAssistPlayersCount() {
      return assistPlayers_.size();
    }
    /**
     * <code>repeated int32 assist_players = 40;</code>
     * @param index The index of the element to return.
     * @return The assistPlayers at the given index.
     */
    public int getAssistPlayers(int index) {
      return assistPlayers_.getInt(index);
    }

    public static final int IS_HEAL_SAVE_FIELD_NUMBER = 41;
    private boolean isHealSave_ = false;
    /**
     * <code>optional bool is_heal_save = 41;</code>
     * @return Whether the isHealSave field is set.
     */
    @java.lang.Override
    public boolean hasIsHealSave() {
      return ((bitField1_ & 0x00000080) != 0);
    }
    /**
     * <code>optional bool is_heal_save = 41;</code>
     * @return The isHealSave.
     */
    @java.lang.Override
    public boolean getIsHealSave() {
      return isHealSave_;
    }

    public static final int IS_ULTIMATE_ABILITY_FIELD_NUMBER = 42;
    private boolean isUltimateAbility_ = false;
    /**
     * <code>optional bool is_ultimate_ability = 42;</code>
     * @return Whether the isUltimateAbility field is set.
     */
    @java.lang.Override
    public boolean hasIsUltimateAbility() {
      return ((bitField1_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool is_ultimate_ability = 42;</code>
     * @return The isUltimateAbility.
     */
    @java.lang.Override
    public boolean getIsUltimateAbility() {
      return isUltimateAbility_;
    }

    public static final int ATTACKER_HERO_LEVEL_FIELD_NUMBER = 43;
    private int attackerHeroLevel_ = 0;
    /**
     * <code>optional uint32 attacker_hero_level = 43;</code>
     * @return Whether the attackerHeroLevel field is set.
     */
    @java.lang.Override
    public boolean hasAttackerHeroLevel() {
      return ((bitField1_ & 0x00000200) != 0);
    }
    /**
     * <code>optional uint32 attacker_hero_level = 43;</code>
     * @return The attackerHeroLevel.
     */
    @java.lang.Override
    public int getAttackerHeroLevel() {
      return attackerHeroLevel_;
    }

    public static final int TARGET_HERO_LEVEL_FIELD_NUMBER = 44;
    private int targetHeroLevel_ = 0;
    /**
     * <code>optional uint32 target_hero_level = 44;</code>
     * @return Whether the targetHeroLevel field is set.
     */
    @java.lang.Override
    public boolean hasTargetHeroLevel() {
      return ((bitField1_ & 0x00000400) != 0);
    }
    /**
     * <code>optional uint32 target_hero_level = 44;</code>
     * @return The targetHeroLevel.
     */
    @java.lang.Override
    public int getTargetHeroLevel() {
      return targetHeroLevel_;
    }

    public static final int XPM_FIELD_NUMBER = 45;
    private int xpm_ = 0;
    /**
     * <code>optional uint32 xpm = 45;</code>
     * @return Whether the xpm field is set.
     */
    @java.lang.Override
    public boolean hasXpm() {
      return ((bitField1_ & 0x00000800) != 0);
    }
    /**
     * <code>optional uint32 xpm = 45;</code>
     * @return The xpm.
     */
    @java.lang.Override
    public int getXpm() {
      return xpm_;
    }

    public static final int GPM_FIELD_NUMBER = 46;
    private int gpm_ = 0;
    /**
     * <code>optional uint32 gpm = 46;</code>
     * @return Whether the gpm field is set.
     */
    @java.lang.Override
    public boolean hasGpm() {
      return ((bitField1_ & 0x00001000) != 0);
    }
    /**
     * <code>optional uint32 gpm = 46;</code>
     * @return The gpm.
     */
    @java.lang.Override
    public int getGpm() {
      return gpm_;
    }

    public static final int EVENT_LOCATION_FIELD_NUMBER = 47;
    private int eventLocation_ = 0;
    /**
     * <code>optional uint32 event_location = 47;</code>
     * @return Whether the eventLocation field is set.
     */
    @java.lang.Override
    public boolean hasEventLocation() {
      return ((bitField1_ & 0x00002000) != 0);
    }
    /**
     * <code>optional uint32 event_location = 47;</code>
     * @return The eventLocation.
     */
    @java.lang.Override
    public int getEventLocation() {
      return eventLocation_;
    }

    public static final int TARGET_IS_SELF_FIELD_NUMBER = 48;
    private boolean targetIsSelf_ = false;
    /**
     * <code>optional bool target_is_self = 48;</code>
     * @return Whether the targetIsSelf field is set.
     */
    @java.lang.Override
    public boolean hasTargetIsSelf() {
      return ((bitField1_ & 0x00004000) != 0);
    }
    /**
     * <code>optional bool target_is_self = 48;</code>
     * @return The targetIsSelf.
     */
    @java.lang.Override
    public boolean getTargetIsSelf() {
      return targetIsSelf_;
    }

    public static final int DAMAGE_TYPE_FIELD_NUMBER = 49;
    private int damageType_ = 0;
    /**
     * <code>optional uint32 damage_type = 49;</code>
     * @return Whether the damageType field is set.
     */
    @java.lang.Override
    public boolean hasDamageType() {
      return ((bitField1_ & 0x00008000) != 0);
    }
    /**
     * <code>optional uint32 damage_type = 49;</code>
     * @return The damageType.
     */
    @java.lang.Override
    public int getDamageType() {
      return damageType_;
    }

    public static final int INVISIBILITY_MODIFIER_FIELD_NUMBER = 50;
    private boolean invisibilityModifier_ = false;
    /**
     * <code>optional bool invisibility_modifier = 50;</code>
     * @return Whether the invisibilityModifier field is set.
     */
    @java.lang.Override
    public boolean hasInvisibilityModifier() {
      return ((bitField1_ & 0x00010000) != 0);
    }
    /**
     * <code>optional bool invisibility_modifier = 50;</code>
     * @return The invisibilityModifier.
     */
    @java.lang.Override
    public boolean getInvisibilityModifier() {
      return invisibilityModifier_;
    }

    public static final int DAMAGE_CATEGORY_FIELD_NUMBER = 51;
    private int damageCategory_ = 0;
    /**
     * <code>optional uint32 damage_category = 51;</code>
     * @return Whether the damageCategory field is set.
     */
    @java.lang.Override
    public boolean hasDamageCategory() {
      return ((bitField1_ & 0x00020000) != 0);
    }
    /**
     * <code>optional uint32 damage_category = 51;</code>
     * @return The damageCategory.
     */
    @java.lang.Override
    public int getDamageCategory() {
      return damageCategory_;
    }

    public static final int NETWORTH_FIELD_NUMBER = 52;
    private int networth_ = 0;
    /**
     * <code>optional uint32 networth = 52;</code>
     * @return Whether the networth field is set.
     */
    @java.lang.Override
    public boolean hasNetworth() {
      return ((bitField1_ & 0x00040000) != 0);
    }
    /**
     * <code>optional uint32 networth = 52;</code>
     * @return The networth.
     */
    @java.lang.Override
    public int getNetworth() {
      return networth_;
    }

    public static final int BUILDING_TYPE_FIELD_NUMBER = 53;
    private int buildingType_ = 0;
    /**
     * <code>optional uint32 building_type = 53;</code>
     * @return Whether the buildingType field is set.
     */
    @java.lang.Override
    public boolean hasBuildingType() {
      return ((bitField1_ & 0x00080000) != 0);
    }
    /**
     * <code>optional uint32 building_type = 53;</code>
     * @return The buildingType.
     */
    @java.lang.Override
    public int getBuildingType() {
      return buildingType_;
    }

    public static final int MODIFIER_ELAPSED_DURATION_FIELD_NUMBER = 54;
    private float modifierElapsedDuration_ = 0F;
    /**
     * <code>optional float modifier_elapsed_duration = 54;</code>
     * @return Whether the modifierElapsedDuration field is set.
     */
    @java.lang.Override
    public boolean hasModifierElapsedDuration() {
      return ((bitField1_ & 0x00100000) != 0);
    }
    /**
     * <code>optional float modifier_elapsed_duration = 54;</code>
     * @return The modifierElapsedDuration.
     */
    @java.lang.Override
    public float getModifierElapsedDuration() {
      return modifierElapsedDuration_;
    }

    public static final int SILENCE_MODIFIER_FIELD_NUMBER = 55;
    private boolean silenceModifier_ = false;
    /**
     * <code>optional bool silence_modifier = 55;</code>
     * @return Whether the silenceModifier field is set.
     */
    @java.lang.Override
    public boolean hasSilenceModifier() {
      return ((bitField1_ & 0x00200000) != 0);
    }
    /**
     * <code>optional bool silence_modifier = 55;</code>
     * @return The silenceModifier.
     */
    @java.lang.Override
    public boolean getSilenceModifier() {
      return silenceModifier_;
    }

    public static final int HEAL_FROM_LIFESTEAL_FIELD_NUMBER = 56;
    private boolean healFromLifesteal_ = false;
    /**
     * <code>optional bool heal_from_lifesteal = 56;</code>
     * @return Whether the healFromLifesteal field is set.
     */
    @java.lang.Override
    public boolean hasHealFromLifesteal() {
      return ((bitField1_ & 0x00400000) != 0);
    }
    /**
     * <code>optional bool heal_from_lifesteal = 56;</code>
     * @return The healFromLifesteal.
     */
    @java.lang.Override
    public boolean getHealFromLifesteal() {
      return healFromLifesteal_;
    }

    public static final int MODIFIER_PURGED_FIELD_NUMBER = 57;
    private boolean modifierPurged_ = false;
    /**
     * <code>optional bool modifier_purged = 57;</code>
     * @return Whether the modifierPurged field is set.
     */
    @java.lang.Override
    public boolean hasModifierPurged() {
      return ((bitField1_ & 0x00800000) != 0);
    }
    /**
     * <code>optional bool modifier_purged = 57;</code>
     * @return The modifierPurged.
     */
    @java.lang.Override
    public boolean getModifierPurged() {
      return modifierPurged_;
    }

    public static final int SPELL_EVADED_FIELD_NUMBER = 58;
    private boolean spellEvaded_ = false;
    /**
     * <code>optional bool spell_evaded = 58;</code>
     * @return Whether the spellEvaded field is set.
     */
    @java.lang.Override
    public boolean hasSpellEvaded() {
      return ((bitField1_ & 0x01000000) != 0);
    }
    /**
     * <code>optional bool spell_evaded = 58;</code>
     * @return The spellEvaded.
     */
    @java.lang.Override
    public boolean getSpellEvaded() {
      return spellEvaded_;
    }

    public static final int MOTION_CONTROLLER_MODIFIER_FIELD_NUMBER = 59;
    private boolean motionControllerModifier_ = false;
    /**
     * <code>optional bool motion_controller_modifier = 59;</code>
     * @return Whether the motionControllerModifier field is set.
     */
    @java.lang.Override
    public boolean hasMotionControllerModifier() {
      return ((bitField1_ & 0x02000000) != 0);
    }
    /**
     * <code>optional bool motion_controller_modifier = 59;</code>
     * @return The motionControllerModifier.
     */
    @java.lang.Override
    public boolean getMotionControllerModifier() {
      return motionControllerModifier_;
    }

    public static final int LONG_RANGE_KILL_FIELD_NUMBER = 60;
    private boolean longRangeKill_ = false;
    /**
     * <code>optional bool long_range_kill = 60;</code>
     * @return Whether the longRangeKill field is set.
     */
    @java.lang.Override
    public boolean hasLongRangeKill() {
      return ((bitField1_ & 0x04000000) != 0);
    }
    /**
     * <code>optional bool long_range_kill = 60;</code>
     * @return The longRangeKill.
     */
    @java.lang.Override
    public boolean getLongRangeKill() {
      return longRangeKill_;
    }

    public static final int MODIFIER_PURGE_ABILITY_FIELD_NUMBER = 61;
    private int modifierPurgeAbility_ = 0;
    /**
     * <code>optional uint32 modifier_purge_ability = 61;</code>
     * @return Whether the modifierPurgeAbility field is set.
     */
    @java.lang.Override
    public boolean hasModifierPurgeAbility() {
      return ((bitField1_ & 0x08000000) != 0);
    }
    /**
     * <code>optional uint32 modifier_purge_ability = 61;</code>
     * @return The modifierPurgeAbility.
     */
    @java.lang.Override
    public int getModifierPurgeAbility() {
      return modifierPurgeAbility_;
    }

    public static final int MODIFIER_PURGE_NPC_FIELD_NUMBER = 62;
    private int modifierPurgeNpc_ = 0;
    /**
     * <code>optional uint32 modifier_purge_npc = 62;</code>
     * @return Whether the modifierPurgeNpc field is set.
     */
    @java.lang.Override
    public boolean hasModifierPurgeNpc() {
      return ((bitField1_ & 0x10000000) != 0);
    }
    /**
     * <code>optional uint32 modifier_purge_npc = 62;</code>
     * @return The modifierPurgeNpc.
     */
    @java.lang.Override
    public int getModifierPurgeNpc() {
      return modifierPurgeNpc_;
    }

    public static final int ROOT_MODIFIER_FIELD_NUMBER = 63;
    private boolean rootModifier_ = false;
    /**
     * <code>optional bool root_modifier = 63;</code>
     * @return Whether the rootModifier field is set.
     */
    @java.lang.Override
    public boolean hasRootModifier() {
      return ((bitField1_ & 0x20000000) != 0);
    }
    /**
     * <code>optional bool root_modifier = 63;</code>
     * @return The rootModifier.
     */
    @java.lang.Override
    public boolean getRootModifier() {
      return rootModifier_;
    }

    public static final int TOTAL_UNIT_DEATH_COUNT_FIELD_NUMBER = 64;
    private int totalUnitDeathCount_ = 0;
    /**
     * <code>optional uint32 total_unit_death_count = 64;</code>
     * @return Whether the totalUnitDeathCount field is set.
     */
    @java.lang.Override
    public boolean hasTotalUnitDeathCount() {
      return ((bitField1_ & 0x40000000) != 0);
    }
    /**
     * <code>optional uint32 total_unit_death_count = 64;</code>
     * @return The totalUnitDeathCount.
     */
    @java.lang.Override
    public int getTotalUnitDeathCount() {
      return totalUnitDeathCount_;
    }

    public static final int AURA_MODIFIER_FIELD_NUMBER = 65;
    private boolean auraModifier_ = false;
    /**
     * <code>optional bool aura_modifier = 65;</code>
     * @return Whether the auraModifier field is set.
     */
    @java.lang.Override
    public boolean hasAuraModifier() {
      return ((bitField1_ & 0x80000000) != 0);
    }
    /**
     * <code>optional bool aura_modifier = 65;</code>
     * @return The auraModifier.
     */
    @java.lang.Override
    public boolean getAuraModifier() {
      return auraModifier_;
    }

    public static final int ARMOR_DEBUFF_MODIFIER_FIELD_NUMBER = 66;
    private boolean armorDebuffModifier_ = false;
    /**
     * <code>optional bool armor_debuff_modifier = 66;</code>
     * @return Whether the armorDebuffModifier field is set.
     */
    @java.lang.Override
    public boolean hasArmorDebuffModifier() {
      return ((bitField2_ & 0x00000001) != 0);
    }
    /**
     * <code>optional bool armor_debuff_modifier = 66;</code>
     * @return The armorDebuffModifier.
     */
    @java.lang.Override
    public boolean getArmorDebuffModifier() {
      return armorDebuffModifier_;
    }

    public static final int NO_PHYSICAL_DAMAGE_MODIFIER_FIELD_NUMBER = 67;
    private boolean noPhysicalDamageModifier_ = false;
    /**
     * <code>optional bool no_physical_damage_modifier = 67;</code>
     * @return Whether the noPhysicalDamageModifier field is set.
     */
    @java.lang.Override
    public boolean hasNoPhysicalDamageModifier() {
      return ((bitField2_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bool no_physical_damage_modifier = 67;</code>
     * @return The noPhysicalDamageModifier.
     */
    @java.lang.Override
    public boolean getNoPhysicalDamageModifier() {
      return noPhysicalDamageModifier_;
    }

    public static final int MODIFIER_ABILITY_FIELD_NUMBER = 68;
    private int modifierAbility_ = 0;
    /**
     * <code>optional uint32 modifier_ability = 68;</code>
     * @return Whether the modifierAbility field is set.
     */
    @java.lang.Override
    public boolean hasModifierAbility() {
      return ((bitField2_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 modifier_ability = 68;</code>
     * @return The modifierAbility.
     */
    @java.lang.Override
    public int getModifierAbility() {
      return modifierAbility_;
    }

    public static final int MODIFIER_HIDDEN_FIELD_NUMBER = 69;
    private boolean modifierHidden_ = false;
    /**
     * <code>optional bool modifier_hidden = 69;</code>
     * @return Whether the modifierHidden field is set.
     */
    @java.lang.Override
    public boolean hasModifierHidden() {
      return ((bitField2_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool modifier_hidden = 69;</code>
     * @return The modifierHidden.
     */
    @java.lang.Override
    public boolean getModifierHidden() {
      return modifierHidden_;
    }

    public static final int INFLICTOR_IS_STOLEN_ABILITY_FIELD_NUMBER = 70;
    private boolean inflictorIsStolenAbility_ = false;
    /**
     * <code>optional bool inflictor_is_stolen_ability = 70;</code>
     * @return Whether the inflictorIsStolenAbility field is set.
     */
    @java.lang.Override
    public boolean hasInflictorIsStolenAbility() {
      return ((bitField2_ & 0x00000010) != 0);
    }
    /**
     * <code>optional bool inflictor_is_stolen_ability = 70;</code>
     * @return The inflictorIsStolenAbility.
     */
    @java.lang.Override
    public boolean getInflictorIsStolenAbility() {
      return inflictorIsStolenAbility_;
    }

    public static final int KILL_EATER_EVENT_FIELD_NUMBER = 71;
    private int killEaterEvent_ = 0;
    /**
     * <code>optional uint32 kill_eater_event = 71;</code>
     * @return Whether the killEaterEvent field is set.
     */
    @java.lang.Override
    public boolean hasKillEaterEvent() {
      return ((bitField2_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 kill_eater_event = 71;</code>
     * @return The killEaterEvent.
     */
    @java.lang.Override
    public int getKillEaterEvent() {
      return killEaterEvent_;
    }

    public static final int UNIT_STATUS_LABEL_FIELD_NUMBER = 72;
    private int unitStatusLabel_ = 0;
    /**
     * <code>optional uint32 unit_status_label = 72;</code>
     * @return Whether the unitStatusLabel field is set.
     */
    @java.lang.Override
    public boolean hasUnitStatusLabel() {
      return ((bitField2_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint32 unit_status_label = 72;</code>
     * @return The unitStatusLabel.
     */
    @java.lang.Override
    public int getUnitStatusLabel() {
      return unitStatusLabel_;
    }

    public static final int SPELL_GENERATED_ATTACK_FIELD_NUMBER = 73;
    private boolean spellGeneratedAttack_ = false;
    /**
     * <code>optional bool spell_generated_attack = 73;</code>
     * @return Whether the spellGeneratedAttack field is set.
     */
    @java.lang.Override
    public boolean hasSpellGeneratedAttack() {
      return ((bitField2_ & 0x00000080) != 0);
    }
    /**
     * <code>optional bool spell_generated_attack = 73;</code>
     * @return The spellGeneratedAttack.
     */
    @java.lang.Override
    public boolean getSpellGeneratedAttack() {
      return spellGeneratedAttack_;
    }

    public static final int AT_NIGHT_TIME_FIELD_NUMBER = 74;
    private boolean atNightTime_ = false;
    /**
     * <code>optional bool at_night_time = 74;</code>
     * @return Whether the atNightTime field is set.
     */
    @java.lang.Override
    public boolean hasAtNightTime() {
      return ((bitField2_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool at_night_time = 74;</code>
     * @return The atNightTime.
     */
    @java.lang.Override
    public boolean getAtNightTime() {
      return atNightTime_;
    }

    public static final int ATTACKER_HAS_SCEPTER_FIELD_NUMBER = 75;
    private boolean attackerHasScepter_ = false;
    /**
     * <code>optional bool attacker_has_scepter = 75;</code>
     * @return Whether the attackerHasScepter field is set.
     */
    @java.lang.Override
    public boolean hasAttackerHasScepter() {
      return ((bitField2_ & 0x00000200) != 0);
    }
    /**
     * <code>optional bool attacker_has_scepter = 75;</code>
     * @return The attackerHasScepter.
     */
    @java.lang.Override
    public boolean getAttackerHasScepter() {
      return attackerHasScepter_;
    }

    public static final int NEUTRAL_CAMP_TEAM_FIELD_NUMBER = 76;
    private int neutralCampTeam_ = 0;
    /**
     * <code>optional uint32 neutral_camp_team = 76;</code>
     * @return Whether the neutralCampTeam field is set.
     */
    @java.lang.Override
    public boolean hasNeutralCampTeam() {
      return ((bitField2_ & 0x00000400) != 0);
    }
    /**
     * <code>optional uint32 neutral_camp_team = 76;</code>
     * @return The neutralCampTeam.
     */
    @java.lang.Override
    public int getNeutralCampTeam() {
      return neutralCampTeam_;
    }

    public static final int REGENERATED_HEALTH_FIELD_NUMBER = 77;
    private float regeneratedHealth_ = 0F;
    /**
     * <code>optional float regenerated_health = 77;</code>
     * @return Whether the regeneratedHealth field is set.
     */
    @java.lang.Override
    public boolean hasRegeneratedHealth() {
      return ((bitField2_ & 0x00000800) != 0);
    }
    /**
     * <code>optional float regenerated_health = 77;</code>
     * @return The regeneratedHealth.
     */
    @java.lang.Override
    public float getRegeneratedHealth() {
      return regeneratedHealth_;
    }

    public static final int WILL_REINCARNATE_FIELD_NUMBER = 78;
    private boolean willReincarnate_ = false;
    /**
     * <code>optional bool will_reincarnate = 78;</code>
     * @return Whether the willReincarnate field is set.
     */
    @java.lang.Override
    public boolean hasWillReincarnate() {
      return ((bitField2_ & 0x00001000) != 0);
    }
    /**
     * <code>optional bool will_reincarnate = 78;</code>
     * @return The willReincarnate.
     */
    @java.lang.Override
    public boolean getWillReincarnate() {
      return willReincarnate_;
    }

    public static final int USES_CHARGES_FIELD_NUMBER = 79;
    private boolean usesCharges_ = false;
    /**
     * <code>optional bool uses_charges = 79;</code>
     * @return Whether the usesCharges field is set.
     */
    @java.lang.Override
    public boolean hasUsesCharges() {
      return ((bitField2_ & 0x00002000) != 0);
    }
    /**
     * <code>optional bool uses_charges = 79;</code>
     * @return The usesCharges.
     */
    @java.lang.Override
    public boolean getUsesCharges() {
      return usesCharges_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, targetName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, targetSourceName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, attackerName_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, damageSourceName_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, inflictorName_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBool(7, isAttackerIllusion_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeBool(8, isAttackerHero_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeBool(9, isTargetIllusion_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeBool(10, isTargetHero_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeBool(11, isVisibleRadiant_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeBool(12, isVisibleDire_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeUInt32(13, value_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt32(14, health_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeFloat(15, timestamp_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeFloat(16, stunDuration_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeFloat(17, slowDuration_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeBool(18, isAbilityToggleOn_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeBool(19, isAbilityToggleOff_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeUInt32(20, abilityLevel_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeFloat(21, locationX_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeFloat(22, locationY_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        output.writeUInt32(23, goldReason_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        output.writeFloat(24, timestampRaw_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        output.writeFloat(25, modifierDuration_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        output.writeUInt32(26, xpReason_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        output.writeUInt32(27, lastHits_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        output.writeUInt32(28, attackerTeam_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        output.writeUInt32(29, targetTeam_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        output.writeUInt32(30, obsWardsPlaced_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        output.writeUInt32(31, assistPlayer0_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        output.writeUInt32(32, assistPlayer1_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        output.writeUInt32(33, assistPlayer2_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        output.writeUInt32(34, assistPlayer3_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        output.writeUInt32(35, stackCount_);
      }
      if (((bitField1_ & 0x00000008) != 0)) {
        output.writeBool(36, hiddenModifier_);
      }
      if (((bitField1_ & 0x00000010) != 0)) {
        output.writeBool(37, isTargetBuilding_);
      }
      if (((bitField1_ & 0x00000020) != 0)) {
        output.writeUInt32(38, neutralCampType_);
      }
      if (((bitField1_ & 0x00000040) != 0)) {
        output.writeUInt32(39, runeType_);
      }
      for (int i = 0; i < assistPlayers_.size(); i++) {
        output.writeInt32(40, assistPlayers_.getInt(i));
      }
      if (((bitField1_ & 0x00000080) != 0)) {
        output.writeBool(41, isHealSave_);
      }
      if (((bitField1_ & 0x00000100) != 0)) {
        output.writeBool(42, isUltimateAbility_);
      }
      if (((bitField1_ & 0x00000200) != 0)) {
        output.writeUInt32(43, attackerHeroLevel_);
      }
      if (((bitField1_ & 0x00000400) != 0)) {
        output.writeUInt32(44, targetHeroLevel_);
      }
      if (((bitField1_ & 0x00000800) != 0)) {
        output.writeUInt32(45, xpm_);
      }
      if (((bitField1_ & 0x00001000) != 0)) {
        output.writeUInt32(46, gpm_);
      }
      if (((bitField1_ & 0x00002000) != 0)) {
        output.writeUInt32(47, eventLocation_);
      }
      if (((bitField1_ & 0x00004000) != 0)) {
        output.writeBool(48, targetIsSelf_);
      }
      if (((bitField1_ & 0x00008000) != 0)) {
        output.writeUInt32(49, damageType_);
      }
      if (((bitField1_ & 0x00010000) != 0)) {
        output.writeBool(50, invisibilityModifier_);
      }
      if (((bitField1_ & 0x00020000) != 0)) {
        output.writeUInt32(51, damageCategory_);
      }
      if (((bitField1_ & 0x00040000) != 0)) {
        output.writeUInt32(52, networth_);
      }
      if (((bitField1_ & 0x00080000) != 0)) {
        output.writeUInt32(53, buildingType_);
      }
      if (((bitField1_ & 0x00100000) != 0)) {
        output.writeFloat(54, modifierElapsedDuration_);
      }
      if (((bitField1_ & 0x00200000) != 0)) {
        output.writeBool(55, silenceModifier_);
      }
      if (((bitField1_ & 0x00400000) != 0)) {
        output.writeBool(56, healFromLifesteal_);
      }
      if (((bitField1_ & 0x00800000) != 0)) {
        output.writeBool(57, modifierPurged_);
      }
      if (((bitField1_ & 0x01000000) != 0)) {
        output.writeBool(58, spellEvaded_);
      }
      if (((bitField1_ & 0x02000000) != 0)) {
        output.writeBool(59, motionControllerModifier_);
      }
      if (((bitField1_ & 0x04000000) != 0)) {
        output.writeBool(60, longRangeKill_);
      }
      if (((bitField1_ & 0x08000000) != 0)) {
        output.writeUInt32(61, modifierPurgeAbility_);
      }
      if (((bitField1_ & 0x10000000) != 0)) {
        output.writeUInt32(62, modifierPurgeNpc_);
      }
      if (((bitField1_ & 0x20000000) != 0)) {
        output.writeBool(63, rootModifier_);
      }
      if (((bitField1_ & 0x40000000) != 0)) {
        output.writeUInt32(64, totalUnitDeathCount_);
      }
      if (((bitField1_ & 0x80000000) != 0)) {
        output.writeBool(65, auraModifier_);
      }
      if (((bitField2_ & 0x00000001) != 0)) {
        output.writeBool(66, armorDebuffModifier_);
      }
      if (((bitField2_ & 0x00000002) != 0)) {
        output.writeBool(67, noPhysicalDamageModifier_);
      }
      if (((bitField2_ & 0x00000004) != 0)) {
        output.writeUInt32(68, modifierAbility_);
      }
      if (((bitField2_ & 0x00000008) != 0)) {
        output.writeBool(69, modifierHidden_);
      }
      if (((bitField2_ & 0x00000010) != 0)) {
        output.writeBool(70, inflictorIsStolenAbility_);
      }
      if (((bitField2_ & 0x00000020) != 0)) {
        output.writeUInt32(71, killEaterEvent_);
      }
      if (((bitField2_ & 0x00000040) != 0)) {
        output.writeUInt32(72, unitStatusLabel_);
      }
      if (((bitField2_ & 0x00000080) != 0)) {
        output.writeBool(73, spellGeneratedAttack_);
      }
      if (((bitField2_ & 0x00000100) != 0)) {
        output.writeBool(74, atNightTime_);
      }
      if (((bitField2_ & 0x00000200) != 0)) {
        output.writeBool(75, attackerHasScepter_);
      }
      if (((bitField2_ & 0x00000400) != 0)) {
        output.writeUInt32(76, neutralCampTeam_);
      }
      if (((bitField2_ & 0x00000800) != 0)) {
        output.writeFloat(77, regeneratedHealth_);
      }
      if (((bitField2_ & 0x00001000) != 0)) {
        output.writeBool(78, willReincarnate_);
      }
      if (((bitField2_ & 0x00002000) != 0)) {
        output.writeBool(79, usesCharges_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, targetName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, targetSourceName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, attackerName_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, damageSourceName_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, inflictorName_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isAttackerIllusion_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isAttackerHero_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isTargetIllusion_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isTargetHero_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isVisibleRadiant_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isVisibleDire_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, value_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, health_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, timestamp_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, stunDuration_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(17, slowDuration_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, isAbilityToggleOn_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, isAbilityToggleOff_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, abilityLevel_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(21, locationX_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, locationY_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, goldReason_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(24, timestampRaw_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, modifierDuration_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, xpReason_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, lastHits_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, attackerTeam_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, targetTeam_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, obsWardsPlaced_);
      }
      if (((bitField0_ & 0x40000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(31, assistPlayer0_);
      }
      if (((bitField0_ & 0x80000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, assistPlayer1_);
      }
      if (((bitField1_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, assistPlayer2_);
      }
      if (((bitField1_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(34, assistPlayer3_);
      }
      if (((bitField1_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, stackCount_);
      }
      if (((bitField1_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(36, hiddenModifier_);
      }
      if (((bitField1_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(37, isTargetBuilding_);
      }
      if (((bitField1_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(38, neutralCampType_);
      }
      if (((bitField1_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(39, runeType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < assistPlayers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(assistPlayers_.getInt(i));
        }
        size += dataSize;
        size += 2 * getAssistPlayersList().size();
      }
      if (((bitField1_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(41, isHealSave_);
      }
      if (((bitField1_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(42, isUltimateAbility_);
      }
      if (((bitField1_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(43, attackerHeroLevel_);
      }
      if (((bitField1_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(44, targetHeroLevel_);
      }
      if (((bitField1_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(45, xpm_);
      }
      if (((bitField1_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(46, gpm_);
      }
      if (((bitField1_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(47, eventLocation_);
      }
      if (((bitField1_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(48, targetIsSelf_);
      }
      if (((bitField1_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(49, damageType_);
      }
      if (((bitField1_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(50, invisibilityModifier_);
      }
      if (((bitField1_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(51, damageCategory_);
      }
      if (((bitField1_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(52, networth_);
      }
      if (((bitField1_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(53, buildingType_);
      }
      if (((bitField1_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(54, modifierElapsedDuration_);
      }
      if (((bitField1_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(55, silenceModifier_);
      }
      if (((bitField1_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(56, healFromLifesteal_);
      }
      if (((bitField1_ & 0x00800000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(57, modifierPurged_);
      }
      if (((bitField1_ & 0x01000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(58, spellEvaded_);
      }
      if (((bitField1_ & 0x02000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(59, motionControllerModifier_);
      }
      if (((bitField1_ & 0x04000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(60, longRangeKill_);
      }
      if (((bitField1_ & 0x08000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(61, modifierPurgeAbility_);
      }
      if (((bitField1_ & 0x10000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(62, modifierPurgeNpc_);
      }
      if (((bitField1_ & 0x20000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(63, rootModifier_);
      }
      if (((bitField1_ & 0x40000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(64, totalUnitDeathCount_);
      }
      if (((bitField1_ & 0x80000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(65, auraModifier_);
      }
      if (((bitField2_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(66, armorDebuffModifier_);
      }
      if (((bitField2_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(67, noPhysicalDamageModifier_);
      }
      if (((bitField2_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(68, modifierAbility_);
      }
      if (((bitField2_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(69, modifierHidden_);
      }
      if (((bitField2_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(70, inflictorIsStolenAbility_);
      }
      if (((bitField2_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(71, killEaterEvent_);
      }
      if (((bitField2_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(72, unitStatusLabel_);
      }
      if (((bitField2_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(73, spellGeneratedAttack_);
      }
      if (((bitField2_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(74, atNightTime_);
      }
      if (((bitField2_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(75, attackerHasScepter_);
      }
      if (((bitField2_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(76, neutralCampTeam_);
      }
      if (((bitField2_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(77, regeneratedHealth_);
      }
      if (((bitField2_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(78, willReincarnate_);
      }
      if (((bitField2_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(79, usesCharges_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry other = (com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (type_ != other.type_) return false;
      }
      if (hasTargetName() != other.hasTargetName()) return false;
      if (hasTargetName()) {
        if (getTargetName()
            != other.getTargetName()) return false;
      }
      if (hasTargetSourceName() != other.hasTargetSourceName()) return false;
      if (hasTargetSourceName()) {
        if (getTargetSourceName()
            != other.getTargetSourceName()) return false;
      }
      if (hasAttackerName() != other.hasAttackerName()) return false;
      if (hasAttackerName()) {
        if (getAttackerName()
            != other.getAttackerName()) return false;
      }
      if (hasDamageSourceName() != other.hasDamageSourceName()) return false;
      if (hasDamageSourceName()) {
        if (getDamageSourceName()
            != other.getDamageSourceName()) return false;
      }
      if (hasInflictorName() != other.hasInflictorName()) return false;
      if (hasInflictorName()) {
        if (getInflictorName()
            != other.getInflictorName()) return false;
      }
      if (hasIsAttackerIllusion() != other.hasIsAttackerIllusion()) return false;
      if (hasIsAttackerIllusion()) {
        if (getIsAttackerIllusion()
            != other.getIsAttackerIllusion()) return false;
      }
      if (hasIsAttackerHero() != other.hasIsAttackerHero()) return false;
      if (hasIsAttackerHero()) {
        if (getIsAttackerHero()
            != other.getIsAttackerHero()) return false;
      }
      if (hasIsTargetIllusion() != other.hasIsTargetIllusion()) return false;
      if (hasIsTargetIllusion()) {
        if (getIsTargetIllusion()
            != other.getIsTargetIllusion()) return false;
      }
      if (hasIsTargetHero() != other.hasIsTargetHero()) return false;
      if (hasIsTargetHero()) {
        if (getIsTargetHero()
            != other.getIsTargetHero()) return false;
      }
      if (hasIsVisibleRadiant() != other.hasIsVisibleRadiant()) return false;
      if (hasIsVisibleRadiant()) {
        if (getIsVisibleRadiant()
            != other.getIsVisibleRadiant()) return false;
      }
      if (hasIsVisibleDire() != other.hasIsVisibleDire()) return false;
      if (hasIsVisibleDire()) {
        if (getIsVisibleDire()
            != other.getIsVisibleDire()) return false;
      }
      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (getValue()
            != other.getValue()) return false;
      }
      if (hasHealth() != other.hasHealth()) return false;
      if (hasHealth()) {
        if (getHealth()
            != other.getHealth()) return false;
      }
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (java.lang.Float.floatToIntBits(getTimestamp())
            != java.lang.Float.floatToIntBits(
                other.getTimestamp())) return false;
      }
      if (hasStunDuration() != other.hasStunDuration()) return false;
      if (hasStunDuration()) {
        if (java.lang.Float.floatToIntBits(getStunDuration())
            != java.lang.Float.floatToIntBits(
                other.getStunDuration())) return false;
      }
      if (hasSlowDuration() != other.hasSlowDuration()) return false;
      if (hasSlowDuration()) {
        if (java.lang.Float.floatToIntBits(getSlowDuration())
            != java.lang.Float.floatToIntBits(
                other.getSlowDuration())) return false;
      }
      if (hasIsAbilityToggleOn() != other.hasIsAbilityToggleOn()) return false;
      if (hasIsAbilityToggleOn()) {
        if (getIsAbilityToggleOn()
            != other.getIsAbilityToggleOn()) return false;
      }
      if (hasIsAbilityToggleOff() != other.hasIsAbilityToggleOff()) return false;
      if (hasIsAbilityToggleOff()) {
        if (getIsAbilityToggleOff()
            != other.getIsAbilityToggleOff()) return false;
      }
      if (hasAbilityLevel() != other.hasAbilityLevel()) return false;
      if (hasAbilityLevel()) {
        if (getAbilityLevel()
            != other.getAbilityLevel()) return false;
      }
      if (hasLocationX() != other.hasLocationX()) return false;
      if (hasLocationX()) {
        if (java.lang.Float.floatToIntBits(getLocationX())
            != java.lang.Float.floatToIntBits(
                other.getLocationX())) return false;
      }
      if (hasLocationY() != other.hasLocationY()) return false;
      if (hasLocationY()) {
        if (java.lang.Float.floatToIntBits(getLocationY())
            != java.lang.Float.floatToIntBits(
                other.getLocationY())) return false;
      }
      if (hasGoldReason() != other.hasGoldReason()) return false;
      if (hasGoldReason()) {
        if (getGoldReason()
            != other.getGoldReason()) return false;
      }
      if (hasTimestampRaw() != other.hasTimestampRaw()) return false;
      if (hasTimestampRaw()) {
        if (java.lang.Float.floatToIntBits(getTimestampRaw())
            != java.lang.Float.floatToIntBits(
                other.getTimestampRaw())) return false;
      }
      if (hasModifierDuration() != other.hasModifierDuration()) return false;
      if (hasModifierDuration()) {
        if (java.lang.Float.floatToIntBits(getModifierDuration())
            != java.lang.Float.floatToIntBits(
                other.getModifierDuration())) return false;
      }
      if (hasXpReason() != other.hasXpReason()) return false;
      if (hasXpReason()) {
        if (getXpReason()
            != other.getXpReason()) return false;
      }
      if (hasLastHits() != other.hasLastHits()) return false;
      if (hasLastHits()) {
        if (getLastHits()
            != other.getLastHits()) return false;
      }
      if (hasAttackerTeam() != other.hasAttackerTeam()) return false;
      if (hasAttackerTeam()) {
        if (getAttackerTeam()
            != other.getAttackerTeam()) return false;
      }
      if (hasTargetTeam() != other.hasTargetTeam()) return false;
      if (hasTargetTeam()) {
        if (getTargetTeam()
            != other.getTargetTeam()) return false;
      }
      if (hasObsWardsPlaced() != other.hasObsWardsPlaced()) return false;
      if (hasObsWardsPlaced()) {
        if (getObsWardsPlaced()
            != other.getObsWardsPlaced()) return false;
      }
      if (hasAssistPlayer0() != other.hasAssistPlayer0()) return false;
      if (hasAssistPlayer0()) {
        if (getAssistPlayer0()
            != other.getAssistPlayer0()) return false;
      }
      if (hasAssistPlayer1() != other.hasAssistPlayer1()) return false;
      if (hasAssistPlayer1()) {
        if (getAssistPlayer1()
            != other.getAssistPlayer1()) return false;
      }
      if (hasAssistPlayer2() != other.hasAssistPlayer2()) return false;
      if (hasAssistPlayer2()) {
        if (getAssistPlayer2()
            != other.getAssistPlayer2()) return false;
      }
      if (hasAssistPlayer3() != other.hasAssistPlayer3()) return false;
      if (hasAssistPlayer3()) {
        if (getAssistPlayer3()
            != other.getAssistPlayer3()) return false;
      }
      if (hasStackCount() != other.hasStackCount()) return false;
      if (hasStackCount()) {
        if (getStackCount()
            != other.getStackCount()) return false;
      }
      if (hasHiddenModifier() != other.hasHiddenModifier()) return false;
      if (hasHiddenModifier()) {
        if (getHiddenModifier()
            != other.getHiddenModifier()) return false;
      }
      if (hasIsTargetBuilding() != other.hasIsTargetBuilding()) return false;
      if (hasIsTargetBuilding()) {
        if (getIsTargetBuilding()
            != other.getIsTargetBuilding()) return false;
      }
      if (hasNeutralCampType() != other.hasNeutralCampType()) return false;
      if (hasNeutralCampType()) {
        if (getNeutralCampType()
            != other.getNeutralCampType()) return false;
      }
      if (hasRuneType() != other.hasRuneType()) return false;
      if (hasRuneType()) {
        if (getRuneType()
            != other.getRuneType()) return false;
      }
      if (!getAssistPlayersList()
          .equals(other.getAssistPlayersList())) return false;
      if (hasIsHealSave() != other.hasIsHealSave()) return false;
      if (hasIsHealSave()) {
        if (getIsHealSave()
            != other.getIsHealSave()) return false;
      }
      if (hasIsUltimateAbility() != other.hasIsUltimateAbility()) return false;
      if (hasIsUltimateAbility()) {
        if (getIsUltimateAbility()
            != other.getIsUltimateAbility()) return false;
      }
      if (hasAttackerHeroLevel() != other.hasAttackerHeroLevel()) return false;
      if (hasAttackerHeroLevel()) {
        if (getAttackerHeroLevel()
            != other.getAttackerHeroLevel()) return false;
      }
      if (hasTargetHeroLevel() != other.hasTargetHeroLevel()) return false;
      if (hasTargetHeroLevel()) {
        if (getTargetHeroLevel()
            != other.getTargetHeroLevel()) return false;
      }
      if (hasXpm() != other.hasXpm()) return false;
      if (hasXpm()) {
        if (getXpm()
            != other.getXpm()) return false;
      }
      if (hasGpm() != other.hasGpm()) return false;
      if (hasGpm()) {
        if (getGpm()
            != other.getGpm()) return false;
      }
      if (hasEventLocation() != other.hasEventLocation()) return false;
      if (hasEventLocation()) {
        if (getEventLocation()
            != other.getEventLocation()) return false;
      }
      if (hasTargetIsSelf() != other.hasTargetIsSelf()) return false;
      if (hasTargetIsSelf()) {
        if (getTargetIsSelf()
            != other.getTargetIsSelf()) return false;
      }
      if (hasDamageType() != other.hasDamageType()) return false;
      if (hasDamageType()) {
        if (getDamageType()
            != other.getDamageType()) return false;
      }
      if (hasInvisibilityModifier() != other.hasInvisibilityModifier()) return false;
      if (hasInvisibilityModifier()) {
        if (getInvisibilityModifier()
            != other.getInvisibilityModifier()) return false;
      }
      if (hasDamageCategory() != other.hasDamageCategory()) return false;
      if (hasDamageCategory()) {
        if (getDamageCategory()
            != other.getDamageCategory()) return false;
      }
      if (hasNetworth() != other.hasNetworth()) return false;
      if (hasNetworth()) {
        if (getNetworth()
            != other.getNetworth()) return false;
      }
      if (hasBuildingType() != other.hasBuildingType()) return false;
      if (hasBuildingType()) {
        if (getBuildingType()
            != other.getBuildingType()) return false;
      }
      if (hasModifierElapsedDuration() != other.hasModifierElapsedDuration()) return false;
      if (hasModifierElapsedDuration()) {
        if (java.lang.Float.floatToIntBits(getModifierElapsedDuration())
            != java.lang.Float.floatToIntBits(
                other.getModifierElapsedDuration())) return false;
      }
      if (hasSilenceModifier() != other.hasSilenceModifier()) return false;
      if (hasSilenceModifier()) {
        if (getSilenceModifier()
            != other.getSilenceModifier()) return false;
      }
      if (hasHealFromLifesteal() != other.hasHealFromLifesteal()) return false;
      if (hasHealFromLifesteal()) {
        if (getHealFromLifesteal()
            != other.getHealFromLifesteal()) return false;
      }
      if (hasModifierPurged() != other.hasModifierPurged()) return false;
      if (hasModifierPurged()) {
        if (getModifierPurged()
            != other.getModifierPurged()) return false;
      }
      if (hasSpellEvaded() != other.hasSpellEvaded()) return false;
      if (hasSpellEvaded()) {
        if (getSpellEvaded()
            != other.getSpellEvaded()) return false;
      }
      if (hasMotionControllerModifier() != other.hasMotionControllerModifier()) return false;
      if (hasMotionControllerModifier()) {
        if (getMotionControllerModifier()
            != other.getMotionControllerModifier()) return false;
      }
      if (hasLongRangeKill() != other.hasLongRangeKill()) return false;
      if (hasLongRangeKill()) {
        if (getLongRangeKill()
            != other.getLongRangeKill()) return false;
      }
      if (hasModifierPurgeAbility() != other.hasModifierPurgeAbility()) return false;
      if (hasModifierPurgeAbility()) {
        if (getModifierPurgeAbility()
            != other.getModifierPurgeAbility()) return false;
      }
      if (hasModifierPurgeNpc() != other.hasModifierPurgeNpc()) return false;
      if (hasModifierPurgeNpc()) {
        if (getModifierPurgeNpc()
            != other.getModifierPurgeNpc()) return false;
      }
      if (hasRootModifier() != other.hasRootModifier()) return false;
      if (hasRootModifier()) {
        if (getRootModifier()
            != other.getRootModifier()) return false;
      }
      if (hasTotalUnitDeathCount() != other.hasTotalUnitDeathCount()) return false;
      if (hasTotalUnitDeathCount()) {
        if (getTotalUnitDeathCount()
            != other.getTotalUnitDeathCount()) return false;
      }
      if (hasAuraModifier() != other.hasAuraModifier()) return false;
      if (hasAuraModifier()) {
        if (getAuraModifier()
            != other.getAuraModifier()) return false;
      }
      if (hasArmorDebuffModifier() != other.hasArmorDebuffModifier()) return false;
      if (hasArmorDebuffModifier()) {
        if (getArmorDebuffModifier()
            != other.getArmorDebuffModifier()) return false;
      }
      if (hasNoPhysicalDamageModifier() != other.hasNoPhysicalDamageModifier()) return false;
      if (hasNoPhysicalDamageModifier()) {
        if (getNoPhysicalDamageModifier()
            != other.getNoPhysicalDamageModifier()) return false;
      }
      if (hasModifierAbility() != other.hasModifierAbility()) return false;
      if (hasModifierAbility()) {
        if (getModifierAbility()
            != other.getModifierAbility()) return false;
      }
      if (hasModifierHidden() != other.hasModifierHidden()) return false;
      if (hasModifierHidden()) {
        if (getModifierHidden()
            != other.getModifierHidden()) return false;
      }
      if (hasInflictorIsStolenAbility() != other.hasInflictorIsStolenAbility()) return false;
      if (hasInflictorIsStolenAbility()) {
        if (getInflictorIsStolenAbility()
            != other.getInflictorIsStolenAbility()) return false;
      }
      if (hasKillEaterEvent() != other.hasKillEaterEvent()) return false;
      if (hasKillEaterEvent()) {
        if (getKillEaterEvent()
            != other.getKillEaterEvent()) return false;
      }
      if (hasUnitStatusLabel() != other.hasUnitStatusLabel()) return false;
      if (hasUnitStatusLabel()) {
        if (getUnitStatusLabel()
            != other.getUnitStatusLabel()) return false;
      }
      if (hasSpellGeneratedAttack() != other.hasSpellGeneratedAttack()) return false;
      if (hasSpellGeneratedAttack()) {
        if (getSpellGeneratedAttack()
            != other.getSpellGeneratedAttack()) return false;
      }
      if (hasAtNightTime() != other.hasAtNightTime()) return false;
      if (hasAtNightTime()) {
        if (getAtNightTime()
            != other.getAtNightTime()) return false;
      }
      if (hasAttackerHasScepter() != other.hasAttackerHasScepter()) return false;
      if (hasAttackerHasScepter()) {
        if (getAttackerHasScepter()
            != other.getAttackerHasScepter()) return false;
      }
      if (hasNeutralCampTeam() != other.hasNeutralCampTeam()) return false;
      if (hasNeutralCampTeam()) {
        if (getNeutralCampTeam()
            != other.getNeutralCampTeam()) return false;
      }
      if (hasRegeneratedHealth() != other.hasRegeneratedHealth()) return false;
      if (hasRegeneratedHealth()) {
        if (java.lang.Float.floatToIntBits(getRegeneratedHealth())
            != java.lang.Float.floatToIntBits(
                other.getRegeneratedHealth())) return false;
      }
      if (hasWillReincarnate() != other.hasWillReincarnate()) return false;
      if (hasWillReincarnate()) {
        if (getWillReincarnate()
            != other.getWillReincarnate()) return false;
      }
      if (hasUsesCharges() != other.hasUsesCharges()) return false;
      if (hasUsesCharges()) {
        if (getUsesCharges()
            != other.getUsesCharges()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasTargetName()) {
        hash = (37 * hash) + TARGET_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTargetName();
      }
      if (hasTargetSourceName()) {
        hash = (37 * hash) + TARGET_SOURCE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTargetSourceName();
      }
      if (hasAttackerName()) {
        hash = (37 * hash) + ATTACKER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getAttackerName();
      }
      if (hasDamageSourceName()) {
        hash = (37 * hash) + DAMAGE_SOURCE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getDamageSourceName();
      }
      if (hasInflictorName()) {
        hash = (37 * hash) + INFLICTOR_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getInflictorName();
      }
      if (hasIsAttackerIllusion()) {
        hash = (37 * hash) + IS_ATTACKER_ILLUSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsAttackerIllusion());
      }
      if (hasIsAttackerHero()) {
        hash = (37 * hash) + IS_ATTACKER_HERO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsAttackerHero());
      }
      if (hasIsTargetIllusion()) {
        hash = (37 * hash) + IS_TARGET_ILLUSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsTargetIllusion());
      }
      if (hasIsTargetHero()) {
        hash = (37 * hash) + IS_TARGET_HERO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsTargetHero());
      }
      if (hasIsVisibleRadiant()) {
        hash = (37 * hash) + IS_VISIBLE_RADIANT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsVisibleRadiant());
      }
      if (hasIsVisibleDire()) {
        hash = (37 * hash) + IS_VISIBLE_DIRE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsVisibleDire());
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue();
      }
      if (hasHealth()) {
        hash = (37 * hash) + HEALTH_FIELD_NUMBER;
        hash = (53 * hash) + getHealth();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTimestamp());
      }
      if (hasStunDuration()) {
        hash = (37 * hash) + STUN_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getStunDuration());
      }
      if (hasSlowDuration()) {
        hash = (37 * hash) + SLOW_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getSlowDuration());
      }
      if (hasIsAbilityToggleOn()) {
        hash = (37 * hash) + IS_ABILITY_TOGGLE_ON_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsAbilityToggleOn());
      }
      if (hasIsAbilityToggleOff()) {
        hash = (37 * hash) + IS_ABILITY_TOGGLE_OFF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsAbilityToggleOff());
      }
      if (hasAbilityLevel()) {
        hash = (37 * hash) + ABILITY_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getAbilityLevel();
      }
      if (hasLocationX()) {
        hash = (37 * hash) + LOCATION_X_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLocationX());
      }
      if (hasLocationY()) {
        hash = (37 * hash) + LOCATION_Y_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLocationY());
      }
      if (hasGoldReason()) {
        hash = (37 * hash) + GOLD_REASON_FIELD_NUMBER;
        hash = (53 * hash) + getGoldReason();
      }
      if (hasTimestampRaw()) {
        hash = (37 * hash) + TIMESTAMP_RAW_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getTimestampRaw());
      }
      if (hasModifierDuration()) {
        hash = (37 * hash) + MODIFIER_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getModifierDuration());
      }
      if (hasXpReason()) {
        hash = (37 * hash) + XP_REASON_FIELD_NUMBER;
        hash = (53 * hash) + getXpReason();
      }
      if (hasLastHits()) {
        hash = (37 * hash) + LAST_HITS_FIELD_NUMBER;
        hash = (53 * hash) + getLastHits();
      }
      if (hasAttackerTeam()) {
        hash = (37 * hash) + ATTACKER_TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getAttackerTeam();
      }
      if (hasTargetTeam()) {
        hash = (37 * hash) + TARGET_TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getTargetTeam();
      }
      if (hasObsWardsPlaced()) {
        hash = (37 * hash) + OBS_WARDS_PLACED_FIELD_NUMBER;
        hash = (53 * hash) + getObsWardsPlaced();
      }
      if (hasAssistPlayer0()) {
        hash = (37 * hash) + ASSIST_PLAYER0_FIELD_NUMBER;
        hash = (53 * hash) + getAssistPlayer0();
      }
      if (hasAssistPlayer1()) {
        hash = (37 * hash) + ASSIST_PLAYER1_FIELD_NUMBER;
        hash = (53 * hash) + getAssistPlayer1();
      }
      if (hasAssistPlayer2()) {
        hash = (37 * hash) + ASSIST_PLAYER2_FIELD_NUMBER;
        hash = (53 * hash) + getAssistPlayer2();
      }
      if (hasAssistPlayer3()) {
        hash = (37 * hash) + ASSIST_PLAYER3_FIELD_NUMBER;
        hash = (53 * hash) + getAssistPlayer3();
      }
      if (hasStackCount()) {
        hash = (37 * hash) + STACK_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getStackCount();
      }
      if (hasHiddenModifier()) {
        hash = (37 * hash) + HIDDEN_MODIFIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHiddenModifier());
      }
      if (hasIsTargetBuilding()) {
        hash = (37 * hash) + IS_TARGET_BUILDING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsTargetBuilding());
      }
      if (hasNeutralCampType()) {
        hash = (37 * hash) + NEUTRAL_CAMP_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getNeutralCampType();
      }
      if (hasRuneType()) {
        hash = (37 * hash) + RUNE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getRuneType();
      }
      if (getAssistPlayersCount() > 0) {
        hash = (37 * hash) + ASSIST_PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getAssistPlayersList().hashCode();
      }
      if (hasIsHealSave()) {
        hash = (37 * hash) + IS_HEAL_SAVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsHealSave());
      }
      if (hasIsUltimateAbility()) {
        hash = (37 * hash) + IS_ULTIMATE_ABILITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsUltimateAbility());
      }
      if (hasAttackerHeroLevel()) {
        hash = (37 * hash) + ATTACKER_HERO_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getAttackerHeroLevel();
      }
      if (hasTargetHeroLevel()) {
        hash = (37 * hash) + TARGET_HERO_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + getTargetHeroLevel();
      }
      if (hasXpm()) {
        hash = (37 * hash) + XPM_FIELD_NUMBER;
        hash = (53 * hash) + getXpm();
      }
      if (hasGpm()) {
        hash = (37 * hash) + GPM_FIELD_NUMBER;
        hash = (53 * hash) + getGpm();
      }
      if (hasEventLocation()) {
        hash = (37 * hash) + EVENT_LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getEventLocation();
      }
      if (hasTargetIsSelf()) {
        hash = (37 * hash) + TARGET_IS_SELF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTargetIsSelf());
      }
      if (hasDamageType()) {
        hash = (37 * hash) + DAMAGE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getDamageType();
      }
      if (hasInvisibilityModifier()) {
        hash = (37 * hash) + INVISIBILITY_MODIFIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getInvisibilityModifier());
      }
      if (hasDamageCategory()) {
        hash = (37 * hash) + DAMAGE_CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getDamageCategory();
      }
      if (hasNetworth()) {
        hash = (37 * hash) + NETWORTH_FIELD_NUMBER;
        hash = (53 * hash) + getNetworth();
      }
      if (hasBuildingType()) {
        hash = (37 * hash) + BUILDING_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getBuildingType();
      }
      if (hasModifierElapsedDuration()) {
        hash = (37 * hash) + MODIFIER_ELAPSED_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getModifierElapsedDuration());
      }
      if (hasSilenceModifier()) {
        hash = (37 * hash) + SILENCE_MODIFIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSilenceModifier());
      }
      if (hasHealFromLifesteal()) {
        hash = (37 * hash) + HEAL_FROM_LIFESTEAL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHealFromLifesteal());
      }
      if (hasModifierPurged()) {
        hash = (37 * hash) + MODIFIER_PURGED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getModifierPurged());
      }
      if (hasSpellEvaded()) {
        hash = (37 * hash) + SPELL_EVADED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSpellEvaded());
      }
      if (hasMotionControllerModifier()) {
        hash = (37 * hash) + MOTION_CONTROLLER_MODIFIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getMotionControllerModifier());
      }
      if (hasLongRangeKill()) {
        hash = (37 * hash) + LONG_RANGE_KILL_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLongRangeKill());
      }
      if (hasModifierPurgeAbility()) {
        hash = (37 * hash) + MODIFIER_PURGE_ABILITY_FIELD_NUMBER;
        hash = (53 * hash) + getModifierPurgeAbility();
      }
      if (hasModifierPurgeNpc()) {
        hash = (37 * hash) + MODIFIER_PURGE_NPC_FIELD_NUMBER;
        hash = (53 * hash) + getModifierPurgeNpc();
      }
      if (hasRootModifier()) {
        hash = (37 * hash) + ROOT_MODIFIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRootModifier());
      }
      if (hasTotalUnitDeathCount()) {
        hash = (37 * hash) + TOTAL_UNIT_DEATH_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getTotalUnitDeathCount();
      }
      if (hasAuraModifier()) {
        hash = (37 * hash) + AURA_MODIFIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAuraModifier());
      }
      if (hasArmorDebuffModifier()) {
        hash = (37 * hash) + ARMOR_DEBUFF_MODIFIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getArmorDebuffModifier());
      }
      if (hasNoPhysicalDamageModifier()) {
        hash = (37 * hash) + NO_PHYSICAL_DAMAGE_MODIFIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getNoPhysicalDamageModifier());
      }
      if (hasModifierAbility()) {
        hash = (37 * hash) + MODIFIER_ABILITY_FIELD_NUMBER;
        hash = (53 * hash) + getModifierAbility();
      }
      if (hasModifierHidden()) {
        hash = (37 * hash) + MODIFIER_HIDDEN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getModifierHidden());
      }
      if (hasInflictorIsStolenAbility()) {
        hash = (37 * hash) + INFLICTOR_IS_STOLEN_ABILITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getInflictorIsStolenAbility());
      }
      if (hasKillEaterEvent()) {
        hash = (37 * hash) + KILL_EATER_EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getKillEaterEvent();
      }
      if (hasUnitStatusLabel()) {
        hash = (37 * hash) + UNIT_STATUS_LABEL_FIELD_NUMBER;
        hash = (53 * hash) + getUnitStatusLabel();
      }
      if (hasSpellGeneratedAttack()) {
        hash = (37 * hash) + SPELL_GENERATED_ATTACK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSpellGeneratedAttack());
      }
      if (hasAtNightTime()) {
        hash = (37 * hash) + AT_NIGHT_TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAtNightTime());
      }
      if (hasAttackerHasScepter()) {
        hash = (37 * hash) + ATTACKER_HAS_SCEPTER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAttackerHasScepter());
      }
      if (hasNeutralCampTeam()) {
        hash = (37 * hash) + NEUTRAL_CAMP_TEAM_FIELD_NUMBER;
        hash = (53 * hash) + getNeutralCampTeam();
      }
      if (hasRegeneratedHealth()) {
        hash = (37 * hash) + REGENERATED_HEALTH_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getRegeneratedHealth());
      }
      if (hasWillReincarnate()) {
        hash = (37 * hash) + WILL_REINCARNATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getWillReincarnate());
      }
      if (hasUsesCharges()) {
        hash = (37 * hash) + USES_CHARGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUsesCharges());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dota2.CMsgDOTACombatLogEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dota2.CMsgDOTACombatLogEntry)
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgDOTACombatLogEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgDOTACombatLogEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry.Builder.class);
      }

      // Construct using com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        bitField1_ = 0;
        bitField2_ = 0;
        type_ = -1;
        targetName_ = 0;
        targetSourceName_ = 0;
        attackerName_ = 0;
        damageSourceName_ = 0;
        inflictorName_ = 0;
        isAttackerIllusion_ = false;
        isAttackerHero_ = false;
        isTargetIllusion_ = false;
        isTargetHero_ = false;
        isVisibleRadiant_ = false;
        isVisibleDire_ = false;
        value_ = 0;
        health_ = 0;
        timestamp_ = 0F;
        stunDuration_ = 0F;
        slowDuration_ = 0F;
        isAbilityToggleOn_ = false;
        isAbilityToggleOff_ = false;
        abilityLevel_ = 0;
        locationX_ = 0F;
        locationY_ = 0F;
        goldReason_ = 0;
        timestampRaw_ = 0F;
        modifierDuration_ = 0F;
        xpReason_ = 0;
        lastHits_ = 0;
        attackerTeam_ = 0;
        targetTeam_ = 0;
        obsWardsPlaced_ = 0;
        assistPlayer0_ = 0;
        assistPlayer1_ = 0;
        assistPlayer2_ = 0;
        assistPlayer3_ = 0;
        stackCount_ = 0;
        hiddenModifier_ = false;
        isTargetBuilding_ = false;
        neutralCampType_ = 0;
        runeType_ = 0;
        assistPlayers_ = emptyIntList();
        isHealSave_ = false;
        isUltimateAbility_ = false;
        attackerHeroLevel_ = 0;
        targetHeroLevel_ = 0;
        xpm_ = 0;
        gpm_ = 0;
        eventLocation_ = 0;
        targetIsSelf_ = false;
        damageType_ = 0;
        invisibilityModifier_ = false;
        damageCategory_ = 0;
        networth_ = 0;
        buildingType_ = 0;
        modifierElapsedDuration_ = 0F;
        silenceModifier_ = false;
        healFromLifesteal_ = false;
        modifierPurged_ = false;
        spellEvaded_ = false;
        motionControllerModifier_ = false;
        longRangeKill_ = false;
        modifierPurgeAbility_ = 0;
        modifierPurgeNpc_ = 0;
        rootModifier_ = false;
        totalUnitDeathCount_ = 0;
        auraModifier_ = false;
        armorDebuffModifier_ = false;
        noPhysicalDamageModifier_ = false;
        modifierAbility_ = 0;
        modifierHidden_ = false;
        inflictorIsStolenAbility_ = false;
        killEaterEvent_ = 0;
        unitStatusLabel_ = 0;
        spellGeneratedAttack_ = false;
        atNightTime_ = false;
        attackerHasScepter_ = false;
        neutralCampTeam_ = 0;
        regeneratedHealth_ = 0F;
        willReincarnate_ = false;
        usesCharges_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgDOTACombatLogEntry_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry getDefaultInstanceForType() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry build() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry buildPartial() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry result = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        if (bitField1_ != 0) { buildPartial1(result); }
        if (bitField2_ != 0) { buildPartial2(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.targetName_ = targetName_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.targetSourceName_ = targetSourceName_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.attackerName_ = attackerName_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.damageSourceName_ = damageSourceName_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.inflictorName_ = inflictorName_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.isAttackerIllusion_ = isAttackerIllusion_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.isAttackerHero_ = isAttackerHero_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.isTargetIllusion_ = isTargetIllusion_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.isTargetHero_ = isTargetHero_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.isVisibleRadiant_ = isVisibleRadiant_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.isVisibleDire_ = isVisibleDire_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.value_ = value_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.health_ = health_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.stunDuration_ = stunDuration_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.slowDuration_ = slowDuration_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.isAbilityToggleOn_ = isAbilityToggleOn_;
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.isAbilityToggleOff_ = isAbilityToggleOff_;
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.abilityLevel_ = abilityLevel_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.locationX_ = locationX_;
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.locationY_ = locationY_;
          to_bitField0_ |= 0x00200000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.goldReason_ = goldReason_;
          to_bitField0_ |= 0x00400000;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.timestampRaw_ = timestampRaw_;
          to_bitField0_ |= 0x00800000;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.modifierDuration_ = modifierDuration_;
          to_bitField0_ |= 0x01000000;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.xpReason_ = xpReason_;
          to_bitField0_ |= 0x02000000;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.lastHits_ = lastHits_;
          to_bitField0_ |= 0x04000000;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.attackerTeam_ = attackerTeam_;
          to_bitField0_ |= 0x08000000;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.targetTeam_ = targetTeam_;
          to_bitField0_ |= 0x10000000;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.obsWardsPlaced_ = obsWardsPlaced_;
          to_bitField0_ |= 0x20000000;
        }
        if (((from_bitField0_ & 0x40000000) != 0)) {
          result.assistPlayer0_ = assistPlayer0_;
          to_bitField0_ |= 0x40000000;
        }
        if (((from_bitField0_ & 0x80000000) != 0)) {
          result.assistPlayer1_ = assistPlayer1_;
          to_bitField0_ |= 0x80000000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartial1(com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry result) {
        int from_bitField1_ = bitField1_;
        int to_bitField1_ = 0;
        if (((from_bitField1_ & 0x00000001) != 0)) {
          result.assistPlayer2_ = assistPlayer2_;
          to_bitField1_ |= 0x00000001;
        }
        if (((from_bitField1_ & 0x00000002) != 0)) {
          result.assistPlayer3_ = assistPlayer3_;
          to_bitField1_ |= 0x00000002;
        }
        if (((from_bitField1_ & 0x00000004) != 0)) {
          result.stackCount_ = stackCount_;
          to_bitField1_ |= 0x00000004;
        }
        if (((from_bitField1_ & 0x00000008) != 0)) {
          result.hiddenModifier_ = hiddenModifier_;
          to_bitField1_ |= 0x00000008;
        }
        if (((from_bitField1_ & 0x00000010) != 0)) {
          result.isTargetBuilding_ = isTargetBuilding_;
          to_bitField1_ |= 0x00000010;
        }
        if (((from_bitField1_ & 0x00000020) != 0)) {
          result.neutralCampType_ = neutralCampType_;
          to_bitField1_ |= 0x00000020;
        }
        if (((from_bitField1_ & 0x00000040) != 0)) {
          result.runeType_ = runeType_;
          to_bitField1_ |= 0x00000040;
        }
        if (((from_bitField1_ & 0x00000080) != 0)) {
          assistPlayers_.makeImmutable();
          result.assistPlayers_ = assistPlayers_;
        }
        if (((from_bitField1_ & 0x00000100) != 0)) {
          result.isHealSave_ = isHealSave_;
          to_bitField1_ |= 0x00000080;
        }
        if (((from_bitField1_ & 0x00000200) != 0)) {
          result.isUltimateAbility_ = isUltimateAbility_;
          to_bitField1_ |= 0x00000100;
        }
        if (((from_bitField1_ & 0x00000400) != 0)) {
          result.attackerHeroLevel_ = attackerHeroLevel_;
          to_bitField1_ |= 0x00000200;
        }
        if (((from_bitField1_ & 0x00000800) != 0)) {
          result.targetHeroLevel_ = targetHeroLevel_;
          to_bitField1_ |= 0x00000400;
        }
        if (((from_bitField1_ & 0x00001000) != 0)) {
          result.xpm_ = xpm_;
          to_bitField1_ |= 0x00000800;
        }
        if (((from_bitField1_ & 0x00002000) != 0)) {
          result.gpm_ = gpm_;
          to_bitField1_ |= 0x00001000;
        }
        if (((from_bitField1_ & 0x00004000) != 0)) {
          result.eventLocation_ = eventLocation_;
          to_bitField1_ |= 0x00002000;
        }
        if (((from_bitField1_ & 0x00008000) != 0)) {
          result.targetIsSelf_ = targetIsSelf_;
          to_bitField1_ |= 0x00004000;
        }
        if (((from_bitField1_ & 0x00010000) != 0)) {
          result.damageType_ = damageType_;
          to_bitField1_ |= 0x00008000;
        }
        if (((from_bitField1_ & 0x00020000) != 0)) {
          result.invisibilityModifier_ = invisibilityModifier_;
          to_bitField1_ |= 0x00010000;
        }
        if (((from_bitField1_ & 0x00040000) != 0)) {
          result.damageCategory_ = damageCategory_;
          to_bitField1_ |= 0x00020000;
        }
        if (((from_bitField1_ & 0x00080000) != 0)) {
          result.networth_ = networth_;
          to_bitField1_ |= 0x00040000;
        }
        if (((from_bitField1_ & 0x00100000) != 0)) {
          result.buildingType_ = buildingType_;
          to_bitField1_ |= 0x00080000;
        }
        if (((from_bitField1_ & 0x00200000) != 0)) {
          result.modifierElapsedDuration_ = modifierElapsedDuration_;
          to_bitField1_ |= 0x00100000;
        }
        if (((from_bitField1_ & 0x00400000) != 0)) {
          result.silenceModifier_ = silenceModifier_;
          to_bitField1_ |= 0x00200000;
        }
        if (((from_bitField1_ & 0x00800000) != 0)) {
          result.healFromLifesteal_ = healFromLifesteal_;
          to_bitField1_ |= 0x00400000;
        }
        if (((from_bitField1_ & 0x01000000) != 0)) {
          result.modifierPurged_ = modifierPurged_;
          to_bitField1_ |= 0x00800000;
        }
        if (((from_bitField1_ & 0x02000000) != 0)) {
          result.spellEvaded_ = spellEvaded_;
          to_bitField1_ |= 0x01000000;
        }
        if (((from_bitField1_ & 0x04000000) != 0)) {
          result.motionControllerModifier_ = motionControllerModifier_;
          to_bitField1_ |= 0x02000000;
        }
        if (((from_bitField1_ & 0x08000000) != 0)) {
          result.longRangeKill_ = longRangeKill_;
          to_bitField1_ |= 0x04000000;
        }
        if (((from_bitField1_ & 0x10000000) != 0)) {
          result.modifierPurgeAbility_ = modifierPurgeAbility_;
          to_bitField1_ |= 0x08000000;
        }
        if (((from_bitField1_ & 0x20000000) != 0)) {
          result.modifierPurgeNpc_ = modifierPurgeNpc_;
          to_bitField1_ |= 0x10000000;
        }
        if (((from_bitField1_ & 0x40000000) != 0)) {
          result.rootModifier_ = rootModifier_;
          to_bitField1_ |= 0x20000000;
        }
        if (((from_bitField1_ & 0x80000000) != 0)) {
          result.totalUnitDeathCount_ = totalUnitDeathCount_;
          to_bitField1_ |= 0x40000000;
        }
        result.bitField1_ |= to_bitField1_;
      }

      private void buildPartial2(com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry result) {
        int from_bitField2_ = bitField2_;
        int to_bitField1_ = 0;
        if (((from_bitField2_ & 0x00000001) != 0)) {
          result.auraModifier_ = auraModifier_;
          to_bitField1_ |= 0x80000000;
        }
        int to_bitField2_ = 0;
        if (((from_bitField2_ & 0x00000002) != 0)) {
          result.armorDebuffModifier_ = armorDebuffModifier_;
          to_bitField2_ |= 0x00000001;
        }
        if (((from_bitField2_ & 0x00000004) != 0)) {
          result.noPhysicalDamageModifier_ = noPhysicalDamageModifier_;
          to_bitField2_ |= 0x00000002;
        }
        if (((from_bitField2_ & 0x00000008) != 0)) {
          result.modifierAbility_ = modifierAbility_;
          to_bitField2_ |= 0x00000004;
        }
        if (((from_bitField2_ & 0x00000010) != 0)) {
          result.modifierHidden_ = modifierHidden_;
          to_bitField2_ |= 0x00000008;
        }
        if (((from_bitField2_ & 0x00000020) != 0)) {
          result.inflictorIsStolenAbility_ = inflictorIsStolenAbility_;
          to_bitField2_ |= 0x00000010;
        }
        if (((from_bitField2_ & 0x00000040) != 0)) {
          result.killEaterEvent_ = killEaterEvent_;
          to_bitField2_ |= 0x00000020;
        }
        if (((from_bitField2_ & 0x00000080) != 0)) {
          result.unitStatusLabel_ = unitStatusLabel_;
          to_bitField2_ |= 0x00000040;
        }
        if (((from_bitField2_ & 0x00000100) != 0)) {
          result.spellGeneratedAttack_ = spellGeneratedAttack_;
          to_bitField2_ |= 0x00000080;
        }
        if (((from_bitField2_ & 0x00000200) != 0)) {
          result.atNightTime_ = atNightTime_;
          to_bitField2_ |= 0x00000100;
        }
        if (((from_bitField2_ & 0x00000400) != 0)) {
          result.attackerHasScepter_ = attackerHasScepter_;
          to_bitField2_ |= 0x00000200;
        }
        if (((from_bitField2_ & 0x00000800) != 0)) {
          result.neutralCampTeam_ = neutralCampTeam_;
          to_bitField2_ |= 0x00000400;
        }
        if (((from_bitField2_ & 0x00001000) != 0)) {
          result.regeneratedHealth_ = regeneratedHealth_;
          to_bitField2_ |= 0x00000800;
        }
        if (((from_bitField2_ & 0x00002000) != 0)) {
          result.willReincarnate_ = willReincarnate_;
          to_bitField2_ |= 0x00001000;
        }
        if (((from_bitField2_ & 0x00004000) != 0)) {
          result.usesCharges_ = usesCharges_;
          to_bitField2_ |= 0x00002000;
        }
        result.bitField1_ |= to_bitField1_;
        result.bitField2_ |= to_bitField2_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry) {
          return mergeFrom((com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry other) {
        if (other == com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasTargetName()) {
          setTargetName(other.getTargetName());
        }
        if (other.hasTargetSourceName()) {
          setTargetSourceName(other.getTargetSourceName());
        }
        if (other.hasAttackerName()) {
          setAttackerName(other.getAttackerName());
        }
        if (other.hasDamageSourceName()) {
          setDamageSourceName(other.getDamageSourceName());
        }
        if (other.hasInflictorName()) {
          setInflictorName(other.getInflictorName());
        }
        if (other.hasIsAttackerIllusion()) {
          setIsAttackerIllusion(other.getIsAttackerIllusion());
        }
        if (other.hasIsAttackerHero()) {
          setIsAttackerHero(other.getIsAttackerHero());
        }
        if (other.hasIsTargetIllusion()) {
          setIsTargetIllusion(other.getIsTargetIllusion());
        }
        if (other.hasIsTargetHero()) {
          setIsTargetHero(other.getIsTargetHero());
        }
        if (other.hasIsVisibleRadiant()) {
          setIsVisibleRadiant(other.getIsVisibleRadiant());
        }
        if (other.hasIsVisibleDire()) {
          setIsVisibleDire(other.getIsVisibleDire());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasHealth()) {
          setHealth(other.getHealth());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasStunDuration()) {
          setStunDuration(other.getStunDuration());
        }
        if (other.hasSlowDuration()) {
          setSlowDuration(other.getSlowDuration());
        }
        if (other.hasIsAbilityToggleOn()) {
          setIsAbilityToggleOn(other.getIsAbilityToggleOn());
        }
        if (other.hasIsAbilityToggleOff()) {
          setIsAbilityToggleOff(other.getIsAbilityToggleOff());
        }
        if (other.hasAbilityLevel()) {
          setAbilityLevel(other.getAbilityLevel());
        }
        if (other.hasLocationX()) {
          setLocationX(other.getLocationX());
        }
        if (other.hasLocationY()) {
          setLocationY(other.getLocationY());
        }
        if (other.hasGoldReason()) {
          setGoldReason(other.getGoldReason());
        }
        if (other.hasTimestampRaw()) {
          setTimestampRaw(other.getTimestampRaw());
        }
        if (other.hasModifierDuration()) {
          setModifierDuration(other.getModifierDuration());
        }
        if (other.hasXpReason()) {
          setXpReason(other.getXpReason());
        }
        if (other.hasLastHits()) {
          setLastHits(other.getLastHits());
        }
        if (other.hasAttackerTeam()) {
          setAttackerTeam(other.getAttackerTeam());
        }
        if (other.hasTargetTeam()) {
          setTargetTeam(other.getTargetTeam());
        }
        if (other.hasObsWardsPlaced()) {
          setObsWardsPlaced(other.getObsWardsPlaced());
        }
        if (other.hasAssistPlayer0()) {
          setAssistPlayer0(other.getAssistPlayer0());
        }
        if (other.hasAssistPlayer1()) {
          setAssistPlayer1(other.getAssistPlayer1());
        }
        if (other.hasAssistPlayer2()) {
          setAssistPlayer2(other.getAssistPlayer2());
        }
        if (other.hasAssistPlayer3()) {
          setAssistPlayer3(other.getAssistPlayer3());
        }
        if (other.hasStackCount()) {
          setStackCount(other.getStackCount());
        }
        if (other.hasHiddenModifier()) {
          setHiddenModifier(other.getHiddenModifier());
        }
        if (other.hasIsTargetBuilding()) {
          setIsTargetBuilding(other.getIsTargetBuilding());
        }
        if (other.hasNeutralCampType()) {
          setNeutralCampType(other.getNeutralCampType());
        }
        if (other.hasRuneType()) {
          setRuneType(other.getRuneType());
        }
        if (!other.assistPlayers_.isEmpty()) {
          if (assistPlayers_.isEmpty()) {
            assistPlayers_ = other.assistPlayers_;
            assistPlayers_.makeImmutable();
            bitField1_ |= 0x00000080;
          } else {
            ensureAssistPlayersIsMutable();
            assistPlayers_.addAll(other.assistPlayers_);
          }
          onChanged();
        }
        if (other.hasIsHealSave()) {
          setIsHealSave(other.getIsHealSave());
        }
        if (other.hasIsUltimateAbility()) {
          setIsUltimateAbility(other.getIsUltimateAbility());
        }
        if (other.hasAttackerHeroLevel()) {
          setAttackerHeroLevel(other.getAttackerHeroLevel());
        }
        if (other.hasTargetHeroLevel()) {
          setTargetHeroLevel(other.getTargetHeroLevel());
        }
        if (other.hasXpm()) {
          setXpm(other.getXpm());
        }
        if (other.hasGpm()) {
          setGpm(other.getGpm());
        }
        if (other.hasEventLocation()) {
          setEventLocation(other.getEventLocation());
        }
        if (other.hasTargetIsSelf()) {
          setTargetIsSelf(other.getTargetIsSelf());
        }
        if (other.hasDamageType()) {
          setDamageType(other.getDamageType());
        }
        if (other.hasInvisibilityModifier()) {
          setInvisibilityModifier(other.getInvisibilityModifier());
        }
        if (other.hasDamageCategory()) {
          setDamageCategory(other.getDamageCategory());
        }
        if (other.hasNetworth()) {
          setNetworth(other.getNetworth());
        }
        if (other.hasBuildingType()) {
          setBuildingType(other.getBuildingType());
        }
        if (other.hasModifierElapsedDuration()) {
          setModifierElapsedDuration(other.getModifierElapsedDuration());
        }
        if (other.hasSilenceModifier()) {
          setSilenceModifier(other.getSilenceModifier());
        }
        if (other.hasHealFromLifesteal()) {
          setHealFromLifesteal(other.getHealFromLifesteal());
        }
        if (other.hasModifierPurged()) {
          setModifierPurged(other.getModifierPurged());
        }
        if (other.hasSpellEvaded()) {
          setSpellEvaded(other.getSpellEvaded());
        }
        if (other.hasMotionControllerModifier()) {
          setMotionControllerModifier(other.getMotionControllerModifier());
        }
        if (other.hasLongRangeKill()) {
          setLongRangeKill(other.getLongRangeKill());
        }
        if (other.hasModifierPurgeAbility()) {
          setModifierPurgeAbility(other.getModifierPurgeAbility());
        }
        if (other.hasModifierPurgeNpc()) {
          setModifierPurgeNpc(other.getModifierPurgeNpc());
        }
        if (other.hasRootModifier()) {
          setRootModifier(other.getRootModifier());
        }
        if (other.hasTotalUnitDeathCount()) {
          setTotalUnitDeathCount(other.getTotalUnitDeathCount());
        }
        if (other.hasAuraModifier()) {
          setAuraModifier(other.getAuraModifier());
        }
        if (other.hasArmorDebuffModifier()) {
          setArmorDebuffModifier(other.getArmorDebuffModifier());
        }
        if (other.hasNoPhysicalDamageModifier()) {
          setNoPhysicalDamageModifier(other.getNoPhysicalDamageModifier());
        }
        if (other.hasModifierAbility()) {
          setModifierAbility(other.getModifierAbility());
        }
        if (other.hasModifierHidden()) {
          setModifierHidden(other.getModifierHidden());
        }
        if (other.hasInflictorIsStolenAbility()) {
          setInflictorIsStolenAbility(other.getInflictorIsStolenAbility());
        }
        if (other.hasKillEaterEvent()) {
          setKillEaterEvent(other.getKillEaterEvent());
        }
        if (other.hasUnitStatusLabel()) {
          setUnitStatusLabel(other.getUnitStatusLabel());
        }
        if (other.hasSpellGeneratedAttack()) {
          setSpellGeneratedAttack(other.getSpellGeneratedAttack());
        }
        if (other.hasAtNightTime()) {
          setAtNightTime(other.getAtNightTime());
        }
        if (other.hasAttackerHasScepter()) {
          setAttackerHasScepter(other.getAttackerHasScepter());
        }
        if (other.hasNeutralCampTeam()) {
          setNeutralCampTeam(other.getNeutralCampTeam());
        }
        if (other.hasRegeneratedHealth()) {
          setRegeneratedHealth(other.getRegeneratedHealth());
        }
        if (other.hasWillReincarnate()) {
          setWillReincarnate(other.getWillReincarnate());
        }
        if (other.hasUsesCharges()) {
          setUsesCharges(other.getUsesCharges());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES tmpValue =
                    com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  type_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                targetName_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                targetSourceName_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                attackerName_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                damageSourceName_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                inflictorName_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                isAttackerIllusion_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                isAttackerHero_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                isTargetIllusion_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                isTargetHero_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                isVisibleRadiant_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                isVisibleDire_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                value_ = input.readUInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                health_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 125: {
                timestamp_ = input.readFloat();
                bitField0_ |= 0x00004000;
                break;
              } // case 125
              case 133: {
                stunDuration_ = input.readFloat();
                bitField0_ |= 0x00008000;
                break;
              } // case 133
              case 141: {
                slowDuration_ = input.readFloat();
                bitField0_ |= 0x00010000;
                break;
              } // case 141
              case 144: {
                isAbilityToggleOn_ = input.readBool();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                isAbilityToggleOff_ = input.readBool();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                abilityLevel_ = input.readUInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 173: {
                locationX_ = input.readFloat();
                bitField0_ |= 0x00100000;
                break;
              } // case 173
              case 181: {
                locationY_ = input.readFloat();
                bitField0_ |= 0x00200000;
                break;
              } // case 181
              case 184: {
                goldReason_ = input.readUInt32();
                bitField0_ |= 0x00400000;
                break;
              } // case 184
              case 197: {
                timestampRaw_ = input.readFloat();
                bitField0_ |= 0x00800000;
                break;
              } // case 197
              case 205: {
                modifierDuration_ = input.readFloat();
                bitField0_ |= 0x01000000;
                break;
              } // case 205
              case 208: {
                xpReason_ = input.readUInt32();
                bitField0_ |= 0x02000000;
                break;
              } // case 208
              case 216: {
                lastHits_ = input.readUInt32();
                bitField0_ |= 0x04000000;
                break;
              } // case 216
              case 224: {
                attackerTeam_ = input.readUInt32();
                bitField0_ |= 0x08000000;
                break;
              } // case 224
              case 232: {
                targetTeam_ = input.readUInt32();
                bitField0_ |= 0x10000000;
                break;
              } // case 232
              case 240: {
                obsWardsPlaced_ = input.readUInt32();
                bitField0_ |= 0x20000000;
                break;
              } // case 240
              case 248: {
                assistPlayer0_ = input.readUInt32();
                bitField0_ |= 0x40000000;
                break;
              } // case 248
              case 256: {
                assistPlayer1_ = input.readUInt32();
                bitField0_ |= 0x80000000;
                break;
              } // case 256
              case 264: {
                assistPlayer2_ = input.readUInt32();
                bitField1_ |= 0x00000001;
                break;
              } // case 264
              case 272: {
                assistPlayer3_ = input.readUInt32();
                bitField1_ |= 0x00000002;
                break;
              } // case 272
              case 280: {
                stackCount_ = input.readUInt32();
                bitField1_ |= 0x00000004;
                break;
              } // case 280
              case 288: {
                hiddenModifier_ = input.readBool();
                bitField1_ |= 0x00000008;
                break;
              } // case 288
              case 296: {
                isTargetBuilding_ = input.readBool();
                bitField1_ |= 0x00000010;
                break;
              } // case 296
              case 304: {
                neutralCampType_ = input.readUInt32();
                bitField1_ |= 0x00000020;
                break;
              } // case 304
              case 312: {
                runeType_ = input.readUInt32();
                bitField1_ |= 0x00000040;
                break;
              } // case 312
              case 320: {
                int v = input.readInt32();
                ensureAssistPlayersIsMutable();
                assistPlayers_.addInt(v);
                break;
              } // case 320
              case 322: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAssistPlayersIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  assistPlayers_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 322
              case 328: {
                isHealSave_ = input.readBool();
                bitField1_ |= 0x00000100;
                break;
              } // case 328
              case 336: {
                isUltimateAbility_ = input.readBool();
                bitField1_ |= 0x00000200;
                break;
              } // case 336
              case 344: {
                attackerHeroLevel_ = input.readUInt32();
                bitField1_ |= 0x00000400;
                break;
              } // case 344
              case 352: {
                targetHeroLevel_ = input.readUInt32();
                bitField1_ |= 0x00000800;
                break;
              } // case 352
              case 360: {
                xpm_ = input.readUInt32();
                bitField1_ |= 0x00001000;
                break;
              } // case 360
              case 368: {
                gpm_ = input.readUInt32();
                bitField1_ |= 0x00002000;
                break;
              } // case 368
              case 376: {
                eventLocation_ = input.readUInt32();
                bitField1_ |= 0x00004000;
                break;
              } // case 376
              case 384: {
                targetIsSelf_ = input.readBool();
                bitField1_ |= 0x00008000;
                break;
              } // case 384
              case 392: {
                damageType_ = input.readUInt32();
                bitField1_ |= 0x00010000;
                break;
              } // case 392
              case 400: {
                invisibilityModifier_ = input.readBool();
                bitField1_ |= 0x00020000;
                break;
              } // case 400
              case 408: {
                damageCategory_ = input.readUInt32();
                bitField1_ |= 0x00040000;
                break;
              } // case 408
              case 416: {
                networth_ = input.readUInt32();
                bitField1_ |= 0x00080000;
                break;
              } // case 416
              case 424: {
                buildingType_ = input.readUInt32();
                bitField1_ |= 0x00100000;
                break;
              } // case 424
              case 437: {
                modifierElapsedDuration_ = input.readFloat();
                bitField1_ |= 0x00200000;
                break;
              } // case 437
              case 440: {
                silenceModifier_ = input.readBool();
                bitField1_ |= 0x00400000;
                break;
              } // case 440
              case 448: {
                healFromLifesteal_ = input.readBool();
                bitField1_ |= 0x00800000;
                break;
              } // case 448
              case 456: {
                modifierPurged_ = input.readBool();
                bitField1_ |= 0x01000000;
                break;
              } // case 456
              case 464: {
                spellEvaded_ = input.readBool();
                bitField1_ |= 0x02000000;
                break;
              } // case 464
              case 472: {
                motionControllerModifier_ = input.readBool();
                bitField1_ |= 0x04000000;
                break;
              } // case 472
              case 480: {
                longRangeKill_ = input.readBool();
                bitField1_ |= 0x08000000;
                break;
              } // case 480
              case 488: {
                modifierPurgeAbility_ = input.readUInt32();
                bitField1_ |= 0x10000000;
                break;
              } // case 488
              case 496: {
                modifierPurgeNpc_ = input.readUInt32();
                bitField1_ |= 0x20000000;
                break;
              } // case 496
              case 504: {
                rootModifier_ = input.readBool();
                bitField1_ |= 0x40000000;
                break;
              } // case 504
              case 512: {
                totalUnitDeathCount_ = input.readUInt32();
                bitField1_ |= 0x80000000;
                break;
              } // case 512
              case 520: {
                auraModifier_ = input.readBool();
                bitField2_ |= 0x00000001;
                break;
              } // case 520
              case 528: {
                armorDebuffModifier_ = input.readBool();
                bitField2_ |= 0x00000002;
                break;
              } // case 528
              case 536: {
                noPhysicalDamageModifier_ = input.readBool();
                bitField2_ |= 0x00000004;
                break;
              } // case 536
              case 544: {
                modifierAbility_ = input.readUInt32();
                bitField2_ |= 0x00000008;
                break;
              } // case 544
              case 552: {
                modifierHidden_ = input.readBool();
                bitField2_ |= 0x00000010;
                break;
              } // case 552
              case 560: {
                inflictorIsStolenAbility_ = input.readBool();
                bitField2_ |= 0x00000020;
                break;
              } // case 560
              case 568: {
                killEaterEvent_ = input.readUInt32();
                bitField2_ |= 0x00000040;
                break;
              } // case 568
              case 576: {
                unitStatusLabel_ = input.readUInt32();
                bitField2_ |= 0x00000080;
                break;
              } // case 576
              case 584: {
                spellGeneratedAttack_ = input.readBool();
                bitField2_ |= 0x00000100;
                break;
              } // case 584
              case 592: {
                atNightTime_ = input.readBool();
                bitField2_ |= 0x00000200;
                break;
              } // case 592
              case 600: {
                attackerHasScepter_ = input.readBool();
                bitField2_ |= 0x00000400;
                break;
              } // case 600
              case 608: {
                neutralCampTeam_ = input.readUInt32();
                bitField2_ |= 0x00000800;
                break;
              } // case 608
              case 621: {
                regeneratedHealth_ = input.readFloat();
                bitField2_ |= 0x00001000;
                break;
              } // case 621
              case 624: {
                willReincarnate_ = input.readBool();
                bitField2_ |= 0x00002000;
                break;
              } // case 624
              case 632: {
                usesCharges_ = input.readBool();
                bitField2_ |= 0x00004000;
                break;
              } // case 632
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;
      private int bitField1_;
      private int bitField2_;

      private int type_ = -1;
      /**
       * <code>optional .dota2.DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_INVALID];</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .dota2.DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_INVALID];</code>
       * @return The type.
       */
      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES getType() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES result = com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES.forNumber(type_);
        return result == null ? com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES.DOTA_COMBATLOG_INVALID : result;
      }
      /**
       * <code>optional .dota2.DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_INVALID];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(com.nickbooher.protos.gc.dota.MsgSharedEnums.DOTA_COMBATLOG_TYPES value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.DOTA_COMBATLOG_TYPES type = 1 [default = DOTA_COMBATLOG_INVALID];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = -1;
        onChanged();
        return this;
      }

      private int targetName_ ;
      /**
       * <code>optional uint32 target_name = 2;</code>
       * @return Whether the targetName field is set.
       */
      @java.lang.Override
      public boolean hasTargetName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       * @return The targetName.
       */
      @java.lang.Override
      public int getTargetName() {
        return targetName_;
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       * @param value The targetName to set.
       * @return This builder for chaining.
       */
      public Builder setTargetName(int value) {

        targetName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetName_ = 0;
        onChanged();
        return this;
      }

      private int targetSourceName_ ;
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       * @return Whether the targetSourceName field is set.
       */
      @java.lang.Override
      public boolean hasTargetSourceName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       * @return The targetSourceName.
       */
      @java.lang.Override
      public int getTargetSourceName() {
        return targetSourceName_;
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       * @param value The targetSourceName to set.
       * @return This builder for chaining.
       */
      public Builder setTargetSourceName(int value) {

        targetSourceName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_source_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetSourceName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        targetSourceName_ = 0;
        onChanged();
        return this;
      }

      private int attackerName_ ;
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       * @return Whether the attackerName field is set.
       */
      @java.lang.Override
      public boolean hasAttackerName() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       * @return The attackerName.
       */
      @java.lang.Override
      public int getAttackerName() {
        return attackerName_;
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       * @param value The attackerName to set.
       * @return This builder for chaining.
       */
      public Builder setAttackerName(int value) {

        attackerName_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attacker_name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackerName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        attackerName_ = 0;
        onChanged();
        return this;
      }

      private int damageSourceName_ ;
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       * @return Whether the damageSourceName field is set.
       */
      @java.lang.Override
      public boolean hasDamageSourceName() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       * @return The damageSourceName.
       */
      @java.lang.Override
      public int getDamageSourceName() {
        return damageSourceName_;
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       * @param value The damageSourceName to set.
       * @return This builder for chaining.
       */
      public Builder setDamageSourceName(int value) {

        damageSourceName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage_source_name = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDamageSourceName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        damageSourceName_ = 0;
        onChanged();
        return this;
      }

      private int inflictorName_ ;
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       * @return Whether the inflictorName field is set.
       */
      @java.lang.Override
      public boolean hasInflictorName() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       * @return The inflictorName.
       */
      @java.lang.Override
      public int getInflictorName() {
        return inflictorName_;
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       * @param value The inflictorName to set.
       * @return This builder for chaining.
       */
      public Builder setInflictorName(int value) {

        inflictorName_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 inflictor_name = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearInflictorName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        inflictorName_ = 0;
        onChanged();
        return this;
      }

      private boolean isAttackerIllusion_ ;
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       * @return Whether the isAttackerIllusion field is set.
       */
      @java.lang.Override
      public boolean hasIsAttackerIllusion() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       * @return The isAttackerIllusion.
       */
      @java.lang.Override
      public boolean getIsAttackerIllusion() {
        return isAttackerIllusion_;
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       * @param value The isAttackerIllusion to set.
       * @return This builder for chaining.
       */
      public Builder setIsAttackerIllusion(boolean value) {

        isAttackerIllusion_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_attacker_illusion = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAttackerIllusion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isAttackerIllusion_ = false;
        onChanged();
        return this;
      }

      private boolean isAttackerHero_ ;
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       * @return Whether the isAttackerHero field is set.
       */
      @java.lang.Override
      public boolean hasIsAttackerHero() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       * @return The isAttackerHero.
       */
      @java.lang.Override
      public boolean getIsAttackerHero() {
        return isAttackerHero_;
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       * @param value The isAttackerHero to set.
       * @return This builder for chaining.
       */
      public Builder setIsAttackerHero(boolean value) {

        isAttackerHero_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_attacker_hero = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAttackerHero() {
        bitField0_ = (bitField0_ & ~0x00000080);
        isAttackerHero_ = false;
        onChanged();
        return this;
      }

      private boolean isTargetIllusion_ ;
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       * @return Whether the isTargetIllusion field is set.
       */
      @java.lang.Override
      public boolean hasIsTargetIllusion() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       * @return The isTargetIllusion.
       */
      @java.lang.Override
      public boolean getIsTargetIllusion() {
        return isTargetIllusion_;
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       * @param value The isTargetIllusion to set.
       * @return This builder for chaining.
       */
      public Builder setIsTargetIllusion(boolean value) {

        isTargetIllusion_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_target_illusion = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsTargetIllusion() {
        bitField0_ = (bitField0_ & ~0x00000100);
        isTargetIllusion_ = false;
        onChanged();
        return this;
      }

      private boolean isTargetHero_ ;
      /**
       * <code>optional bool is_target_hero = 10;</code>
       * @return Whether the isTargetHero field is set.
       */
      @java.lang.Override
      public boolean hasIsTargetHero() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       * @return The isTargetHero.
       */
      @java.lang.Override
      public boolean getIsTargetHero() {
        return isTargetHero_;
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       * @param value The isTargetHero to set.
       * @return This builder for chaining.
       */
      public Builder setIsTargetHero(boolean value) {

        isTargetHero_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_target_hero = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsTargetHero() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isTargetHero_ = false;
        onChanged();
        return this;
      }

      private boolean isVisibleRadiant_ ;
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       * @return Whether the isVisibleRadiant field is set.
       */
      @java.lang.Override
      public boolean hasIsVisibleRadiant() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       * @return The isVisibleRadiant.
       */
      @java.lang.Override
      public boolean getIsVisibleRadiant() {
        return isVisibleRadiant_;
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       * @param value The isVisibleRadiant to set.
       * @return This builder for chaining.
       */
      public Builder setIsVisibleRadiant(boolean value) {

        isVisibleRadiant_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_visible_radiant = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsVisibleRadiant() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isVisibleRadiant_ = false;
        onChanged();
        return this;
      }

      private boolean isVisibleDire_ ;
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       * @return Whether the isVisibleDire field is set.
       */
      @java.lang.Override
      public boolean hasIsVisibleDire() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       * @return The isVisibleDire.
       */
      @java.lang.Override
      public boolean getIsVisibleDire() {
        return isVisibleDire_;
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       * @param value The isVisibleDire to set.
       * @return This builder for chaining.
       */
      public Builder setIsVisibleDire(boolean value) {

        isVisibleDire_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_visible_dire = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsVisibleDire() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isVisibleDire_ = false;
        onChanged();
        return this;
      }

      private int value_ ;
      /**
       * <code>optional uint32 value = 13;</code>
       * @return Whether the value field is set.
       */
      @java.lang.Override
      public boolean hasValue() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional uint32 value = 13;</code>
       * @return The value.
       */
      @java.lang.Override
      public int getValue() {
        return value_;
      }
      /**
       * <code>optional uint32 value = 13;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(int value) {

        value_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 value = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00001000);
        value_ = 0;
        onChanged();
        return this;
      }

      private int health_ ;
      /**
       * <code>optional int32 health = 14;</code>
       * @return Whether the health field is set.
       */
      @java.lang.Override
      public boolean hasHealth() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional int32 health = 14;</code>
       * @return The health.
       */
      @java.lang.Override
      public int getHealth() {
        return health_;
      }
      /**
       * <code>optional int32 health = 14;</code>
       * @param value The health to set.
       * @return This builder for chaining.
       */
      public Builder setHealth(int value) {

        health_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 health = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearHealth() {
        bitField0_ = (bitField0_ & ~0x00002000);
        health_ = 0;
        onChanged();
        return this;
      }

      private float timestamp_ ;
      /**
       * <code>optional float timestamp = 15;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional float timestamp = 15;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public float getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional float timestamp = 15;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(float value) {

        timestamp_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float timestamp = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00004000);
        timestamp_ = 0F;
        onChanged();
        return this;
      }

      private float stunDuration_ ;
      /**
       * <code>optional float stun_duration = 16;</code>
       * @return Whether the stunDuration field is set.
       */
      @java.lang.Override
      public boolean hasStunDuration() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       * @return The stunDuration.
       */
      @java.lang.Override
      public float getStunDuration() {
        return stunDuration_;
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       * @param value The stunDuration to set.
       * @return This builder for chaining.
       */
      public Builder setStunDuration(float value) {

        stunDuration_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float stun_duration = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearStunDuration() {
        bitField0_ = (bitField0_ & ~0x00008000);
        stunDuration_ = 0F;
        onChanged();
        return this;
      }

      private float slowDuration_ ;
      /**
       * <code>optional float slow_duration = 17;</code>
       * @return Whether the slowDuration field is set.
       */
      @java.lang.Override
      public boolean hasSlowDuration() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       * @return The slowDuration.
       */
      @java.lang.Override
      public float getSlowDuration() {
        return slowDuration_;
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       * @param value The slowDuration to set.
       * @return This builder for chaining.
       */
      public Builder setSlowDuration(float value) {

        slowDuration_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float slow_duration = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearSlowDuration() {
        bitField0_ = (bitField0_ & ~0x00010000);
        slowDuration_ = 0F;
        onChanged();
        return this;
      }

      private boolean isAbilityToggleOn_ ;
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       * @return Whether the isAbilityToggleOn field is set.
       */
      @java.lang.Override
      public boolean hasIsAbilityToggleOn() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       * @return The isAbilityToggleOn.
       */
      @java.lang.Override
      public boolean getIsAbilityToggleOn() {
        return isAbilityToggleOn_;
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       * @param value The isAbilityToggleOn to set.
       * @return This builder for chaining.
       */
      public Builder setIsAbilityToggleOn(boolean value) {

        isAbilityToggleOn_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ability_toggle_on = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAbilityToggleOn() {
        bitField0_ = (bitField0_ & ~0x00020000);
        isAbilityToggleOn_ = false;
        onChanged();
        return this;
      }

      private boolean isAbilityToggleOff_ ;
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       * @return Whether the isAbilityToggleOff field is set.
       */
      @java.lang.Override
      public boolean hasIsAbilityToggleOff() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       * @return The isAbilityToggleOff.
       */
      @java.lang.Override
      public boolean getIsAbilityToggleOff() {
        return isAbilityToggleOff_;
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       * @param value The isAbilityToggleOff to set.
       * @return This builder for chaining.
       */
      public Builder setIsAbilityToggleOff(boolean value) {

        isAbilityToggleOff_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ability_toggle_off = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsAbilityToggleOff() {
        bitField0_ = (bitField0_ & ~0x00040000);
        isAbilityToggleOff_ = false;
        onChanged();
        return this;
      }

      private int abilityLevel_ ;
      /**
       * <code>optional uint32 ability_level = 20;</code>
       * @return Whether the abilityLevel field is set.
       */
      @java.lang.Override
      public boolean hasAbilityLevel() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       * @return The abilityLevel.
       */
      @java.lang.Override
      public int getAbilityLevel() {
        return abilityLevel_;
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       * @param value The abilityLevel to set.
       * @return This builder for chaining.
       */
      public Builder setAbilityLevel(int value) {

        abilityLevel_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability_level = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearAbilityLevel() {
        bitField0_ = (bitField0_ & ~0x00080000);
        abilityLevel_ = 0;
        onChanged();
        return this;
      }

      private float locationX_ ;
      /**
       * <code>optional float location_x = 21;</code>
       * @return Whether the locationX field is set.
       */
      @java.lang.Override
      public boolean hasLocationX() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <code>optional float location_x = 21;</code>
       * @return The locationX.
       */
      @java.lang.Override
      public float getLocationX() {
        return locationX_;
      }
      /**
       * <code>optional float location_x = 21;</code>
       * @param value The locationX to set.
       * @return This builder for chaining.
       */
      public Builder setLocationX(float value) {

        locationX_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float location_x = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocationX() {
        bitField0_ = (bitField0_ & ~0x00100000);
        locationX_ = 0F;
        onChanged();
        return this;
      }

      private float locationY_ ;
      /**
       * <code>optional float location_y = 22;</code>
       * @return Whether the locationY field is set.
       */
      @java.lang.Override
      public boolean hasLocationY() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>optional float location_y = 22;</code>
       * @return The locationY.
       */
      @java.lang.Override
      public float getLocationY() {
        return locationY_;
      }
      /**
       * <code>optional float location_y = 22;</code>
       * @param value The locationY to set.
       * @return This builder for chaining.
       */
      public Builder setLocationY(float value) {

        locationY_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float location_y = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocationY() {
        bitField0_ = (bitField0_ & ~0x00200000);
        locationY_ = 0F;
        onChanged();
        return this;
      }

      private int goldReason_ ;
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       * @return Whether the goldReason field is set.
       */
      @java.lang.Override
      public boolean hasGoldReason() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       * @return The goldReason.
       */
      @java.lang.Override
      public int getGoldReason() {
        return goldReason_;
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       * @param value The goldReason to set.
       * @return This builder for chaining.
       */
      public Builder setGoldReason(int value) {

        goldReason_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gold_reason = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearGoldReason() {
        bitField0_ = (bitField0_ & ~0x00400000);
        goldReason_ = 0;
        onChanged();
        return this;
      }

      private float timestampRaw_ ;
      /**
       * <code>optional float timestamp_raw = 24;</code>
       * @return Whether the timestampRaw field is set.
       */
      @java.lang.Override
      public boolean hasTimestampRaw() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       * @return The timestampRaw.
       */
      @java.lang.Override
      public float getTimestampRaw() {
        return timestampRaw_;
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       * @param value The timestampRaw to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampRaw(float value) {

        timestampRaw_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float timestamp_raw = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampRaw() {
        bitField0_ = (bitField0_ & ~0x00800000);
        timestampRaw_ = 0F;
        onChanged();
        return this;
      }

      private float modifierDuration_ ;
      /**
       * <code>optional float modifier_duration = 25;</code>
       * @return Whether the modifierDuration field is set.
       */
      @java.lang.Override
      public boolean hasModifierDuration() {
        return ((bitField0_ & 0x01000000) != 0);
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       * @return The modifierDuration.
       */
      @java.lang.Override
      public float getModifierDuration() {
        return modifierDuration_;
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       * @param value The modifierDuration to set.
       * @return This builder for chaining.
       */
      public Builder setModifierDuration(float value) {

        modifierDuration_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float modifier_duration = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearModifierDuration() {
        bitField0_ = (bitField0_ & ~0x01000000);
        modifierDuration_ = 0F;
        onChanged();
        return this;
      }

      private int xpReason_ ;
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       * @return Whether the xpReason field is set.
       */
      @java.lang.Override
      public boolean hasXpReason() {
        return ((bitField0_ & 0x02000000) != 0);
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       * @return The xpReason.
       */
      @java.lang.Override
      public int getXpReason() {
        return xpReason_;
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       * @param value The xpReason to set.
       * @return This builder for chaining.
       */
      public Builder setXpReason(int value) {

        xpReason_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 xp_reason = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearXpReason() {
        bitField0_ = (bitField0_ & ~0x02000000);
        xpReason_ = 0;
        onChanged();
        return this;
      }

      private int lastHits_ ;
      /**
       * <code>optional uint32 last_hits = 27;</code>
       * @return Whether the lastHits field is set.
       */
      @java.lang.Override
      public boolean hasLastHits() {
        return ((bitField0_ & 0x04000000) != 0);
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       * @return The lastHits.
       */
      @java.lang.Override
      public int getLastHits() {
        return lastHits_;
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       * @param value The lastHits to set.
       * @return This builder for chaining.
       */
      public Builder setLastHits(int value) {

        lastHits_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 last_hits = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastHits() {
        bitField0_ = (bitField0_ & ~0x04000000);
        lastHits_ = 0;
        onChanged();
        return this;
      }

      private int attackerTeam_ ;
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       * @return Whether the attackerTeam field is set.
       */
      @java.lang.Override
      public boolean hasAttackerTeam() {
        return ((bitField0_ & 0x08000000) != 0);
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       * @return The attackerTeam.
       */
      @java.lang.Override
      public int getAttackerTeam() {
        return attackerTeam_;
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       * @param value The attackerTeam to set.
       * @return This builder for chaining.
       */
      public Builder setAttackerTeam(int value) {

        attackerTeam_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attacker_team = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackerTeam() {
        bitField0_ = (bitField0_ & ~0x08000000);
        attackerTeam_ = 0;
        onChanged();
        return this;
      }

      private int targetTeam_ ;
      /**
       * <code>optional uint32 target_team = 29;</code>
       * @return Whether the targetTeam field is set.
       */
      @java.lang.Override
      public boolean hasTargetTeam() {
        return ((bitField0_ & 0x10000000) != 0);
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       * @return The targetTeam.
       */
      @java.lang.Override
      public int getTargetTeam() {
        return targetTeam_;
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       * @param value The targetTeam to set.
       * @return This builder for chaining.
       */
      public Builder setTargetTeam(int value) {

        targetTeam_ = value;
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_team = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetTeam() {
        bitField0_ = (bitField0_ & ~0x10000000);
        targetTeam_ = 0;
        onChanged();
        return this;
      }

      private int obsWardsPlaced_ ;
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       * @return Whether the obsWardsPlaced field is set.
       */
      @java.lang.Override
      public boolean hasObsWardsPlaced() {
        return ((bitField0_ & 0x20000000) != 0);
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       * @return The obsWardsPlaced.
       */
      @java.lang.Override
      public int getObsWardsPlaced() {
        return obsWardsPlaced_;
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       * @param value The obsWardsPlaced to set.
       * @return This builder for chaining.
       */
      public Builder setObsWardsPlaced(int value) {

        obsWardsPlaced_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 obs_wards_placed = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearObsWardsPlaced() {
        bitField0_ = (bitField0_ & ~0x20000000);
        obsWardsPlaced_ = 0;
        onChanged();
        return this;
      }

      private int assistPlayer0_ ;
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       * @return Whether the assistPlayer0 field is set.
       */
      @java.lang.Override
      public boolean hasAssistPlayer0() {
        return ((bitField0_ & 0x40000000) != 0);
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       * @return The assistPlayer0.
       */
      @java.lang.Override
      public int getAssistPlayer0() {
        return assistPlayer0_;
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       * @param value The assistPlayer0 to set.
       * @return This builder for chaining.
       */
      public Builder setAssistPlayer0(int value) {

        assistPlayer0_ = value;
        bitField0_ |= 0x40000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player0 = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssistPlayer0() {
        bitField0_ = (bitField0_ & ~0x40000000);
        assistPlayer0_ = 0;
        onChanged();
        return this;
      }

      private int assistPlayer1_ ;
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       * @return Whether the assistPlayer1 field is set.
       */
      @java.lang.Override
      public boolean hasAssistPlayer1() {
        return ((bitField0_ & 0x80000000) != 0);
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       * @return The assistPlayer1.
       */
      @java.lang.Override
      public int getAssistPlayer1() {
        return assistPlayer1_;
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       * @param value The assistPlayer1 to set.
       * @return This builder for chaining.
       */
      public Builder setAssistPlayer1(int value) {

        assistPlayer1_ = value;
        bitField0_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player1 = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssistPlayer1() {
        bitField0_ = (bitField0_ & ~0x80000000);
        assistPlayer1_ = 0;
        onChanged();
        return this;
      }

      private int assistPlayer2_ ;
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       * @return Whether the assistPlayer2 field is set.
       */
      @java.lang.Override
      public boolean hasAssistPlayer2() {
        return ((bitField1_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       * @return The assistPlayer2.
       */
      @java.lang.Override
      public int getAssistPlayer2() {
        return assistPlayer2_;
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       * @param value The assistPlayer2 to set.
       * @return This builder for chaining.
       */
      public Builder setAssistPlayer2(int value) {

        assistPlayer2_ = value;
        bitField1_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player2 = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssistPlayer2() {
        bitField1_ = (bitField1_ & ~0x00000001);
        assistPlayer2_ = 0;
        onChanged();
        return this;
      }

      private int assistPlayer3_ ;
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       * @return Whether the assistPlayer3 field is set.
       */
      @java.lang.Override
      public boolean hasAssistPlayer3() {
        return ((bitField1_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       * @return The assistPlayer3.
       */
      @java.lang.Override
      public int getAssistPlayer3() {
        return assistPlayer3_;
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       * @param value The assistPlayer3 to set.
       * @return This builder for chaining.
       */
      public Builder setAssistPlayer3(int value) {

        assistPlayer3_ = value;
        bitField1_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 assist_player3 = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssistPlayer3() {
        bitField1_ = (bitField1_ & ~0x00000002);
        assistPlayer3_ = 0;
        onChanged();
        return this;
      }

      private int stackCount_ ;
      /**
       * <code>optional uint32 stack_count = 35;</code>
       * @return Whether the stackCount field is set.
       */
      @java.lang.Override
      public boolean hasStackCount() {
        return ((bitField1_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       * @return The stackCount.
       */
      @java.lang.Override
      public int getStackCount() {
        return stackCount_;
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       * @param value The stackCount to set.
       * @return This builder for chaining.
       */
      public Builder setStackCount(int value) {

        stackCount_ = value;
        bitField1_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stack_count = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearStackCount() {
        bitField1_ = (bitField1_ & ~0x00000004);
        stackCount_ = 0;
        onChanged();
        return this;
      }

      private boolean hiddenModifier_ ;
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       * @return Whether the hiddenModifier field is set.
       */
      @java.lang.Override
      public boolean hasHiddenModifier() {
        return ((bitField1_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       * @return The hiddenModifier.
       */
      @java.lang.Override
      public boolean getHiddenModifier() {
        return hiddenModifier_;
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       * @param value The hiddenModifier to set.
       * @return This builder for chaining.
       */
      public Builder setHiddenModifier(boolean value) {

        hiddenModifier_ = value;
        bitField1_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hidden_modifier = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearHiddenModifier() {
        bitField1_ = (bitField1_ & ~0x00000008);
        hiddenModifier_ = false;
        onChanged();
        return this;
      }

      private boolean isTargetBuilding_ ;
      /**
       * <code>optional bool is_target_building = 37;</code>
       * @return Whether the isTargetBuilding field is set.
       */
      @java.lang.Override
      public boolean hasIsTargetBuilding() {
        return ((bitField1_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bool is_target_building = 37;</code>
       * @return The isTargetBuilding.
       */
      @java.lang.Override
      public boolean getIsTargetBuilding() {
        return isTargetBuilding_;
      }
      /**
       * <code>optional bool is_target_building = 37;</code>
       * @param value The isTargetBuilding to set.
       * @return This builder for chaining.
       */
      public Builder setIsTargetBuilding(boolean value) {

        isTargetBuilding_ = value;
        bitField1_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_target_building = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsTargetBuilding() {
        bitField1_ = (bitField1_ & ~0x00000010);
        isTargetBuilding_ = false;
        onChanged();
        return this;
      }

      private int neutralCampType_ ;
      /**
       * <code>optional uint32 neutral_camp_type = 38;</code>
       * @return Whether the neutralCampType field is set.
       */
      @java.lang.Override
      public boolean hasNeutralCampType() {
        return ((bitField1_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 neutral_camp_type = 38;</code>
       * @return The neutralCampType.
       */
      @java.lang.Override
      public int getNeutralCampType() {
        return neutralCampType_;
      }
      /**
       * <code>optional uint32 neutral_camp_type = 38;</code>
       * @param value The neutralCampType to set.
       * @return This builder for chaining.
       */
      public Builder setNeutralCampType(int value) {

        neutralCampType_ = value;
        bitField1_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 neutral_camp_type = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearNeutralCampType() {
        bitField1_ = (bitField1_ & ~0x00000020);
        neutralCampType_ = 0;
        onChanged();
        return this;
      }

      private int runeType_ ;
      /**
       * <code>optional uint32 rune_type = 39;</code>
       * @return Whether the runeType field is set.
       */
      @java.lang.Override
      public boolean hasRuneType() {
        return ((bitField1_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 rune_type = 39;</code>
       * @return The runeType.
       */
      @java.lang.Override
      public int getRuneType() {
        return runeType_;
      }
      /**
       * <code>optional uint32 rune_type = 39;</code>
       * @param value The runeType to set.
       * @return This builder for chaining.
       */
      public Builder setRuneType(int value) {

        runeType_ = value;
        bitField1_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rune_type = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearRuneType() {
        bitField1_ = (bitField1_ & ~0x00000040);
        runeType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList assistPlayers_ = emptyIntList();
      private void ensureAssistPlayersIsMutable() {
        if (!assistPlayers_.isModifiable()) {
          assistPlayers_ = makeMutableCopy(assistPlayers_);
        }
        bitField1_ |= 0x00000080;
      }
      /**
       * <code>repeated int32 assist_players = 40;</code>
       * @return A list containing the assistPlayers.
       */
      public java.util.List<java.lang.Integer>
          getAssistPlayersList() {
        assistPlayers_.makeImmutable();
        return assistPlayers_;
      }
      /**
       * <code>repeated int32 assist_players = 40;</code>
       * @return The count of assistPlayers.
       */
      public int getAssistPlayersCount() {
        return assistPlayers_.size();
      }
      /**
       * <code>repeated int32 assist_players = 40;</code>
       * @param index The index of the element to return.
       * @return The assistPlayers at the given index.
       */
      public int getAssistPlayers(int index) {
        return assistPlayers_.getInt(index);
      }
      /**
       * <code>repeated int32 assist_players = 40;</code>
       * @param index The index to set the value at.
       * @param value The assistPlayers to set.
       * @return This builder for chaining.
       */
      public Builder setAssistPlayers(
          int index, int value) {

        ensureAssistPlayersIsMutable();
        assistPlayers_.setInt(index, value);
        bitField1_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 assist_players = 40;</code>
       * @param value The assistPlayers to add.
       * @return This builder for chaining.
       */
      public Builder addAssistPlayers(int value) {

        ensureAssistPlayersIsMutable();
        assistPlayers_.addInt(value);
        bitField1_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 assist_players = 40;</code>
       * @param values The assistPlayers to add.
       * @return This builder for chaining.
       */
      public Builder addAllAssistPlayers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAssistPlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, assistPlayers_);
        bitField1_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 assist_players = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssistPlayers() {
        assistPlayers_ = emptyIntList();
        bitField1_ = (bitField1_ & ~0x00000080);
        onChanged();
        return this;
      }

      private boolean isHealSave_ ;
      /**
       * <code>optional bool is_heal_save = 41;</code>
       * @return Whether the isHealSave field is set.
       */
      @java.lang.Override
      public boolean hasIsHealSave() {
        return ((bitField1_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool is_heal_save = 41;</code>
       * @return The isHealSave.
       */
      @java.lang.Override
      public boolean getIsHealSave() {
        return isHealSave_;
      }
      /**
       * <code>optional bool is_heal_save = 41;</code>
       * @param value The isHealSave to set.
       * @return This builder for chaining.
       */
      public Builder setIsHealSave(boolean value) {

        isHealSave_ = value;
        bitField1_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_heal_save = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsHealSave() {
        bitField1_ = (bitField1_ & ~0x00000100);
        isHealSave_ = false;
        onChanged();
        return this;
      }

      private boolean isUltimateAbility_ ;
      /**
       * <code>optional bool is_ultimate_ability = 42;</code>
       * @return Whether the isUltimateAbility field is set.
       */
      @java.lang.Override
      public boolean hasIsUltimateAbility() {
        return ((bitField1_ & 0x00000200) != 0);
      }
      /**
       * <code>optional bool is_ultimate_ability = 42;</code>
       * @return The isUltimateAbility.
       */
      @java.lang.Override
      public boolean getIsUltimateAbility() {
        return isUltimateAbility_;
      }
      /**
       * <code>optional bool is_ultimate_ability = 42;</code>
       * @param value The isUltimateAbility to set.
       * @return This builder for chaining.
       */
      public Builder setIsUltimateAbility(boolean value) {

        isUltimateAbility_ = value;
        bitField1_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_ultimate_ability = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsUltimateAbility() {
        bitField1_ = (bitField1_ & ~0x00000200);
        isUltimateAbility_ = false;
        onChanged();
        return this;
      }

      private int attackerHeroLevel_ ;
      /**
       * <code>optional uint32 attacker_hero_level = 43;</code>
       * @return Whether the attackerHeroLevel field is set.
       */
      @java.lang.Override
      public boolean hasAttackerHeroLevel() {
        return ((bitField1_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint32 attacker_hero_level = 43;</code>
       * @return The attackerHeroLevel.
       */
      @java.lang.Override
      public int getAttackerHeroLevel() {
        return attackerHeroLevel_;
      }
      /**
       * <code>optional uint32 attacker_hero_level = 43;</code>
       * @param value The attackerHeroLevel to set.
       * @return This builder for chaining.
       */
      public Builder setAttackerHeroLevel(int value) {

        attackerHeroLevel_ = value;
        bitField1_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attacker_hero_level = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackerHeroLevel() {
        bitField1_ = (bitField1_ & ~0x00000400);
        attackerHeroLevel_ = 0;
        onChanged();
        return this;
      }

      private int targetHeroLevel_ ;
      /**
       * <code>optional uint32 target_hero_level = 44;</code>
       * @return Whether the targetHeroLevel field is set.
       */
      @java.lang.Override
      public boolean hasTargetHeroLevel() {
        return ((bitField1_ & 0x00000800) != 0);
      }
      /**
       * <code>optional uint32 target_hero_level = 44;</code>
       * @return The targetHeroLevel.
       */
      @java.lang.Override
      public int getTargetHeroLevel() {
        return targetHeroLevel_;
      }
      /**
       * <code>optional uint32 target_hero_level = 44;</code>
       * @param value The targetHeroLevel to set.
       * @return This builder for chaining.
       */
      public Builder setTargetHeroLevel(int value) {

        targetHeroLevel_ = value;
        bitField1_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 target_hero_level = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetHeroLevel() {
        bitField1_ = (bitField1_ & ~0x00000800);
        targetHeroLevel_ = 0;
        onChanged();
        return this;
      }

      private int xpm_ ;
      /**
       * <code>optional uint32 xpm = 45;</code>
       * @return Whether the xpm field is set.
       */
      @java.lang.Override
      public boolean hasXpm() {
        return ((bitField1_ & 0x00001000) != 0);
      }
      /**
       * <code>optional uint32 xpm = 45;</code>
       * @return The xpm.
       */
      @java.lang.Override
      public int getXpm() {
        return xpm_;
      }
      /**
       * <code>optional uint32 xpm = 45;</code>
       * @param value The xpm to set.
       * @return This builder for chaining.
       */
      public Builder setXpm(int value) {

        xpm_ = value;
        bitField1_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 xpm = 45;</code>
       * @return This builder for chaining.
       */
      public Builder clearXpm() {
        bitField1_ = (bitField1_ & ~0x00001000);
        xpm_ = 0;
        onChanged();
        return this;
      }

      private int gpm_ ;
      /**
       * <code>optional uint32 gpm = 46;</code>
       * @return Whether the gpm field is set.
       */
      @java.lang.Override
      public boolean hasGpm() {
        return ((bitField1_ & 0x00002000) != 0);
      }
      /**
       * <code>optional uint32 gpm = 46;</code>
       * @return The gpm.
       */
      @java.lang.Override
      public int getGpm() {
        return gpm_;
      }
      /**
       * <code>optional uint32 gpm = 46;</code>
       * @param value The gpm to set.
       * @return This builder for chaining.
       */
      public Builder setGpm(int value) {

        gpm_ = value;
        bitField1_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 gpm = 46;</code>
       * @return This builder for chaining.
       */
      public Builder clearGpm() {
        bitField1_ = (bitField1_ & ~0x00002000);
        gpm_ = 0;
        onChanged();
        return this;
      }

      private int eventLocation_ ;
      /**
       * <code>optional uint32 event_location = 47;</code>
       * @return Whether the eventLocation field is set.
       */
      @java.lang.Override
      public boolean hasEventLocation() {
        return ((bitField1_ & 0x00004000) != 0);
      }
      /**
       * <code>optional uint32 event_location = 47;</code>
       * @return The eventLocation.
       */
      @java.lang.Override
      public int getEventLocation() {
        return eventLocation_;
      }
      /**
       * <code>optional uint32 event_location = 47;</code>
       * @param value The eventLocation to set.
       * @return This builder for chaining.
       */
      public Builder setEventLocation(int value) {

        eventLocation_ = value;
        bitField1_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_location = 47;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventLocation() {
        bitField1_ = (bitField1_ & ~0x00004000);
        eventLocation_ = 0;
        onChanged();
        return this;
      }

      private boolean targetIsSelf_ ;
      /**
       * <code>optional bool target_is_self = 48;</code>
       * @return Whether the targetIsSelf field is set.
       */
      @java.lang.Override
      public boolean hasTargetIsSelf() {
        return ((bitField1_ & 0x00008000) != 0);
      }
      /**
       * <code>optional bool target_is_self = 48;</code>
       * @return The targetIsSelf.
       */
      @java.lang.Override
      public boolean getTargetIsSelf() {
        return targetIsSelf_;
      }
      /**
       * <code>optional bool target_is_self = 48;</code>
       * @param value The targetIsSelf to set.
       * @return This builder for chaining.
       */
      public Builder setTargetIsSelf(boolean value) {

        targetIsSelf_ = value;
        bitField1_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool target_is_self = 48;</code>
       * @return This builder for chaining.
       */
      public Builder clearTargetIsSelf() {
        bitField1_ = (bitField1_ & ~0x00008000);
        targetIsSelf_ = false;
        onChanged();
        return this;
      }

      private int damageType_ ;
      /**
       * <code>optional uint32 damage_type = 49;</code>
       * @return Whether the damageType field is set.
       */
      @java.lang.Override
      public boolean hasDamageType() {
        return ((bitField1_ & 0x00010000) != 0);
      }
      /**
       * <code>optional uint32 damage_type = 49;</code>
       * @return The damageType.
       */
      @java.lang.Override
      public int getDamageType() {
        return damageType_;
      }
      /**
       * <code>optional uint32 damage_type = 49;</code>
       * @param value The damageType to set.
       * @return This builder for chaining.
       */
      public Builder setDamageType(int value) {

        damageType_ = value;
        bitField1_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage_type = 49;</code>
       * @return This builder for chaining.
       */
      public Builder clearDamageType() {
        bitField1_ = (bitField1_ & ~0x00010000);
        damageType_ = 0;
        onChanged();
        return this;
      }

      private boolean invisibilityModifier_ ;
      /**
       * <code>optional bool invisibility_modifier = 50;</code>
       * @return Whether the invisibilityModifier field is set.
       */
      @java.lang.Override
      public boolean hasInvisibilityModifier() {
        return ((bitField1_ & 0x00020000) != 0);
      }
      /**
       * <code>optional bool invisibility_modifier = 50;</code>
       * @return The invisibilityModifier.
       */
      @java.lang.Override
      public boolean getInvisibilityModifier() {
        return invisibilityModifier_;
      }
      /**
       * <code>optional bool invisibility_modifier = 50;</code>
       * @param value The invisibilityModifier to set.
       * @return This builder for chaining.
       */
      public Builder setInvisibilityModifier(boolean value) {

        invisibilityModifier_ = value;
        bitField1_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool invisibility_modifier = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearInvisibilityModifier() {
        bitField1_ = (bitField1_ & ~0x00020000);
        invisibilityModifier_ = false;
        onChanged();
        return this;
      }

      private int damageCategory_ ;
      /**
       * <code>optional uint32 damage_category = 51;</code>
       * @return Whether the damageCategory field is set.
       */
      @java.lang.Override
      public boolean hasDamageCategory() {
        return ((bitField1_ & 0x00040000) != 0);
      }
      /**
       * <code>optional uint32 damage_category = 51;</code>
       * @return The damageCategory.
       */
      @java.lang.Override
      public int getDamageCategory() {
        return damageCategory_;
      }
      /**
       * <code>optional uint32 damage_category = 51;</code>
       * @param value The damageCategory to set.
       * @return This builder for chaining.
       */
      public Builder setDamageCategory(int value) {

        damageCategory_ = value;
        bitField1_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage_category = 51;</code>
       * @return This builder for chaining.
       */
      public Builder clearDamageCategory() {
        bitField1_ = (bitField1_ & ~0x00040000);
        damageCategory_ = 0;
        onChanged();
        return this;
      }

      private int networth_ ;
      /**
       * <code>optional uint32 networth = 52;</code>
       * @return Whether the networth field is set.
       */
      @java.lang.Override
      public boolean hasNetworth() {
        return ((bitField1_ & 0x00080000) != 0);
      }
      /**
       * <code>optional uint32 networth = 52;</code>
       * @return The networth.
       */
      @java.lang.Override
      public int getNetworth() {
        return networth_;
      }
      /**
       * <code>optional uint32 networth = 52;</code>
       * @param value The networth to set.
       * @return This builder for chaining.
       */
      public Builder setNetworth(int value) {

        networth_ = value;
        bitField1_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 networth = 52;</code>
       * @return This builder for chaining.
       */
      public Builder clearNetworth() {
        bitField1_ = (bitField1_ & ~0x00080000);
        networth_ = 0;
        onChanged();
        return this;
      }

      private int buildingType_ ;
      /**
       * <code>optional uint32 building_type = 53;</code>
       * @return Whether the buildingType field is set.
       */
      @java.lang.Override
      public boolean hasBuildingType() {
        return ((bitField1_ & 0x00100000) != 0);
      }
      /**
       * <code>optional uint32 building_type = 53;</code>
       * @return The buildingType.
       */
      @java.lang.Override
      public int getBuildingType() {
        return buildingType_;
      }
      /**
       * <code>optional uint32 building_type = 53;</code>
       * @param value The buildingType to set.
       * @return This builder for chaining.
       */
      public Builder setBuildingType(int value) {

        buildingType_ = value;
        bitField1_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 building_type = 53;</code>
       * @return This builder for chaining.
       */
      public Builder clearBuildingType() {
        bitField1_ = (bitField1_ & ~0x00100000);
        buildingType_ = 0;
        onChanged();
        return this;
      }

      private float modifierElapsedDuration_ ;
      /**
       * <code>optional float modifier_elapsed_duration = 54;</code>
       * @return Whether the modifierElapsedDuration field is set.
       */
      @java.lang.Override
      public boolean hasModifierElapsedDuration() {
        return ((bitField1_ & 0x00200000) != 0);
      }
      /**
       * <code>optional float modifier_elapsed_duration = 54;</code>
       * @return The modifierElapsedDuration.
       */
      @java.lang.Override
      public float getModifierElapsedDuration() {
        return modifierElapsedDuration_;
      }
      /**
       * <code>optional float modifier_elapsed_duration = 54;</code>
       * @param value The modifierElapsedDuration to set.
       * @return This builder for chaining.
       */
      public Builder setModifierElapsedDuration(float value) {

        modifierElapsedDuration_ = value;
        bitField1_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float modifier_elapsed_duration = 54;</code>
       * @return This builder for chaining.
       */
      public Builder clearModifierElapsedDuration() {
        bitField1_ = (bitField1_ & ~0x00200000);
        modifierElapsedDuration_ = 0F;
        onChanged();
        return this;
      }

      private boolean silenceModifier_ ;
      /**
       * <code>optional bool silence_modifier = 55;</code>
       * @return Whether the silenceModifier field is set.
       */
      @java.lang.Override
      public boolean hasSilenceModifier() {
        return ((bitField1_ & 0x00400000) != 0);
      }
      /**
       * <code>optional bool silence_modifier = 55;</code>
       * @return The silenceModifier.
       */
      @java.lang.Override
      public boolean getSilenceModifier() {
        return silenceModifier_;
      }
      /**
       * <code>optional bool silence_modifier = 55;</code>
       * @param value The silenceModifier to set.
       * @return This builder for chaining.
       */
      public Builder setSilenceModifier(boolean value) {

        silenceModifier_ = value;
        bitField1_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool silence_modifier = 55;</code>
       * @return This builder for chaining.
       */
      public Builder clearSilenceModifier() {
        bitField1_ = (bitField1_ & ~0x00400000);
        silenceModifier_ = false;
        onChanged();
        return this;
      }

      private boolean healFromLifesteal_ ;
      /**
       * <code>optional bool heal_from_lifesteal = 56;</code>
       * @return Whether the healFromLifesteal field is set.
       */
      @java.lang.Override
      public boolean hasHealFromLifesteal() {
        return ((bitField1_ & 0x00800000) != 0);
      }
      /**
       * <code>optional bool heal_from_lifesteal = 56;</code>
       * @return The healFromLifesteal.
       */
      @java.lang.Override
      public boolean getHealFromLifesteal() {
        return healFromLifesteal_;
      }
      /**
       * <code>optional bool heal_from_lifesteal = 56;</code>
       * @param value The healFromLifesteal to set.
       * @return This builder for chaining.
       */
      public Builder setHealFromLifesteal(boolean value) {

        healFromLifesteal_ = value;
        bitField1_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool heal_from_lifesteal = 56;</code>
       * @return This builder for chaining.
       */
      public Builder clearHealFromLifesteal() {
        bitField1_ = (bitField1_ & ~0x00800000);
        healFromLifesteal_ = false;
        onChanged();
        return this;
      }

      private boolean modifierPurged_ ;
      /**
       * <code>optional bool modifier_purged = 57;</code>
       * @return Whether the modifierPurged field is set.
       */
      @java.lang.Override
      public boolean hasModifierPurged() {
        return ((bitField1_ & 0x01000000) != 0);
      }
      /**
       * <code>optional bool modifier_purged = 57;</code>
       * @return The modifierPurged.
       */
      @java.lang.Override
      public boolean getModifierPurged() {
        return modifierPurged_;
      }
      /**
       * <code>optional bool modifier_purged = 57;</code>
       * @param value The modifierPurged to set.
       * @return This builder for chaining.
       */
      public Builder setModifierPurged(boolean value) {

        modifierPurged_ = value;
        bitField1_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool modifier_purged = 57;</code>
       * @return This builder for chaining.
       */
      public Builder clearModifierPurged() {
        bitField1_ = (bitField1_ & ~0x01000000);
        modifierPurged_ = false;
        onChanged();
        return this;
      }

      private boolean spellEvaded_ ;
      /**
       * <code>optional bool spell_evaded = 58;</code>
       * @return Whether the spellEvaded field is set.
       */
      @java.lang.Override
      public boolean hasSpellEvaded() {
        return ((bitField1_ & 0x02000000) != 0);
      }
      /**
       * <code>optional bool spell_evaded = 58;</code>
       * @return The spellEvaded.
       */
      @java.lang.Override
      public boolean getSpellEvaded() {
        return spellEvaded_;
      }
      /**
       * <code>optional bool spell_evaded = 58;</code>
       * @param value The spellEvaded to set.
       * @return This builder for chaining.
       */
      public Builder setSpellEvaded(boolean value) {

        spellEvaded_ = value;
        bitField1_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool spell_evaded = 58;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpellEvaded() {
        bitField1_ = (bitField1_ & ~0x02000000);
        spellEvaded_ = false;
        onChanged();
        return this;
      }

      private boolean motionControllerModifier_ ;
      /**
       * <code>optional bool motion_controller_modifier = 59;</code>
       * @return Whether the motionControllerModifier field is set.
       */
      @java.lang.Override
      public boolean hasMotionControllerModifier() {
        return ((bitField1_ & 0x04000000) != 0);
      }
      /**
       * <code>optional bool motion_controller_modifier = 59;</code>
       * @return The motionControllerModifier.
       */
      @java.lang.Override
      public boolean getMotionControllerModifier() {
        return motionControllerModifier_;
      }
      /**
       * <code>optional bool motion_controller_modifier = 59;</code>
       * @param value The motionControllerModifier to set.
       * @return This builder for chaining.
       */
      public Builder setMotionControllerModifier(boolean value) {

        motionControllerModifier_ = value;
        bitField1_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool motion_controller_modifier = 59;</code>
       * @return This builder for chaining.
       */
      public Builder clearMotionControllerModifier() {
        bitField1_ = (bitField1_ & ~0x04000000);
        motionControllerModifier_ = false;
        onChanged();
        return this;
      }

      private boolean longRangeKill_ ;
      /**
       * <code>optional bool long_range_kill = 60;</code>
       * @return Whether the longRangeKill field is set.
       */
      @java.lang.Override
      public boolean hasLongRangeKill() {
        return ((bitField1_ & 0x08000000) != 0);
      }
      /**
       * <code>optional bool long_range_kill = 60;</code>
       * @return The longRangeKill.
       */
      @java.lang.Override
      public boolean getLongRangeKill() {
        return longRangeKill_;
      }
      /**
       * <code>optional bool long_range_kill = 60;</code>
       * @param value The longRangeKill to set.
       * @return This builder for chaining.
       */
      public Builder setLongRangeKill(boolean value) {

        longRangeKill_ = value;
        bitField1_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool long_range_kill = 60;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongRangeKill() {
        bitField1_ = (bitField1_ & ~0x08000000);
        longRangeKill_ = false;
        onChanged();
        return this;
      }

      private int modifierPurgeAbility_ ;
      /**
       * <code>optional uint32 modifier_purge_ability = 61;</code>
       * @return Whether the modifierPurgeAbility field is set.
       */
      @java.lang.Override
      public boolean hasModifierPurgeAbility() {
        return ((bitField1_ & 0x10000000) != 0);
      }
      /**
       * <code>optional uint32 modifier_purge_ability = 61;</code>
       * @return The modifierPurgeAbility.
       */
      @java.lang.Override
      public int getModifierPurgeAbility() {
        return modifierPurgeAbility_;
      }
      /**
       * <code>optional uint32 modifier_purge_ability = 61;</code>
       * @param value The modifierPurgeAbility to set.
       * @return This builder for chaining.
       */
      public Builder setModifierPurgeAbility(int value) {

        modifierPurgeAbility_ = value;
        bitField1_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 modifier_purge_ability = 61;</code>
       * @return This builder for chaining.
       */
      public Builder clearModifierPurgeAbility() {
        bitField1_ = (bitField1_ & ~0x10000000);
        modifierPurgeAbility_ = 0;
        onChanged();
        return this;
      }

      private int modifierPurgeNpc_ ;
      /**
       * <code>optional uint32 modifier_purge_npc = 62;</code>
       * @return Whether the modifierPurgeNpc field is set.
       */
      @java.lang.Override
      public boolean hasModifierPurgeNpc() {
        return ((bitField1_ & 0x20000000) != 0);
      }
      /**
       * <code>optional uint32 modifier_purge_npc = 62;</code>
       * @return The modifierPurgeNpc.
       */
      @java.lang.Override
      public int getModifierPurgeNpc() {
        return modifierPurgeNpc_;
      }
      /**
       * <code>optional uint32 modifier_purge_npc = 62;</code>
       * @param value The modifierPurgeNpc to set.
       * @return This builder for chaining.
       */
      public Builder setModifierPurgeNpc(int value) {

        modifierPurgeNpc_ = value;
        bitField1_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 modifier_purge_npc = 62;</code>
       * @return This builder for chaining.
       */
      public Builder clearModifierPurgeNpc() {
        bitField1_ = (bitField1_ & ~0x20000000);
        modifierPurgeNpc_ = 0;
        onChanged();
        return this;
      }

      private boolean rootModifier_ ;
      /**
       * <code>optional bool root_modifier = 63;</code>
       * @return Whether the rootModifier field is set.
       */
      @java.lang.Override
      public boolean hasRootModifier() {
        return ((bitField1_ & 0x40000000) != 0);
      }
      /**
       * <code>optional bool root_modifier = 63;</code>
       * @return The rootModifier.
       */
      @java.lang.Override
      public boolean getRootModifier() {
        return rootModifier_;
      }
      /**
       * <code>optional bool root_modifier = 63;</code>
       * @param value The rootModifier to set.
       * @return This builder for chaining.
       */
      public Builder setRootModifier(boolean value) {

        rootModifier_ = value;
        bitField1_ |= 0x40000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool root_modifier = 63;</code>
       * @return This builder for chaining.
       */
      public Builder clearRootModifier() {
        bitField1_ = (bitField1_ & ~0x40000000);
        rootModifier_ = false;
        onChanged();
        return this;
      }

      private int totalUnitDeathCount_ ;
      /**
       * <code>optional uint32 total_unit_death_count = 64;</code>
       * @return Whether the totalUnitDeathCount field is set.
       */
      @java.lang.Override
      public boolean hasTotalUnitDeathCount() {
        return ((bitField1_ & 0x80000000) != 0);
      }
      /**
       * <code>optional uint32 total_unit_death_count = 64;</code>
       * @return The totalUnitDeathCount.
       */
      @java.lang.Override
      public int getTotalUnitDeathCount() {
        return totalUnitDeathCount_;
      }
      /**
       * <code>optional uint32 total_unit_death_count = 64;</code>
       * @param value The totalUnitDeathCount to set.
       * @return This builder for chaining.
       */
      public Builder setTotalUnitDeathCount(int value) {

        totalUnitDeathCount_ = value;
        bitField1_ |= 0x80000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total_unit_death_count = 64;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalUnitDeathCount() {
        bitField1_ = (bitField1_ & ~0x80000000);
        totalUnitDeathCount_ = 0;
        onChanged();
        return this;
      }

      private boolean auraModifier_ ;
      /**
       * <code>optional bool aura_modifier = 65;</code>
       * @return Whether the auraModifier field is set.
       */
      @java.lang.Override
      public boolean hasAuraModifier() {
        return ((bitField2_ & 0x00000001) != 0);
      }
      /**
       * <code>optional bool aura_modifier = 65;</code>
       * @return The auraModifier.
       */
      @java.lang.Override
      public boolean getAuraModifier() {
        return auraModifier_;
      }
      /**
       * <code>optional bool aura_modifier = 65;</code>
       * @param value The auraModifier to set.
       * @return This builder for chaining.
       */
      public Builder setAuraModifier(boolean value) {

        auraModifier_ = value;
        bitField2_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool aura_modifier = 65;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuraModifier() {
        bitField2_ = (bitField2_ & ~0x00000001);
        auraModifier_ = false;
        onChanged();
        return this;
      }

      private boolean armorDebuffModifier_ ;
      /**
       * <code>optional bool armor_debuff_modifier = 66;</code>
       * @return Whether the armorDebuffModifier field is set.
       */
      @java.lang.Override
      public boolean hasArmorDebuffModifier() {
        return ((bitField2_ & 0x00000002) != 0);
      }
      /**
       * <code>optional bool armor_debuff_modifier = 66;</code>
       * @return The armorDebuffModifier.
       */
      @java.lang.Override
      public boolean getArmorDebuffModifier() {
        return armorDebuffModifier_;
      }
      /**
       * <code>optional bool armor_debuff_modifier = 66;</code>
       * @param value The armorDebuffModifier to set.
       * @return This builder for chaining.
       */
      public Builder setArmorDebuffModifier(boolean value) {

        armorDebuffModifier_ = value;
        bitField2_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool armor_debuff_modifier = 66;</code>
       * @return This builder for chaining.
       */
      public Builder clearArmorDebuffModifier() {
        bitField2_ = (bitField2_ & ~0x00000002);
        armorDebuffModifier_ = false;
        onChanged();
        return this;
      }

      private boolean noPhysicalDamageModifier_ ;
      /**
       * <code>optional bool no_physical_damage_modifier = 67;</code>
       * @return Whether the noPhysicalDamageModifier field is set.
       */
      @java.lang.Override
      public boolean hasNoPhysicalDamageModifier() {
        return ((bitField2_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool no_physical_damage_modifier = 67;</code>
       * @return The noPhysicalDamageModifier.
       */
      @java.lang.Override
      public boolean getNoPhysicalDamageModifier() {
        return noPhysicalDamageModifier_;
      }
      /**
       * <code>optional bool no_physical_damage_modifier = 67;</code>
       * @param value The noPhysicalDamageModifier to set.
       * @return This builder for chaining.
       */
      public Builder setNoPhysicalDamageModifier(boolean value) {

        noPhysicalDamageModifier_ = value;
        bitField2_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool no_physical_damage_modifier = 67;</code>
       * @return This builder for chaining.
       */
      public Builder clearNoPhysicalDamageModifier() {
        bitField2_ = (bitField2_ & ~0x00000004);
        noPhysicalDamageModifier_ = false;
        onChanged();
        return this;
      }

      private int modifierAbility_ ;
      /**
       * <code>optional uint32 modifier_ability = 68;</code>
       * @return Whether the modifierAbility field is set.
       */
      @java.lang.Override
      public boolean hasModifierAbility() {
        return ((bitField2_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 modifier_ability = 68;</code>
       * @return The modifierAbility.
       */
      @java.lang.Override
      public int getModifierAbility() {
        return modifierAbility_;
      }
      /**
       * <code>optional uint32 modifier_ability = 68;</code>
       * @param value The modifierAbility to set.
       * @return This builder for chaining.
       */
      public Builder setModifierAbility(int value) {

        modifierAbility_ = value;
        bitField2_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 modifier_ability = 68;</code>
       * @return This builder for chaining.
       */
      public Builder clearModifierAbility() {
        bitField2_ = (bitField2_ & ~0x00000008);
        modifierAbility_ = 0;
        onChanged();
        return this;
      }

      private boolean modifierHidden_ ;
      /**
       * <code>optional bool modifier_hidden = 69;</code>
       * @return Whether the modifierHidden field is set.
       */
      @java.lang.Override
      public boolean hasModifierHidden() {
        return ((bitField2_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bool modifier_hidden = 69;</code>
       * @return The modifierHidden.
       */
      @java.lang.Override
      public boolean getModifierHidden() {
        return modifierHidden_;
      }
      /**
       * <code>optional bool modifier_hidden = 69;</code>
       * @param value The modifierHidden to set.
       * @return This builder for chaining.
       */
      public Builder setModifierHidden(boolean value) {

        modifierHidden_ = value;
        bitField2_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool modifier_hidden = 69;</code>
       * @return This builder for chaining.
       */
      public Builder clearModifierHidden() {
        bitField2_ = (bitField2_ & ~0x00000010);
        modifierHidden_ = false;
        onChanged();
        return this;
      }

      private boolean inflictorIsStolenAbility_ ;
      /**
       * <code>optional bool inflictor_is_stolen_ability = 70;</code>
       * @return Whether the inflictorIsStolenAbility field is set.
       */
      @java.lang.Override
      public boolean hasInflictorIsStolenAbility() {
        return ((bitField2_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool inflictor_is_stolen_ability = 70;</code>
       * @return The inflictorIsStolenAbility.
       */
      @java.lang.Override
      public boolean getInflictorIsStolenAbility() {
        return inflictorIsStolenAbility_;
      }
      /**
       * <code>optional bool inflictor_is_stolen_ability = 70;</code>
       * @param value The inflictorIsStolenAbility to set.
       * @return This builder for chaining.
       */
      public Builder setInflictorIsStolenAbility(boolean value) {

        inflictorIsStolenAbility_ = value;
        bitField2_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool inflictor_is_stolen_ability = 70;</code>
       * @return This builder for chaining.
       */
      public Builder clearInflictorIsStolenAbility() {
        bitField2_ = (bitField2_ & ~0x00000020);
        inflictorIsStolenAbility_ = false;
        onChanged();
        return this;
      }

      private int killEaterEvent_ ;
      /**
       * <code>optional uint32 kill_eater_event = 71;</code>
       * @return Whether the killEaterEvent field is set.
       */
      @java.lang.Override
      public boolean hasKillEaterEvent() {
        return ((bitField2_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint32 kill_eater_event = 71;</code>
       * @return The killEaterEvent.
       */
      @java.lang.Override
      public int getKillEaterEvent() {
        return killEaterEvent_;
      }
      /**
       * <code>optional uint32 kill_eater_event = 71;</code>
       * @param value The killEaterEvent to set.
       * @return This builder for chaining.
       */
      public Builder setKillEaterEvent(int value) {

        killEaterEvent_ = value;
        bitField2_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 kill_eater_event = 71;</code>
       * @return This builder for chaining.
       */
      public Builder clearKillEaterEvent() {
        bitField2_ = (bitField2_ & ~0x00000040);
        killEaterEvent_ = 0;
        onChanged();
        return this;
      }

      private int unitStatusLabel_ ;
      /**
       * <code>optional uint32 unit_status_label = 72;</code>
       * @return Whether the unitStatusLabel field is set.
       */
      @java.lang.Override
      public boolean hasUnitStatusLabel() {
        return ((bitField2_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 unit_status_label = 72;</code>
       * @return The unitStatusLabel.
       */
      @java.lang.Override
      public int getUnitStatusLabel() {
        return unitStatusLabel_;
      }
      /**
       * <code>optional uint32 unit_status_label = 72;</code>
       * @param value The unitStatusLabel to set.
       * @return This builder for chaining.
       */
      public Builder setUnitStatusLabel(int value) {

        unitStatusLabel_ = value;
        bitField2_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 unit_status_label = 72;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnitStatusLabel() {
        bitField2_ = (bitField2_ & ~0x00000080);
        unitStatusLabel_ = 0;
        onChanged();
        return this;
      }

      private boolean spellGeneratedAttack_ ;
      /**
       * <code>optional bool spell_generated_attack = 73;</code>
       * @return Whether the spellGeneratedAttack field is set.
       */
      @java.lang.Override
      public boolean hasSpellGeneratedAttack() {
        return ((bitField2_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool spell_generated_attack = 73;</code>
       * @return The spellGeneratedAttack.
       */
      @java.lang.Override
      public boolean getSpellGeneratedAttack() {
        return spellGeneratedAttack_;
      }
      /**
       * <code>optional bool spell_generated_attack = 73;</code>
       * @param value The spellGeneratedAttack to set.
       * @return This builder for chaining.
       */
      public Builder setSpellGeneratedAttack(boolean value) {

        spellGeneratedAttack_ = value;
        bitField2_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool spell_generated_attack = 73;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpellGeneratedAttack() {
        bitField2_ = (bitField2_ & ~0x00000100);
        spellGeneratedAttack_ = false;
        onChanged();
        return this;
      }

      private boolean atNightTime_ ;
      /**
       * <code>optional bool at_night_time = 74;</code>
       * @return Whether the atNightTime field is set.
       */
      @java.lang.Override
      public boolean hasAtNightTime() {
        return ((bitField2_ & 0x00000200) != 0);
      }
      /**
       * <code>optional bool at_night_time = 74;</code>
       * @return The atNightTime.
       */
      @java.lang.Override
      public boolean getAtNightTime() {
        return atNightTime_;
      }
      /**
       * <code>optional bool at_night_time = 74;</code>
       * @param value The atNightTime to set.
       * @return This builder for chaining.
       */
      public Builder setAtNightTime(boolean value) {

        atNightTime_ = value;
        bitField2_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool at_night_time = 74;</code>
       * @return This builder for chaining.
       */
      public Builder clearAtNightTime() {
        bitField2_ = (bitField2_ & ~0x00000200);
        atNightTime_ = false;
        onChanged();
        return this;
      }

      private boolean attackerHasScepter_ ;
      /**
       * <code>optional bool attacker_has_scepter = 75;</code>
       * @return Whether the attackerHasScepter field is set.
       */
      @java.lang.Override
      public boolean hasAttackerHasScepter() {
        return ((bitField2_ & 0x00000400) != 0);
      }
      /**
       * <code>optional bool attacker_has_scepter = 75;</code>
       * @return The attackerHasScepter.
       */
      @java.lang.Override
      public boolean getAttackerHasScepter() {
        return attackerHasScepter_;
      }
      /**
       * <code>optional bool attacker_has_scepter = 75;</code>
       * @param value The attackerHasScepter to set.
       * @return This builder for chaining.
       */
      public Builder setAttackerHasScepter(boolean value) {

        attackerHasScepter_ = value;
        bitField2_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool attacker_has_scepter = 75;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackerHasScepter() {
        bitField2_ = (bitField2_ & ~0x00000400);
        attackerHasScepter_ = false;
        onChanged();
        return this;
      }

      private int neutralCampTeam_ ;
      /**
       * <code>optional uint32 neutral_camp_team = 76;</code>
       * @return Whether the neutralCampTeam field is set.
       */
      @java.lang.Override
      public boolean hasNeutralCampTeam() {
        return ((bitField2_ & 0x00000800) != 0);
      }
      /**
       * <code>optional uint32 neutral_camp_team = 76;</code>
       * @return The neutralCampTeam.
       */
      @java.lang.Override
      public int getNeutralCampTeam() {
        return neutralCampTeam_;
      }
      /**
       * <code>optional uint32 neutral_camp_team = 76;</code>
       * @param value The neutralCampTeam to set.
       * @return This builder for chaining.
       */
      public Builder setNeutralCampTeam(int value) {

        neutralCampTeam_ = value;
        bitField2_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 neutral_camp_team = 76;</code>
       * @return This builder for chaining.
       */
      public Builder clearNeutralCampTeam() {
        bitField2_ = (bitField2_ & ~0x00000800);
        neutralCampTeam_ = 0;
        onChanged();
        return this;
      }

      private float regeneratedHealth_ ;
      /**
       * <code>optional float regenerated_health = 77;</code>
       * @return Whether the regeneratedHealth field is set.
       */
      @java.lang.Override
      public boolean hasRegeneratedHealth() {
        return ((bitField2_ & 0x00001000) != 0);
      }
      /**
       * <code>optional float regenerated_health = 77;</code>
       * @return The regeneratedHealth.
       */
      @java.lang.Override
      public float getRegeneratedHealth() {
        return regeneratedHealth_;
      }
      /**
       * <code>optional float regenerated_health = 77;</code>
       * @param value The regeneratedHealth to set.
       * @return This builder for chaining.
       */
      public Builder setRegeneratedHealth(float value) {

        regeneratedHealth_ = value;
        bitField2_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float regenerated_health = 77;</code>
       * @return This builder for chaining.
       */
      public Builder clearRegeneratedHealth() {
        bitField2_ = (bitField2_ & ~0x00001000);
        regeneratedHealth_ = 0F;
        onChanged();
        return this;
      }

      private boolean willReincarnate_ ;
      /**
       * <code>optional bool will_reincarnate = 78;</code>
       * @return Whether the willReincarnate field is set.
       */
      @java.lang.Override
      public boolean hasWillReincarnate() {
        return ((bitField2_ & 0x00002000) != 0);
      }
      /**
       * <code>optional bool will_reincarnate = 78;</code>
       * @return The willReincarnate.
       */
      @java.lang.Override
      public boolean getWillReincarnate() {
        return willReincarnate_;
      }
      /**
       * <code>optional bool will_reincarnate = 78;</code>
       * @param value The willReincarnate to set.
       * @return This builder for chaining.
       */
      public Builder setWillReincarnate(boolean value) {

        willReincarnate_ = value;
        bitField2_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool will_reincarnate = 78;</code>
       * @return This builder for chaining.
       */
      public Builder clearWillReincarnate() {
        bitField2_ = (bitField2_ & ~0x00002000);
        willReincarnate_ = false;
        onChanged();
        return this;
      }

      private boolean usesCharges_ ;
      /**
       * <code>optional bool uses_charges = 79;</code>
       * @return Whether the usesCharges field is set.
       */
      @java.lang.Override
      public boolean hasUsesCharges() {
        return ((bitField2_ & 0x00004000) != 0);
      }
      /**
       * <code>optional bool uses_charges = 79;</code>
       * @return The usesCharges.
       */
      @java.lang.Override
      public boolean getUsesCharges() {
        return usesCharges_;
      }
      /**
       * <code>optional bool uses_charges = 79;</code>
       * @param value The usesCharges to set.
       * @return This builder for chaining.
       */
      public Builder setUsesCharges(boolean value) {

        usesCharges_ = value;
        bitField2_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool uses_charges = 79;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsesCharges() {
        bitField2_ = (bitField2_ & ~0x00004000);
        usesCharges_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dota2.CMsgDOTACombatLogEntry)
    }

    // @@protoc_insertion_point(class_scope:dota2.CMsgDOTACombatLogEntry)
    private static final com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry();
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgDOTACombatLogEntry>
        PARSER = new com.google.protobuf.AbstractParser<CMsgDOTACombatLogEntry>() {
      @java.lang.Override
      public CMsgDOTACombatLogEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgDOTACombatLogEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTACombatLogEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgDOTACombatLogEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CMsgPendingEventAwardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dota2.CMsgPendingEventAward)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .dota2.EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
     * @return Whether the eventId field is set.
     */
    boolean hasEventId();
    /**
     * <code>optional .dota2.EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
     * @return The eventId.
     */
    com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent getEventId();

    /**
     * <code>optional uint32 action_id = 2;</code>
     * @return Whether the actionId field is set.
     */
    boolean hasActionId();
    /**
     * <code>optional uint32 action_id = 2;</code>
     * @return The actionId.
     */
    int getActionId();

    /**
     * <code>optional uint32 num_to_grant = 3;</code>
     * @return Whether the numToGrant field is set.
     */
    boolean hasNumToGrant();
    /**
     * <code>optional uint32 num_to_grant = 3;</code>
     * @return The numToGrant.
     */
    int getNumToGrant();

    /**
     * <code>optional .dota2.EEventActionScoreMode score_mode = 4 [default = k_eEventActionScoreMode_Add];</code>
     * @return Whether the scoreMode field is set.
     */
    boolean hasScoreMode();
    /**
     * <code>optional .dota2.EEventActionScoreMode score_mode = 4 [default = k_eEventActionScoreMode_Add];</code>
     * @return The scoreMode.
     */
    com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode getScoreMode();

    /**
     * <code>optional uint32 audit_action = 5;</code>
     * @return Whether the auditAction field is set.
     */
    boolean hasAuditAction();
    /**
     * <code>optional uint32 audit_action = 5;</code>
     * @return The auditAction.
     */
    int getAuditAction();

    /**
     * <code>optional uint64 audit_data = 6;</code>
     * @return Whether the auditData field is set.
     */
    boolean hasAuditData();
    /**
     * <code>optional uint64 audit_data = 6;</code>
     * @return The auditData.
     */
    long getAuditData();
  }
  /**
   * Protobuf type {@code dota2.CMsgPendingEventAward}
   */
  public static final class CMsgPendingEventAward extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dota2.CMsgPendingEventAward)
      CMsgPendingEventAwardOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        CMsgPendingEventAward.class.getName());
    }
    // Use CMsgPendingEventAward.newBuilder() to construct.
    private CMsgPendingEventAward(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CMsgPendingEventAward() {
      eventId_ = 0;
      scoreMode_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgPendingEventAward_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgPendingEventAward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward.Builder.class);
    }

    private int bitField0_;
    public static final int EVENT_ID_FIELD_NUMBER = 1;
    private int eventId_ = 0;
    /**
     * <code>optional .dota2.EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
     * @return Whether the eventId field is set.
     */
    @java.lang.Override public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .dota2.EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
     * @return The eventId.
     */
    @java.lang.Override public com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent getEventId() {
      com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent result = com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent.forNumber(eventId_);
      return result == null ? com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent.EVENT_ID_NONE : result;
    }

    public static final int ACTION_ID_FIELD_NUMBER = 2;
    private int actionId_ = 0;
    /**
     * <code>optional uint32 action_id = 2;</code>
     * @return Whether the actionId field is set.
     */
    @java.lang.Override
    public boolean hasActionId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 action_id = 2;</code>
     * @return The actionId.
     */
    @java.lang.Override
    public int getActionId() {
      return actionId_;
    }

    public static final int NUM_TO_GRANT_FIELD_NUMBER = 3;
    private int numToGrant_ = 0;
    /**
     * <code>optional uint32 num_to_grant = 3;</code>
     * @return Whether the numToGrant field is set.
     */
    @java.lang.Override
    public boolean hasNumToGrant() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 num_to_grant = 3;</code>
     * @return The numToGrant.
     */
    @java.lang.Override
    public int getNumToGrant() {
      return numToGrant_;
    }

    public static final int SCORE_MODE_FIELD_NUMBER = 4;
    private int scoreMode_ = 0;
    /**
     * <code>optional .dota2.EEventActionScoreMode score_mode = 4 [default = k_eEventActionScoreMode_Add];</code>
     * @return Whether the scoreMode field is set.
     */
    @java.lang.Override public boolean hasScoreMode() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .dota2.EEventActionScoreMode score_mode = 4 [default = k_eEventActionScoreMode_Add];</code>
     * @return The scoreMode.
     */
    @java.lang.Override public com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode getScoreMode() {
      com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode result = com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode.forNumber(scoreMode_);
      return result == null ? com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode.k_eEventActionScoreMode_Add : result;
    }

    public static final int AUDIT_ACTION_FIELD_NUMBER = 5;
    private int auditAction_ = 0;
    /**
     * <code>optional uint32 audit_action = 5;</code>
     * @return Whether the auditAction field is set.
     */
    @java.lang.Override
    public boolean hasAuditAction() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 audit_action = 5;</code>
     * @return The auditAction.
     */
    @java.lang.Override
    public int getAuditAction() {
      return auditAction_;
    }

    public static final int AUDIT_DATA_FIELD_NUMBER = 6;
    private long auditData_ = 0L;
    /**
     * <code>optional uint64 audit_data = 6;</code>
     * @return Whether the auditData field is set.
     */
    @java.lang.Override
    public boolean hasAuditData() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint64 audit_data = 6;</code>
     * @return The auditData.
     */
    @java.lang.Override
    public long getAuditData() {
      return auditData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, actionId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, numToGrant_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(4, scoreMode_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, auditAction_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt64(6, auditData_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, actionId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, numToGrant_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, scoreMode_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, auditAction_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, auditData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward other = (com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward) obj;

      if (hasEventId() != other.hasEventId()) return false;
      if (hasEventId()) {
        if (eventId_ != other.eventId_) return false;
      }
      if (hasActionId() != other.hasActionId()) return false;
      if (hasActionId()) {
        if (getActionId()
            != other.getActionId()) return false;
      }
      if (hasNumToGrant() != other.hasNumToGrant()) return false;
      if (hasNumToGrant()) {
        if (getNumToGrant()
            != other.getNumToGrant()) return false;
      }
      if (hasScoreMode() != other.hasScoreMode()) return false;
      if (hasScoreMode()) {
        if (scoreMode_ != other.scoreMode_) return false;
      }
      if (hasAuditAction() != other.hasAuditAction()) return false;
      if (hasAuditAction()) {
        if (getAuditAction()
            != other.getAuditAction()) return false;
      }
      if (hasAuditData() != other.hasAuditData()) return false;
      if (hasAuditData()) {
        if (getAuditData()
            != other.getAuditData()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEventId()) {
        hash = (37 * hash) + EVENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + eventId_;
      }
      if (hasActionId()) {
        hash = (37 * hash) + ACTION_ID_FIELD_NUMBER;
        hash = (53 * hash) + getActionId();
      }
      if (hasNumToGrant()) {
        hash = (37 * hash) + NUM_TO_GRANT_FIELD_NUMBER;
        hash = (53 * hash) + getNumToGrant();
      }
      if (hasScoreMode()) {
        hash = (37 * hash) + SCORE_MODE_FIELD_NUMBER;
        hash = (53 * hash) + scoreMode_;
      }
      if (hasAuditAction()) {
        hash = (37 * hash) + AUDIT_ACTION_FIELD_NUMBER;
        hash = (53 * hash) + getAuditAction();
      }
      if (hasAuditData()) {
        hash = (37 * hash) + AUDIT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAuditData());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dota2.CMsgPendingEventAward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dota2.CMsgPendingEventAward)
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAwardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgPendingEventAward_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgPendingEventAward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward.class, com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward.Builder.class);
      }

      // Construct using com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        eventId_ = 0;
        actionId_ = 0;
        numToGrant_ = 0;
        scoreMode_ = 0;
        auditAction_ = 0;
        auditData_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.internal_static_dota2_CMsgPendingEventAward_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward getDefaultInstanceForType() {
        return com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward build() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward buildPartial() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward result = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.eventId_ = eventId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.actionId_ = actionId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.numToGrant_ = numToGrant_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.scoreMode_ = scoreMode_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.auditAction_ = auditAction_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.auditData_ = auditData_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward) {
          return mergeFrom((com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward other) {
        if (other == com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasActionId()) {
          setActionId(other.getActionId());
        }
        if (other.hasNumToGrant()) {
          setNumToGrant(other.getNumToGrant());
        }
        if (other.hasScoreMode()) {
          setScoreMode(other.getScoreMode());
        }
        if (other.hasAuditAction()) {
          setAuditAction(other.getAuditAction());
        }
        if (other.hasAuditData()) {
          setAuditData(other.getAuditData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent tmpValue =
                    com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  eventId_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                actionId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                numToGrant_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                int tmpRaw = input.readEnum();
                com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode tmpValue =
                    com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(4, tmpRaw);
                } else {
                  scoreMode_ = tmpRaw;
                  bitField0_ |= 0x00000008;
                }
                break;
              } // case 32
              case 40: {
                auditAction_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                auditData_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int eventId_ = 0;
      /**
       * <code>optional .dota2.EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
       * @return Whether the eventId field is set.
       */
      @java.lang.Override public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .dota2.EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
       * @return The eventId.
       */
      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent getEventId() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent result = com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent.forNumber(eventId_);
        return result == null ? com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent.EVENT_ID_NONE : result;
      }
      /**
       * <code>optional .dota2.EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
       * @param value The eventId to set.
       * @return This builder for chaining.
       */
      public Builder setEventId(com.nickbooher.protos.gc.dota.MsgSharedEnums.EEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        eventId_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
       * @return This builder for chaining.
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0;
        onChanged();
        return this;
      }

      private int actionId_ ;
      /**
       * <code>optional uint32 action_id = 2;</code>
       * @return Whether the actionId field is set.
       */
      @java.lang.Override
      public boolean hasActionId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 action_id = 2;</code>
       * @return The actionId.
       */
      @java.lang.Override
      public int getActionId() {
        return actionId_;
      }
      /**
       * <code>optional uint32 action_id = 2;</code>
       * @param value The actionId to set.
       * @return This builder for chaining.
       */
      public Builder setActionId(int value) {

        actionId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 action_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearActionId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        actionId_ = 0;
        onChanged();
        return this;
      }

      private int numToGrant_ ;
      /**
       * <code>optional uint32 num_to_grant = 3;</code>
       * @return Whether the numToGrant field is set.
       */
      @java.lang.Override
      public boolean hasNumToGrant() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 num_to_grant = 3;</code>
       * @return The numToGrant.
       */
      @java.lang.Override
      public int getNumToGrant() {
        return numToGrant_;
      }
      /**
       * <code>optional uint32 num_to_grant = 3;</code>
       * @param value The numToGrant to set.
       * @return This builder for chaining.
       */
      public Builder setNumToGrant(int value) {

        numToGrant_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_to_grant = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumToGrant() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numToGrant_ = 0;
        onChanged();
        return this;
      }

      private int scoreMode_ = 0;
      /**
       * <code>optional .dota2.EEventActionScoreMode score_mode = 4 [default = k_eEventActionScoreMode_Add];</code>
       * @return Whether the scoreMode field is set.
       */
      @java.lang.Override public boolean hasScoreMode() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .dota2.EEventActionScoreMode score_mode = 4 [default = k_eEventActionScoreMode_Add];</code>
       * @return The scoreMode.
       */
      @java.lang.Override
      public com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode getScoreMode() {
        com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode result = com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode.forNumber(scoreMode_);
        return result == null ? com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode.k_eEventActionScoreMode_Add : result;
      }
      /**
       * <code>optional .dota2.EEventActionScoreMode score_mode = 4 [default = k_eEventActionScoreMode_Add];</code>
       * @param value The scoreMode to set.
       * @return This builder for chaining.
       */
      public Builder setScoreMode(com.nickbooher.protos.gc.dota.MsgSharedEnums.EEventActionScoreMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        scoreMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .dota2.EEventActionScoreMode score_mode = 4 [default = k_eEventActionScoreMode_Add];</code>
       * @return This builder for chaining.
       */
      public Builder clearScoreMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        scoreMode_ = 0;
        onChanged();
        return this;
      }

      private int auditAction_ ;
      /**
       * <code>optional uint32 audit_action = 5;</code>
       * @return Whether the auditAction field is set.
       */
      @java.lang.Override
      public boolean hasAuditAction() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 audit_action = 5;</code>
       * @return The auditAction.
       */
      @java.lang.Override
      public int getAuditAction() {
        return auditAction_;
      }
      /**
       * <code>optional uint32 audit_action = 5;</code>
       * @param value The auditAction to set.
       * @return This builder for chaining.
       */
      public Builder setAuditAction(int value) {

        auditAction_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 audit_action = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuditAction() {
        bitField0_ = (bitField0_ & ~0x00000010);
        auditAction_ = 0;
        onChanged();
        return this;
      }

      private long auditData_ ;
      /**
       * <code>optional uint64 audit_data = 6;</code>
       * @return Whether the auditData field is set.
       */
      @java.lang.Override
      public boolean hasAuditData() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint64 audit_data = 6;</code>
       * @return The auditData.
       */
      @java.lang.Override
      public long getAuditData() {
        return auditData_;
      }
      /**
       * <code>optional uint64 audit_data = 6;</code>
       * @param value The auditData to set.
       * @return This builder for chaining.
       */
      public Builder setAuditData(long value) {

        auditData_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 audit_data = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuditData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        auditData_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dota2.CMsgPendingEventAward)
    }

    // @@protoc_insertion_point(class_scope:dota2.CMsgPendingEventAward)
    private static final com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward();
    }

    public static com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CMsgPendingEventAward>
        PARSER = new com.google.protobuf.AbstractParser<CMsgPendingEventAward>() {
      @java.lang.Override
      public CMsgPendingEventAward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CMsgPendingEventAward> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgPendingEventAward> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.gc.dota.MsgSharedEnums.CMsgPendingEventAward getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CDOTAClientHardwareSpecs_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CDOTAClientHardwareSpecs_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CDOTASaveGame_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CDOTASaveGame_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CDOTASaveGame_Player_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CDOTASaveGame_Player_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CDOTASaveGame_SaveInstance_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CDOTASaveGame_SaveInstance_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CMsgDOTACombatLogEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CMsgDOTACombatLogEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dota2_CMsgPendingEventAward_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dota2_CMsgPendingEventAward_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027dota_shared_enums.proto\022\005dota2\"\314\001\n\030CDO" +
      "TAClientHardwareSpecs\022\032\n\022logical_process" +
      "ors\030\001 \001(\r\022\035\n\025cpu_cycles_per_second\030\002 \001(\006" +
      "\022\035\n\025total_physical_memory\030\003 \001(\006\022\024\n\014is_64" +
      "_bit_os\030\004 \001(\010\022\032\n\022upload_measurement\030\005 \001(" +
      "\004\022\027\n\017prefer_not_host\030\006 \001(\010\022\013\n\003crc\030\007 \003(\r\"" +
      "\346\003\n\rCDOTASaveGame\022\020\n\010match_id\030\005 \001(\004\022\021\n\ts" +
      "ave_time\030\002 \001(\r\022,\n\007players\030\003 \003(\0132\033.dota2." +
      "CDOTASaveGame.Player\0229\n\016save_instances\030\004" +
      " \003(\0132!.dota2.CDOTASaveGame.SaveInstance\032" +
      "_\n\006Player\0229\n\004team\030\001 \001(\0162\023.dota2.DOTA_GC_" +
      "TEAM:\026DOTA_GC_TEAM_GOOD_GUYS\022\014\n\004name\030\002 \001" +
      "(\t\022\014\n\004hero\030\003 \001(\t\032\345\001\n\014SaveInstance\022\021\n\tgam" +
      "e_time\030\002 \001(\r\022\023\n\013team1_score\030\003 \001(\r\022\023\n\013tea" +
      "m2_score\030\004 \001(\r\022K\n\020player_positions\030\005 \003(\013" +
      "21.dota2.CDOTASaveGame.SaveInstance.Play" +
      "erPositions\022\017\n\007save_id\030\006 \001(\r\022\021\n\tsave_tim" +
      "e\030\007 \001(\r\032\'\n\017PlayerPositions\022\t\n\001x\030\001 \001(\002\022\t\n" +
      "\001y\030\002 \001(\002\"\377\017\n\026CMsgDOTACombatLogEntry\022A\n\004t" +
      "ype\030\001 \001(\0162\033.dota2.DOTA_COMBATLOG_TYPES:\026" +
      "DOTA_COMBATLOG_INVALID\022\023\n\013target_name\030\002 " +
      "\001(\r\022\032\n\022target_source_name\030\003 \001(\r\022\025\n\rattac" +
      "ker_name\030\004 \001(\r\022\032\n\022damage_source_name\030\005 \001" +
      "(\r\022\026\n\016inflictor_name\030\006 \001(\r\022\034\n\024is_attacke" +
      "r_illusion\030\007 \001(\010\022\030\n\020is_attacker_hero\030\010 \001" +
      "(\010\022\032\n\022is_target_illusion\030\t \001(\010\022\026\n\016is_tar" +
      "get_hero\030\n \001(\010\022\032\n\022is_visible_radiant\030\013 \001" +
      "(\010\022\027\n\017is_visible_dire\030\014 \001(\010\022\r\n\005value\030\r \001" +
      "(\r\022\016\n\006health\030\016 \001(\005\022\021\n\ttimestamp\030\017 \001(\002\022\025\n" +
      "\rstun_duration\030\020 \001(\002\022\025\n\rslow_duration\030\021 " +
      "\001(\002\022\034\n\024is_ability_toggle_on\030\022 \001(\010\022\035\n\025is_" +
      "ability_toggle_off\030\023 \001(\010\022\025\n\rability_leve" +
      "l\030\024 \001(\r\022\022\n\nlocation_x\030\025 \001(\002\022\022\n\nlocation_" +
      "y\030\026 \001(\002\022\023\n\013gold_reason\030\027 \001(\r\022\025\n\rtimestam" +
      "p_raw\030\030 \001(\002\022\031\n\021modifier_duration\030\031 \001(\002\022\021" +
      "\n\txp_reason\030\032 \001(\r\022\021\n\tlast_hits\030\033 \001(\r\022\025\n\r" +
      "attacker_team\030\034 \001(\r\022\023\n\013target_team\030\035 \001(\r" +
      "\022\030\n\020obs_wards_placed\030\036 \001(\r\022\026\n\016assist_pla" +
      "yer0\030\037 \001(\r\022\026\n\016assist_player1\030  \001(\r\022\026\n\016as" +
      "sist_player2\030! \001(\r\022\026\n\016assist_player3\030\" \001" +
      "(\r\022\023\n\013stack_count\030# \001(\r\022\027\n\017hidden_modifi" +
      "er\030$ \001(\010\022\032\n\022is_target_building\030% \001(\010\022\031\n\021" +
      "neutral_camp_type\030& \001(\r\022\021\n\trune_type\030\' \001" +
      "(\r\022\026\n\016assist_players\030( \003(\005\022\024\n\014is_heal_sa" +
      "ve\030) \001(\010\022\033\n\023is_ultimate_ability\030* \001(\010\022\033\n" +
      "\023attacker_hero_level\030+ \001(\r\022\031\n\021target_her" +
      "o_level\030, \001(\r\022\013\n\003xpm\030- \001(\r\022\013\n\003gpm\030. \001(\r\022" +
      "\026\n\016event_location\030/ \001(\r\022\026\n\016target_is_sel" +
      "f\0300 \001(\010\022\023\n\013damage_type\0301 \001(\r\022\035\n\025invisibi" +
      "lity_modifier\0302 \001(\010\022\027\n\017damage_category\0303" +
      " \001(\r\022\020\n\010networth\0304 \001(\r\022\025\n\rbuilding_type\030" +
      "5 \001(\r\022!\n\031modifier_elapsed_duration\0306 \001(\002" +
      "\022\030\n\020silence_modifier\0307 \001(\010\022\033\n\023heal_from_" +
      "lifesteal\0308 \001(\010\022\027\n\017modifier_purged\0309 \001(\010" +
      "\022\024\n\014spell_evaded\030: \001(\010\022\"\n\032motion_control" +
      "ler_modifier\030; \001(\010\022\027\n\017long_range_kill\030< " +
      "\001(\010\022\036\n\026modifier_purge_ability\030= \001(\r\022\032\n\022m" +
      "odifier_purge_npc\030> \001(\r\022\025\n\rroot_modifier" +
      "\030? \001(\010\022\036\n\026total_unit_death_count\030@ \001(\r\022\025" +
      "\n\raura_modifier\030A \001(\010\022\035\n\025armor_debuff_mo" +
      "difier\030B \001(\010\022#\n\033no_physical_damage_modif" +
      "ier\030C \001(\010\022\030\n\020modifier_ability\030D \001(\r\022\027\n\017m" +
      "odifier_hidden\030E \001(\010\022#\n\033inflictor_is_sto" +
      "len_ability\030F \001(\010\022\030\n\020kill_eater_event\030G " +
      "\001(\r\022\031\n\021unit_status_label\030H \001(\r\022\036\n\026spell_" +
      "generated_attack\030I \001(\010\022\025\n\rat_night_time\030" +
      "J \001(\010\022\034\n\024attacker_has_scepter\030K \001(\010\022\031\n\021n" +
      "eutral_camp_team\030L \001(\r\022\032\n\022regenerated_he" +
      "alth\030M \001(\002\022\030\n\020will_reincarnate\030N \001(\010\022\024\n\014" +
      "uses_charges\030O \001(\010\"\351\001\n\025CMsgPendingEventA" +
      "ward\022.\n\010event_id\030\001 \001(\0162\r.dota2.EEvent:\rE" +
      "VENT_ID_NONE\022\021\n\taction_id\030\002 \001(\r\022\024\n\014num_t" +
      "o_grant\030\003 \001(\r\022M\n\nscore_mode\030\004 \001(\0162\034.dota" +
      "2.EEventActionScoreMode:\033k_eEventActionS" +
      "coreMode_Add\022\024\n\014audit_action\030\005 \001(\r\022\022\n\nau" +
      "dit_data\030\006 \001(\004*\232\005\n\rDOTA_GameMode\022\026\n\022DOTA" +
      "_GAMEMODE_NONE\020\000\022\024\n\020DOTA_GAMEMODE_AP\020\001\022\024" +
      "\n\020DOTA_GAMEMODE_CM\020\002\022\024\n\020DOTA_GAMEMODE_RD" +
      "\020\003\022\024\n\020DOTA_GAMEMODE_SD\020\004\022\024\n\020DOTA_GAMEMOD" +
      "E_AR\020\005\022\027\n\023DOTA_GAMEMODE_INTRO\020\006\022\024\n\020DOTA_" +
      "GAMEMODE_HW\020\007\022\034\n\030DOTA_GAMEMODE_REVERSE_C" +
      "M\020\010\022\026\n\022DOTA_GAMEMODE_XMAS\020\t\022\032\n\026DOTA_GAME" +
      "MODE_TUTORIAL\020\n\022\024\n\020DOTA_GAMEMODE_MO\020\013\022\024\n" +
      "\020DOTA_GAMEMODE_LP\020\014\022\027\n\023DOTA_GAMEMODE_POO" +
      "L1\020\r\022\024\n\020DOTA_GAMEMODE_FH\020\016\022\030\n\024DOTA_GAMEM" +
      "ODE_CUSTOM\020\017\022\024\n\020DOTA_GAMEMODE_CD\020\020\022\024\n\020DO" +
      "TA_GAMEMODE_BD\020\021\022\037\n\033DOTA_GAMEMODE_ABILIT" +
      "Y_DRAFT\020\022\022\027\n\023DOTA_GAMEMODE_EVENT\020\023\022\026\n\022DO" +
      "TA_GAMEMODE_ARDM\020\024\022\030\n\024DOTA_GAMEMODE_1V1M" +
      "ID\020\025\022\033\n\027DOTA_GAMEMODE_ALL_DRAFT\020\026\022\027\n\023DOT" +
      "A_GAMEMODE_TURBO\020\027\022\032\n\026DOTA_GAMEMODE_MUTA" +
      "TION\020\030\022#\n\037DOTA_GAMEMODE_COACHES_CHALLENG" +
      "E\020\031*\274\004\n\016DOTA_GameState\022\035\n\031DOTA_GAMERULES" +
      "_STATE_INIT\020\000\0221\n-DOTA_GAMERULES_STATE_WA" +
      "IT_FOR_PLAYERS_TO_LOAD\020\001\022\'\n#DOTA_GAMERUL" +
      "ES_STATE_HERO_SELECTION\020\002\022&\n\"DOTA_GAMERU" +
      "LES_STATE_STRATEGY_TIME\020\003\022!\n\035DOTA_GAMERU" +
      "LES_STATE_PRE_GAME\020\004\022)\n%DOTA_GAMERULES_S" +
      "TATE_GAME_IN_PROGRESS\020\005\022\"\n\036DOTA_GAMERULE" +
      "S_STATE_POST_GAME\020\006\022#\n\037DOTA_GAMERULES_ST" +
      "ATE_DISCONNECT\020\007\022&\n\"DOTA_GAMERULES_STATE" +
      "_TEAM_SHOWCASE\020\010\022*\n&DOTA_GAMERULES_STATE" +
      "_CUSTOM_GAME_SETUP\020\t\022-\n)DOTA_GAMERULES_S" +
      "TATE_WAIT_FOR_MAP_TO_LOAD\020\n\022\'\n#DOTA_GAME" +
      "RULES_STATE_SCENARIO_SETUP\020\013\022%\n!DOTA_GAM" +
      "ERULES_STATE_PLAYER_DRAFT\020\014\022\035\n\031DOTA_GAME" +
      "RULES_STATE_LAST\020\r*\251\003\n\014DOTA_GC_TEAM\022\032\n\026D" +
      "OTA_GC_TEAM_GOOD_GUYS\020\000\022\031\n\025DOTA_GC_TEAM_" +
      "BAD_GUYS\020\001\022\034\n\030DOTA_GC_TEAM_BROADCASTER\020\002" +
      "\022\032\n\026DOTA_GC_TEAM_SPECTATOR\020\003\022\034\n\030DOTA_GC_" +
      "TEAM_PLAYER_POOL\020\004\022\027\n\023DOTA_GC_TEAM_NOTEA" +
      "M\020\005\022\031\n\025DOTA_GC_TEAM_CUSTOM_1\020\006\022\031\n\025DOTA_G" +
      "C_TEAM_CUSTOM_2\020\007\022\031\n\025DOTA_GC_TEAM_CUSTOM" +
      "_3\020\010\022\031\n\025DOTA_GC_TEAM_CUSTOM_4\020\t\022\031\n\025DOTA_" +
      "GC_TEAM_CUSTOM_5\020\n\022\031\n\025DOTA_GC_TEAM_CUSTO" +
      "M_6\020\013\022\031\n\025DOTA_GC_TEAM_CUSTOM_7\020\014\022\031\n\025DOTA" +
      "_GC_TEAM_CUSTOM_8\020\r\022\031\n\025DOTA_GC_TEAM_NEUT" +
      "RALS\020\016*\331\013\n\006EEvent\022\021\n\rEVENT_ID_NONE\020\000\022\025\n\021" +
      "EVENT_ID_DIRETIDE\020\001\022\034\n\030EVENT_ID_SPRING_F" +
      "ESTIVAL\020\002\022\033\n\027EVENT_ID_FROSTIVUS_2013\020\003\022\034" +
      "\n\030EVENT_ID_COMPENDIUM_2014\020\004\022\032\n\026EVENT_ID" +
      "_NEXON_PC_BANG\020\005\022\032\n\026EVENT_ID_PWRD_DAC_20" +
      "15\020\006\022\033\n\027EVENT_ID_NEW_BLOOM_2015\020\007\022\037\n\033EVE" +
      "NT_ID_INTERNATIONAL_2015\020\010\022\034\n\030EVENT_ID_F" +
      "ALL_MAJOR_2015\020\t\022\026\n\022EVENT_ID_ORACLE_PA\020\n" +
      "\022$\n EVENT_ID_NEW_BLOOM_2015_PREBEAST\020\013\022\026" +
      "\n\022EVENT_ID_FROSTIVUS\020\014\022\036\n\032EVENT_ID_WINTE" +
      "R_MAJOR_2016\020\r\022\037\n\033EVENT_ID_INTERNATIONAL" +
      "_2016\020\016\022\034\n\030EVENT_ID_FALL_MAJOR_2016\020\017\022\036\n" +
      "\032EVENT_ID_WINTER_MAJOR_2017\020\020\022\033\n\027EVENT_I" +
      "D_NEW_BLOOM_2017\020\021\022\037\n\033EVENT_ID_INTERNATI" +
      "ONAL_2017\020\022\022\036\n\032EVENT_ID_PLUS_SUBSCRIPTIO" +
      "N\020\023\022\035\n\031EVENT_ID_SINGLES_DAY_2017\020\024\022\033\n\027EV" +
      "ENT_ID_FROSTIVUS_2017\020\025\022\037\n\033EVENT_ID_INTE" +
      "RNATIONAL_2018\020\026\022\033\n\027EVENT_ID_FROSTIVUS_2" +
      "018\020\027\022\033\n\027EVENT_ID_NEW_BLOOM_2019\020\030\022\037\n\033EV" +
      "ENT_ID_INTERNATIONAL_2019\020\031\022\"\n\036EVENT_ID_" +
      "NEW_PLAYER_EXPERIENCE\020\032\022\033\n\027EVENT_ID_FROS" +
      "TIVUS_2019\020\033\022\033\n\027EVENT_ID_NEW_BLOOM_2020\020" +
      "\034\022\037\n\033EVENT_ID_INTERNATIONAL_2020\020\035\022\030\n\024EV" +
      "ENT_ID_TEAM_FANDOM\020\036\022\032\n\026EVENT_ID_DIRETID" +
      "E_2020\020\037\022\030\n\024EVENT_ID_SPRING_2021\020 \022\026\n\022EV" +
      "ENT_ID_FALL_2021\020!\022\"\n\036EVENT_ID_TEAM_FAND" +
      "OM_FALL_2021\020\"\022!\n\035EVENT_ID_TEAM_2021_202" +
      "2_TOUR2\020#\022\037\n\033EVENT_ID_INTERNATIONAL_2022" +
      "\020$\022!\n\035EVENT_ID_TEAM_2021_2022_TOUR3\020%\022$\n" +
      " EVENT_ID_TEAM_INTERNATIONAL_2022\020&\022\035\n\031E" +
      "VENT_ID_PERMANENT_GRANTS\020\'\022&\n\"EVENT_ID_M" +
      "UERTA_RELEASE_SPRING2023\020(\022\034\n\030EVENT_ID_T" +
      "EAM_2023_TOUR1\020)\022\034\n\030EVENT_ID_TEAM_2023_T" +
      "OUR2\020*\022\034\n\030EVENT_ID_TEAM_2023_TOUR3\020+\022\037\n\033" +
      "EVENT_ID_INTERNATIONAL_2023\020-\022\035\n\031EVENT_I" +
      "D_10TH_ANNIVERSARY\020.\022\026\n\022EVENT_ID_CROWNFA" +
      "LL\020/\022\033\n\027EVENT_ID_FROSTIVUS_2023\0200\022\037\n\033EVE" +
      "NT_ID_INTERNATIONAL_2024\0201*\273\002\n\tERankType" +
      "\022\027\n\023k_ERankType_Invalid\020\000\022\026\n\022k_ERankType" +
      "_Casual\020\001\022\026\n\022k_ERankType_Ranked\020\002\022\034\n\030k_E" +
      "RankType_CasualLegacy\020\003\022\034\n\030k_ERankType_R" +
      "ankedLegacy\020\004\022\034\n\030k_ERankType_CasualGlick" +
      "o\020\005\022\034\n\030k_ERankType_RankedGlicko\020\006\022\027\n\023k_E" +
      "RankType_RankMax\020\007\022\037\n\033k_ERankType_Behavi" +
      "orPrivate\020d\022\036\n\032k_ERankType_BehaviorPubli" +
      "c\020e\022\023\n\017k_ERankType_Max\020f*\312\002\n\022DOTALeaverS" +
      "tatus_t\022\024\n\020DOTA_LEAVER_NONE\020\000\022\034\n\030DOTA_LE" +
      "AVER_DISCONNECTED\020\001\022%\n!DOTA_LEAVER_DISCO" +
      "NNECTED_TOO_LONG\020\002\022\031\n\025DOTA_LEAVER_ABANDO" +
      "NED\020\003\022\023\n\017DOTA_LEAVER_AFK\020\004\022\037\n\033DOTA_LEAVE" +
      "R_NEVER_CONNECTED\020\005\022(\n$DOTA_LEAVER_NEVER" +
      "_CONNECTED_TOO_LONG\020\006\022\"\n\036DOTA_LEAVER_FAI" +
      "LED_TO_READY_UP\020\007\022\030\n\024DOTA_LEAVER_DECLINE" +
      "D\020\010\022 \n\034DOTA_LEAVER_DECLINED_REQUEUE\020\t*\236\002" +
      "\n\025DOTAConnectionState_t\022!\n\035DOTA_CONNECTI" +
      "ON_STATE_UNKNOWN\020\000\022+\n\'DOTA_CONNECTION_ST" +
      "ATE_NOT_YET_CONNECTED\020\001\022#\n\037DOTA_CONNECTI" +
      "ON_STATE_CONNECTED\020\002\022&\n\"DOTA_CONNECTION_" +
      "STATE_DISCONNECTED\020\003\022#\n\037DOTA_CONNECTION_" +
      "STATE_ABANDONED\020\004\022!\n\035DOTA_CONNECTION_STA" +
      "TE_LOADING\020\005\022 \n\034DOTA_CONNECTION_STATE_FA" +
      "ILED\020\006*\214\001\n\rFantasy_Roles\022\032\n\026FANTASY_ROLE" +
      "_UNDEFINED\020\000\022\025\n\021FANTASY_ROLE_CORE\020\001\022\030\n\024F" +
      "ANTASY_ROLE_SUPPORT\020\002\022\030\n\024FANTASY_ROLE_OF" +
      "FLANE\020\003\022\024\n\020FANTASY_ROLE_MID\020\004*\241\005\n\017Fantas" +
      "y_Scoring\022\031\n\025FANTASY_SCORING_KILLS\020\000\022\032\n\026" +
      "FANTASY_SCORING_DEATHS\020\001\022\026\n\022FANTASY_SCOR" +
      "ING_CS\020\002\022\027\n\023FANTASY_SCORING_GPM\020\003\022\037\n\033FAN" +
      "TASY_SCORING_TOWER_KILLS\020\004\022 \n\034FANTASY_SC" +
      "ORING_ROSHAN_KILLS\020\005\022+\n\'FANTASY_SCORING_" +
      "TEAMFIGHT_PARTICIPATION\020\006\022!\n\035FANTASY_SCO" +
      "RING_WARDS_PLANTED\020\007\022!\n\035FANTASY_SCORING_" +
      "CAMPS_STACKED\020\010\022!\n\035FANTASY_SCORING_RUNES" +
      "_GRABBED\020\t\022\037\n\033FANTASY_SCORING_FIRST_BLOO" +
      "D\020\n\022\031\n\025FANTASY_SCORING_STUNS\020\013\022\037\n\033FANTAS" +
      "Y_SCORING_SMOKES_USED\020\014\022(\n$FANTASY_SCORI" +
      "NG_NEUTRAL_TOKENS_FOUND\020\r\022\"\n\036FANTASY_SCO" +
      "RING_WATCHERS_TAKEN\020\016\022\"\n\036FANTASY_SCORING" +
      "_LOTUSES_GAINED\020\017\022#\n\037FANTASY_SCORING_TOR" +
      "MENTOR_KILLS\020\020\022!\n\035FANTASY_SCORING_COURIE" +
      "R_KILLS\020\021\022\031\n\025FANTASY_SCORING_TYPES\020\022\022\033\n\027" +
      "FANTASY_SCORING_INVALID\020\023*\212\001\n\022Fantasy_Te" +
      "am_Slots\022\025\n\021FANTASY_SLOT_NONE\020\000\022\025\n\021FANTA" +
      "SY_SLOT_CORE\020\001\022\030\n\024FANTASY_SLOT_SUPPORT\020\002" +
      "\022\024\n\020FANTASY_SLOT_ANY\020\003\022\026\n\022FANTASY_SLOT_B" +
      "ENCH\020\004*\335\002\n\026Fantasy_Selection_Mode\022\035\n\031FAN" +
      "TASY_SELECTION_INVALID\020\000\022\034\n\030FANTASY_SELE" +
      "CTION_LOCKED\020\001\022\035\n\031FANTASY_SELECTION_SHUF" +
      "FLE\020\002\022\037\n\033FANTASY_SELECTION_FREE_PICK\020\003\022\033" +
      "\n\027FANTASY_SELECTION_ENDED\020\004\022 \n\034FANTASY_S" +
      "ELECTION_PRE_SEASON\020\005\022\037\n\033FANTASY_SELECTI" +
      "ON_PRE_DRAFT\020\006\022\036\n\032FANTASY_SELECTION_DRAF" +
      "TING\020\007\022$\n FANTASY_SELECTION_REGULAR_SEAS" +
      "ON\020\010\022 \n\034FANTASY_SELECTION_CARD_BASED\020\t*j" +
      "\n\020Fantasy_Gem_Type\022\031\n\025FANTASY_GEM_TYPE_R" +
      "UBY\020\000\022\035\n\031FANTASY_GEM_TYPE_SAPPHIRE\020\001\022\034\n\030" +
      "FANTASY_GEM_TYPE_EMERALD\020\002*\202\006\n\025DOTAChatC" +
      "hannelType_t\022\034\n\030DOTAChannelType_Regional" +
      "\020\000\022\032\n\026DOTAChannelType_Custom\020\001\022\031\n\025DOTACh" +
      "annelType_Party\020\002\022\031\n\025DOTAChannelType_Lob" +
      "by\020\003\022\030\n\024DOTAChannelType_Team\020\004\022\031\n\025DOTACh" +
      "annelType_Guild\020\005\022\033\n\027DOTAChannelType_Fan" +
      "tasy\020\006\022\033\n\027DOTAChannelType_Whisper\020\007\022\033\n\027D" +
      "OTAChannelType_Console\020\010\022\027\n\023DOTAChannelT" +
      "ype_Tab\020\t\022\033\n\027DOTAChannelType_Invalid\020\n\022\033" +
      "\n\027DOTAChannelType_GameAll\020\013\022\036\n\032DOTAChann" +
      "elType_GameAllies\020\014\022!\n\035DOTAChannelType_G" +
      "ameSpectator\020\r\022 \n\034DOTAChannelType_GameCo" +
      "aching\020\016\022\030\n\024DOTAChannelType_Cafe\020\017\022\036\n\032DO" +
      "TAChannelType_CustomGame\020\020\022\033\n\027DOTAChanne" +
      "lType_Private\020\021\022\034\n\030DOTAChannelType_PostG" +
      "ame\020\022\022\035\n\031DOTAChannelType_BattleCup\020\023\022!\n\035" +
      "DOTAChannelType_HLTVSpectator\020\024\022\036\n\032DOTAC" +
      "hannelType_GameEvents\020\025\022\032\n\026DOTAChannelTy" +
      "pe_Trivia\020\026\022\035\n\031DOTAChannelType_NewPlayer" +
      "\020\027\022#\n\037DOTAChannelType_PrivateCoaching\020\030*" +
      "\220\001\n\026EChatSpecialPrivileges\022!\n\035k_EChatSpe" +
      "cialPrivileges_None\020\000\022&\n\"k_EChatSpecialP" +
      "rivileges_Moderator\020\001\022+\n\'k_EChatSpecialP" +
      "rivileges_SuperModerator\020\002*\335\003\n\016DOTACommT" +
      "ype_t\022\027\n\023DOTA_COMM_TYPE_NONE\020\000\022\027\n\023DOTA_C" +
      "OMM_TYPE_PING\020\001\022\034\n\030DOTA_COMM_TYPE_CHATWH" +
      "EEL\020\002\022\026\n\022DOTA_COMM_TYPE_TIP\020\003\022\027\n\023DOTA_CO" +
      "MM_TYPE_TEXT\020\004\022\033\n\027DOTA_COMM_TYPE_SHOWCAS" +
      "E\020\005\022\030\n\024DOTA_COMM_TYPE_VOICE\020\006\022\037\n\033DOTA_CO" +
      "MM_TYPE_ALLY_ABILITY\020\007\022\030\n\024DOTA_COMM_TYPE" +
      "_PAUSE\020\010\022\033\n\027DOTA_COMM_TYPE_COACHING\020\t\022\035\n" +
      "\031DOTA_COMM_TYPE_NOCOOLDOWN\020\n\022\"\n\036DOTA_COM" +
      "M_TYPE_RANKEDMATCHMAKE\020\013\022\030\n\024DOTA_COMM_TY" +
      "PE_DROPS\020\014\022#\n\037DOTA_COMM_TYPE_NEWPLAYER_E" +
      "XPERT\020\r\022\032\n\026DOTA_COMM_TYPE_COACHED\020\016\022\035\n\031D" +
      "OTA_COMM_TYPE_MAPDRAWING\020\017*\372\001\n\017DOTACommL" +
      "evel_t\022\030\n\024DOTA_COMM_LEVEL_NONE\020\000\022\034\n\030DOTA" +
      "_COMM_LEVEL_COOLDOWN\020\001\022\031\n\025DOTA_COMM_LEVE" +
      "L_PINGS\020\002\022\036\n\032DOTA_COMM_LEVEL_MAPDRAWING\020" +
      "\003\022\030\n\024DOTA_COMM_LEVEL_CHAT\020\004\022\033\n\027DOTA_COMM" +
      "_LEVEL_TIPPING\020\005\022\031\n\025DOTA_COMM_LEVEL_VOIC" +
      "E\020\006\022\"\n\036DOTA_COMM_LEVEL_ALLIED_ABILITY\020\007*" +
      "\275\001\n\023DOTABehaviorLevel_t\022\034\n\030DOTA_BEHAVIOR" +
      "_LEVEL_NONE\020\000\022&\n\"DOTA_BEHAVIOR_LEVEL_RAN" +
      "KED_ALLOWED\020\001\022\037\n\033DOTA_BEHAVIOR_LEVEL_PAU" +
      "SING\020\002\022\035\n\031DOTA_BEHAVIOR_LEVEL_DROPS\020\003\022 \n" +
      "\034DOTA_BEHAVIOR_LEVEL_COACHING\020\004*\204\002\n\024EPro" +
      "fileCardSlotType\022 \n\034k_EProfileCardSlotTy" +
      "pe_Empty\020\000\022\037\n\033k_EProfileCardSlotType_Sta" +
      "t\020\001\022!\n\035k_EProfileCardSlotType_Trophy\020\002\022\037" +
      "\n\033k_EProfileCardSlotType_Item\020\003\022\037\n\033k_EPr" +
      "ofileCardSlotType_Hero\020\004\022#\n\037k_EProfileCa" +
      "rdSlotType_Emoticon\020\005\022\037\n\033k_EProfileCardS" +
      "lotType_Team\020\006*\225\001\n\027EMatchGroupServerStat" +
      "us\022 \n\034k_EMatchGroupServerStatus_OK\020\000\0221\n-" +
      "k_EMatchGroupServerStatus_LimitedAvailab" +
      "ility\020\001\022%\n!k_EMatchGroupServerStatus_Off" +
      "line\020\002*O\n\014DOTA_CM_PICK\022\022\n\016DOTA_CM_RANDOM" +
      "\020\000\022\025\n\021DOTA_CM_GOOD_GUYS\020\001\022\024\n\020DOTA_CM_BAD" +
      "_GUYS\020\002*\264\001\n\026DOTALowPriorityBanType\022!\n\035DO" +
      "TA_LOW_PRIORITY_BAN_ABANDON\020\000\022!\n\035DOTA_LO" +
      "W_PRIORITY_BAN_REPORTS\020\001\022+\n\'DOTA_LOW_PRI" +
      "ORITY_BAN_SECONDARY_ABANDON\020\002\022\'\n#DOTA_LO" +
      "W_PRIORITY_BAN_PRE_GAME_ROLE\020\003*\247\001\n\023DOTAL" +
      "obbyReadyState\022\"\n\036DOTALobbyReadyState_UN" +
      "DECLARED\020\000\022 \n\034DOTALobbyReadyState_ACCEPT" +
      "ED\020\001\022 \n\034DOTALobbyReadyState_DECLINED\020\002\022(" +
      "\n$DOTALobbyReadyState_DECLINED_REQUEUE\020\003" +
      "*\272\004\n\023DOTAJoinLobbyResult\022\034\n\030DOTA_JOIN_RE" +
      "SULT_SUCCESS\020\000\022$\n DOTA_JOIN_RESULT_ALREA" +
      "DY_IN_GAME\020\001\022\"\n\036DOTA_JOIN_RESULT_INVALID" +
      "_LOBBY\020\002\022\'\n#DOTA_JOIN_RESULT_INCORRECT_P" +
      "ASSWORD\020\003\022\"\n\036DOTA_JOIN_RESULT_ACCESS_DEN" +
      "IED\020\004\022\"\n\036DOTA_JOIN_RESULT_GENERIC_ERROR\020" +
      "\005\022&\n\"DOTA_JOIN_RESULT_INCORRECT_VERSION\020" +
      "\006\022\"\n\036DOTA_JOIN_RESULT_IN_TEAM_PARTY\020\007\022#\n" +
      "\037DOTA_JOIN_RESULT_NO_LOBBY_FOUND\020\010\022\037\n\033DO" +
      "TA_JOIN_RESULT_LOBBY_FULL\020\t\0222\n.DOTA_JOIN" +
      "_RESULT_CUSTOM_GAME_INCORRECT_VERSION\020\n\022" +
      "\034\n\030DOTA_JOIN_RESULT_TIMEOUT\020\013\022)\n%DOTA_JO" +
      "IN_RESULT_CUSTOM_GAME_COOLDOWN\020\014\022\031\n\025DOTA" +
      "_JOIN_RESULT_BUSY\020\r\022 \n\034DOTA_JOIN_RESULT_" +
      "NO_PLAYTIME\020\016*q\n\032DOTASelectionPriorityRu" +
      "les\022\'\n#k_DOTASelectionPriorityRules_Manu" +
      "al\020\000\022*\n&k_DOTASelectionPriorityRules_Aut" +
      "omatic\020\001*\366\001\n\033DOTASelectionPriorityChoice" +
      "\022)\n%k_DOTASelectionPriorityChoice_Invali" +
      "d\020\000\022+\n\'k_DOTASelectionPriorityChoice_Fir" +
      "stPick\020\001\022,\n(k_DOTASelectionPriorityChoic" +
      "e_SecondPick\020\002\022)\n%k_DOTASelectionPriorit" +
      "yChoice_Radiant\020\003\022&\n\"k_DOTASelectionPrio" +
      "rityChoice_Dire\020\004*b\n\rDOTAMatchVote\022\031\n\025DO" +
      "TAMatchVote_INVALID\020\000\022\032\n\026DOTAMatchVote_P" +
      "OSITIVE\020\001\022\032\n\026DOTAMatchVote_NEGATIVE\020\002*x\n" +
      "\023DOTALobbyVisibility\022\036\n\032DOTALobbyVisibil" +
      "ity_Public\020\000\022\037\n\033DOTALobbyVisibility_Frie" +
      "nds\020\001\022 \n\034DOTALobbyVisibility_Unlisted\020\002*" +
      "\213\001\n\022EDOTAPlayerMMRType\022 \n\034k_EDOTAPlayerM" +
      "MRType_Invalid\020\000\022&\n\"k_EDOTAPlayerMMRType" +
      "_GeneralHidden\020\001\022+\n\'k_EDOTAPlayerMMRType" +
      "_GeneralCompetitive\020\003*s\n\021EDOTAMMRBoostTy" +
      "pe\022\034\n\030k_EDOTAMMRBoostType_None\020\000\022\036\n\032k_ED" +
      "OTAMMRBoostType_Leader\020\001\022 \n\034k_EDOTAMMRBo" +
      "ostType_Follower\020\002*\320\001\n\tMatchType\022\025\n\021MATC" +
      "H_TYPE_CASUAL\020\000\022\030\n\024MATCH_TYPE_COOP_BOTS\020" +
      "\001\022\032\n\026MATCH_TYPE_COMPETITIVE\020\004\022\036\n\032MATCH_T" +
      "YPE_WEEKEND_TOURNEY\020\005\022\024\n\020MATCH_TYPE_EVEN" +
      "T\020\007\022 \n\034MATCH_TYPE_COACHES_CHALLENGE\020\014\022\036\n" +
      "\032MATCH_TYPE_NEW_PLAYER_POOL\020\016*\234\002\n\021DOTABo" +
      "tDifficulty\022\032\n\026BOT_DIFFICULTY_PASSIVE\020\000\022" +
      "\027\n\023BOT_DIFFICULTY_EASY\020\001\022\031\n\025BOT_DIFFICUL" +
      "TY_MEDIUM\020\002\022\027\n\023BOT_DIFFICULTY_HARD\020\003\022\031\n\025" +
      "BOT_DIFFICULTY_UNFAIR\020\004\022\032\n\026BOT_DIFFICULT" +
      "Y_INVALID\020\005\022\031\n\025BOT_DIFFICULTY_EXTRA1\020\006\022\031" +
      "\n\025BOT_DIFFICULTY_EXTRA2\020\007\022\031\n\025BOT_DIFFICU" +
      "LTY_EXTRA3\020\010\022\026\n\022BOT_DIFFICULTY_NPX\020\t*\256\006\n" +
      "\rDOTA_BOT_MODE\022\026\n\022DOTA_BOT_MODE_NONE\020\000\022\030" +
      "\n\024DOTA_BOT_MODE_LANING\020\001\022\030\n\024DOTA_BOT_MOD" +
      "E_ATTACK\020\002\022\026\n\022DOTA_BOT_MODE_ROAM\020\003\022\031\n\025DO" +
      "TA_BOT_MODE_RETREAT\020\004\022\035\n\031DOTA_BOT_MODE_S" +
      "ECRET_SHOP\020\005\022\033\n\027DOTA_BOT_MODE_SIDE_SHOP\020" +
      "\006\022\026\n\022DOTA_BOT_MODE_RUNE\020\007\022 \n\034DOTA_BOT_MO" +
      "DE_PUSH_TOWER_TOP\020\010\022 \n\034DOTA_BOT_MODE_PUS" +
      "H_TOWER_MID\020\t\022 \n\034DOTA_BOT_MODE_PUSH_TOWE" +
      "R_BOT\020\n\022\"\n\036DOTA_BOT_MODE_DEFEND_TOWER_TO" +
      "P\020\013\022\"\n\036DOTA_BOT_MODE_DEFEND_TOWER_MID\020\014\022" +
      "\"\n\036DOTA_BOT_MODE_DEFEND_TOWER_BOT\020\r\022\032\n\026D" +
      "OTA_BOT_MODE_ASSEMBLE\020\016\022&\n\"DOTA_BOT_MODE" +
      "_ASSEMBLE_WITH_HUMANS\020\017\022\033\n\027DOTA_BOT_MODE" +
      "_TEAM_ROAM\020\020\022\026\n\022DOTA_BOT_MODE_FARM\020\021\022\035\n\031" +
      "DOTA_BOT_MODE_DEFEND_ALLY\020\022\022#\n\037DOTA_BOT_" +
      "MODE_EVASIVE_MANEUVERS\020\023\022\030\n\024DOTA_BOT_MOD" +
      "E_ROSHAN\020\024\022\026\n\022DOTA_BOT_MODE_ITEM\020\025\022\026\n\022DO" +
      "TA_BOT_MODE_WARD\020\026\022\033\n\027DOTA_BOT_MODE_COMP" +
      "ANION\020\027\022\037\n\033DOTA_BOT_MODE_TUTORIAL_BOSS\020\030" +
      "\022\030\n\024DOTA_BOT_MODE_MINION\020\031\022\031\n\025DOTA_BOT_M" +
      "ODE_OUTPOST\020\032*\363\001\n\016MatchLanguages\022\032\n\026MATC" +
      "H_LANGUAGE_INVALID\020\000\022\032\n\026MATCH_LANGUAGE_E" +
      "NGLISH\020\001\022\032\n\026MATCH_LANGUAGE_RUSSIAN\020\002\022\032\n\026" +
      "MATCH_LANGUAGE_CHINESE\020\003\022\031\n\025MATCH_LANGUA" +
      "GE_KOREAN\020\004\022\032\n\026MATCH_LANGUAGE_SPANISH\020\005\022" +
      "\035\n\031MATCH_LANGUAGE_PORTUGUESE\020\006\022\033\n\027MATCH_" +
      "LANGUAGE_ENGLISH2\020\007*\330\002\n\032ETourneyQueueDea" +
      "dlineState\022\'\n#k_ETourneyQueueDeadlineSta" +
      "te_Normal\020\000\022\'\n#k_ETourneyQueueDeadlineSt" +
      "ate_Missed\020\001\022*\n&k_ETourneyQueueDeadlineS" +
      "tate_ExpiredOK\020\002\022+\n\'k_ETourneyQueueDeadl" +
      "ineState_SeekingBye\020\003\0222\n.k_ETourneyQueue" +
      "DeadlineState_EligibleForRefund\020\004\022,\n\037k_E" +
      "TourneyQueueDeadlineState_NA\020\377\377\377\377\377\377\377\377\377\001\022" +
      "-\n)k_ETourneyQueueDeadlineState_Expiring" +
      "Soon\020e*\327\005\n\rEMatchOutcome\022\033\n\027k_EMatchOutc" +
      "ome_Unknown\020\000\022\036\n\032k_EMatchOutcome_RadVict" +
      "ory\020\002\022\037\n\033k_EMatchOutcome_DireVictory\020\003\022\"" +
      "\n\036k_EMatchOutcome_NeutralVictory\020\004\022 \n\034k_" +
      "EMatchOutcome_NoTeamWinner\020\005\022\"\n\036k_EMatch" +
      "Outcome_Custom1Victory\020\006\022\"\n\036k_EMatchOutc" +
      "ome_Custom2Victory\020\007\022\"\n\036k_EMatchOutcome_" +
      "Custom3Victory\020\010\022\"\n\036k_EMatchOutcome_Cust" +
      "om4Victory\020\t\022\"\n\036k_EMatchOutcome_Custom5V" +
      "ictory\020\n\022\"\n\036k_EMatchOutcome_Custom6Victo" +
      "ry\020\013\022\"\n\036k_EMatchOutcome_Custom7Victory\020\014" +
      "\022\"\n\036k_EMatchOutcome_Custom8Victory\020\r\0223\n/" +
      "k_EMatchOutcome_NotScored_PoorNetworkCon" +
      "ditions\020@\022$\n k_EMatchOutcome_NotScored_L" +
      "eaver\020A\022)\n%k_EMatchOutcome_NotScored_Ser" +
      "verCrash\020B\022*\n&k_EMatchOutcome_NotScored_" +
      "NeverStarted\020C\022&\n\"k_EMatchOutcome_NotSco" +
      "red_Canceled\020D\022(\n$k_EMatchOutcome_NotSco" +
      "red_Suspicious\020E*\206\001\n\tELaneType\022\025\n\021LANE_T" +
      "YPE_UNKNOWN\020\000\022\022\n\016LANE_TYPE_SAFE\020\001\022\021\n\rLAN" +
      "E_TYPE_OFF\020\002\022\021\n\rLANE_TYPE_MID\020\003\022\024\n\020LANE_" +
      "TYPE_JUNGLE\020\004\022\022\n\016LANE_TYPE_ROAM\020\005*\333\005\n\nEB" +
      "adgeType\022\030\n\024k_EBadgeType_Invalid\020\000\022\034\n\030k_" +
      "EBadgeType_TI7_Midweek\020\001\022\033\n\027k_EBadgeType" +
      "_TI7_Finals\020\002\022\035\n\031k_EBadgeType_TI7_AllEve" +
      "nt\020\003\022\034\n\030k_EBadgeType_TI8_Midweek\020\004\022\033\n\027k_" +
      "EBadgeType_TI8_Finals\020\005\022\035\n\031k_EBadgeType_" +
      "TI8_AllEvent\020\006\022\025\n\021k_EBadgeType_TI10\020\007\022\"\n" +
      "\036k_EBadgeType_TI11_PlayoffsDay1\020\010\022\"\n\036k_E" +
      "BadgeType_TI11_PlayoffsDay2\020\t\022\"\n\036k_EBadg" +
      "eType_TI11_PlayoffsDay3\020\n\022\"\n\036k_EBadgeTyp" +
      "e_TI11_PlayoffsDay4\020\013\022#\n\037k_EBadgeType_TI" +
      "11_FinalsWeekend\020\014\022\"\n\036k_EBadgeType_TI12_" +
      "PlayoffsDay1\020\r\022\"\n\036k_EBadgeType_TI12_Play" +
      "offsDay2\020\016\022\"\n\036k_EBadgeType_TI12_Playoffs" +
      "Day3\020\017\022#\n\037k_EBadgeType_TI12_FinalsWeeken",
      "d\020\020\022\035\n\031k_EBadgeType_TI12_Special\020\021\022 \n\034k_" +
      "EBadgeType_TI13_FinalsDay1\020\022\022 \n\034k_EBadge" +
      "Type_TI13_FinalsDay2\020\023\022 \n\034k_EBadgeType_T" +
      "I13_FinalsDay3\020\024\022\035\n\031k_EBadgeType_TI13_Sp" +
      "ecial\020\025*\324\001\n\rELeagueStatus\022\027\n\023LEAGUE_STAT" +
      "US_UNSET\020\000\022\035\n\031LEAGUE_STATUS_UNSUBMITTED\020" +
      "\001\022\033\n\027LEAGUE_STATUS_SUBMITTED\020\002\022\032\n\026LEAGUE" +
      "_STATUS_ACCEPTED\020\003\022\032\n\026LEAGUE_STATUS_REJE" +
      "CTED\020\004\022\033\n\027LEAGUE_STATUS_CONCLUDED\020\005\022\031\n\025L" +
      "EAGUE_STATUS_DELETED\020\006*\262\001\n\rELeagueRegion" +
      "\022\027\n\023LEAGUE_REGION_UNSET\020\000\022\024\n\020LEAGUE_REGI" +
      "ON_NA\020\001\022\024\n\020LEAGUE_REGION_SA\020\002\022\025\n\021LEAGUE_" +
      "REGION_WEU\020\003\022\025\n\021LEAGUE_REGION_EEU\020\004\022\027\n\023L" +
      "EAGUE_REGION_CHINA\020\005\022\025\n\021LEAGUE_REGION_SE" +
      "A\020\006*\254\002\n\013ELeagueTier\022\025\n\021LEAGUE_TIER_UNSET" +
      "\020\000\022\027\n\023LEAGUE_TIER_AMATEUR\020\001\022\034\n\030LEAGUE_TI" +
      "ER_PROFESSIONAL\020\002\022\025\n\021LEAGUE_TIER_MINOR\020\003" +
      "\022\025\n\021LEAGUE_TIER_MAJOR\020\004\022\035\n\031LEAGUE_TIER_I" +
      "NTERNATIONAL\020\005\022\035\n\031LEAGUE_TIER_DPC_QUALIF" +
      "IER\020\006\022$\n LEAGUE_TIER_DPC_LEAGUE_QUALIFIE" +
      "R\020\007\022\032\n\026LEAGUE_TIER_DPC_LEAGUE\020\010\022!\n\035LEAGU" +
      "E_TIER_DPC_LEAGUE_FINALS\020\t*|\n\023ELeagueTie" +
      "rCategory\022 \n\034LEAGUE_TIER_CATEGORY_AMATEU" +
      "R\020\001\022%\n!LEAGUE_TIER_CATEGORY_PROFESSIONAL" +
      "\020\002\022\034\n\030LEAGUE_TIER_CATEGORY_DPC\020\003*[\n\017ELea" +
      "gueDivision\022\031\n\025LEAGUE_DIVISION_UNSET\020\000\022\025" +
      "\n\021LEAGUE_DIVISION_I\020\001\022\026\n\022LEAGUE_DIVISION" +
      "_II\020\002*\253\001\n\030ELeagueBroadcastProvider\022\034\n\030LE" +
      "AGUE_BROADCAST_UNKNOWN\020\000\022\032\n\026LEAGUE_BROAD" +
      "CAST_STEAM\020\001\022\033\n\027LEAGUE_BROADCAST_TWITCH\020" +
      "\002\022\034\n\030LEAGUE_BROADCAST_YOUTUBE\020\003\022\032\n\026LEAGU" +
      "E_BROADCAST_OTHER\020d*\206\001\n\014ELeaguePhase\022\026\n\022" +
      "LEAGUE_PHASE_UNSET\020\000\022#\n\037LEAGUE_PHASE_REG" +
      "IONAL_QUALIFIER\020\001\022\034\n\030LEAGUE_PHASE_GROUP_" +
      "STAGE\020\002\022\033\n\027LEAGUE_PHASE_MAIN_EVENT\020\003*\332\016\n" +
      "\022ELeagueAuditAction\022\037\n\033LEAGUE_AUDIT_ACTI" +
      "ON_INVALID\020\000\022%\n!LEAGUE_AUDIT_ACTION_LEAG" +
      "UE_CREATE\020\001\022#\n\037LEAGUE_AUDIT_ACTION_LEAGU" +
      "E_EDIT\020\002\022%\n!LEAGUE_AUDIT_ACTION_LEAGUE_D" +
      "ELETE\020\003\022(\n$LEAGUE_AUDIT_ACTION_LEAGUE_AD" +
      "MIN_ADD\020\004\022+\n\'LEAGUE_AUDIT_ACTION_LEAGUE_" +
      "ADMIN_REVOKE\020\005\022,\n(LEAGUE_AUDIT_ACTION_LE" +
      "AGUE_ADMIN_PROMOTE\020\006\022)\n%LEAGUE_AUDIT_ACT" +
      "ION_LEAGUE_STREAM_ADD\020\007\022,\n(LEAGUE_AUDIT_" +
      "ACTION_LEAGUE_STREAM_REMOVE\020\010\022,\n(LEAGUE_" +
      "AUDIT_ACTION_LEAGUE_IMAGE_UPDATED\020\t\022,\n(L" +
      "EAGUE_AUDIT_ACTION_LEAGUE_MESSAGE_ADDED\020" +
      "\n\022(\n$LEAGUE_AUDIT_ACTION_LEAGUE_SUBMITTE" +
      "D\020\013\022-\n)LEAGUE_AUDIT_ACTION_LEAGUE_SET_PR" +
      "IZE_POOL\020\014\0222\n.LEAGUE_AUDIT_ACTION_LEAGUE" +
      "_ADD_PRIZE_POOL_ITEM\020\r\0225\n1LEAGUE_AUDIT_A" +
      "CTION_LEAGUE_REMOVE_PRIZE_POOL_ITEM\020\016\022*\n" +
      "&LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_START\020" +
      "\017\022(\n$LEAGUE_AUDIT_ACTION_LEAGUE_MATCH_EN" +
      "D\020\020\022/\n+LEAGUE_AUDIT_ACTION_LEAGUE_ADD_IN" +
      "VITED_TEAM\020\021\0222\n.LEAGUE_AUDIT_ACTION_LEAG" +
      "UE_REMOVE_INVITED_TEAM\020\022\022-\n)LEAGUE_AUDIT" +
      "_ACTION_LEAGUE_STATUS_CHANGED\020\023\022*\n&LEAGU" +
      "E_AUDIT_ACTION_LEAGUE_STREAM_EDIT\020\024\022(\n$L" +
      "EAGUE_AUDIT_ACTION_LEAGUE_TEAM_SWAP\020\025\022(\n" +
      "$LEAGUE_AUDIT_ACTION_NODEGROUP_CREATE\020d\022" +
      ")\n%LEAGUE_AUDIT_ACTION_NODEGROUP_DESTROY" +
      "\020e\022*\n&LEAGUE_AUDIT_ACTION_NODEGROUP_ADD_" +
      "TEAM\020f\022-\n)LEAGUE_AUDIT_ACTION_NODEGROUP_" +
      "REMOVE_TEAM\020g\022/\n+LEAGUE_AUDIT_ACTION_NOD" +
      "EGROUP_SET_ADVANCING\020h\022&\n\"LEAGUE_AUDIT_A" +
      "CTION_NODEGROUP_EDIT\020i\022*\n&LEAGUE_AUDIT_A" +
      "CTION_NODEGROUP_POPULATE\020j\022+\n\'LEAGUE_AUD" +
      "IT_ACTION_NODEGROUP_COMPLETED\020k\0229\n5LEAGU" +
      "E_AUDIT_ACTION_NODEGROUP_SET_SECONDARY_A" +
      "DVANCING\020l\0228\n4LEAGUE_AUDIT_ACTION_NODEGR" +
      "OUP_SET_TERTIARY_ADVANCING\020m\022$\n\037LEAGUE_A" +
      "UDIT_ACTION_NODE_CREATE\020\310\001\022%\n LEAGUE_AUD" +
      "IT_ACTION_NODE_DESTROY\020\311\001\022(\n#LEAGUE_AUDI" +
      "T_ACTION_NODE_AUTOCREATE\020\312\001\022&\n!LEAGUE_AU" +
      "DIT_ACTION_NODE_SET_TEAM\020\313\001\022+\n&LEAGUE_AU" +
      "DIT_ACTION_NODE_SET_SERIES_ID\020\314\001\022+\n&LEAG" +
      "UE_AUDIT_ACTION_NODE_SET_ADVANCING\020\315\001\022&\n" +
      "!LEAGUE_AUDIT_ACTION_NODE_SET_TIME\020\316\001\022-\n" +
      "(LEAGUE_AUDIT_ACTION_NODE_MATCH_COMPLETE" +
      "D\020\317\001\022\'\n\"LEAGUE_AUDIT_ACTION_NODE_COMPLET" +
      "ED\020\320\001\022\"\n\035LEAGUE_AUDIT_ACTION_NODE_EDIT\020\321" +
      "\001*\347\013\n\024DOTA_COMBATLOG_TYPES\022#\n\026DOTA_COMBA" +
      "TLOG_INVALID\020\377\377\377\377\377\377\377\377\377\001\022\031\n\025DOTA_COMBATLO" +
      "G_DAMAGE\020\000\022\027\n\023DOTA_COMBATLOG_HEAL\020\001\022\037\n\033D" +
      "OTA_COMBATLOG_MODIFIER_ADD\020\002\022\"\n\036DOTA_COM" +
      "BATLOG_MODIFIER_REMOVE\020\003\022\030\n\024DOTA_COMBATL" +
      "OG_DEATH\020\004\022\032\n\026DOTA_COMBATLOG_ABILITY\020\005\022\027" +
      "\n\023DOTA_COMBATLOG_ITEM\020\006\022\033\n\027DOTA_COMBATLO" +
      "G_LOCATION\020\007\022\027\n\023DOTA_COMBATLOG_GOLD\020\010\022\035\n" +
      "\031DOTA_COMBATLOG_GAME_STATE\020\t\022\025\n\021DOTA_COM" +
      "BATLOG_XP\020\n\022\033\n\027DOTA_COMBATLOG_PURCHASE\020\013" +
      "\022\032\n\026DOTA_COMBATLOG_BUYBACK\020\014\022\"\n\036DOTA_COM" +
      "BATLOG_ABILITY_TRIGGER\020\r\022\036\n\032DOTA_COMBATL" +
      "OG_PLAYERSTATS\020\016\022\034\n\030DOTA_COMBATLOG_MULTI" +
      "KILL\020\017\022\035\n\031DOTA_COMBATLOG_KILLSTREAK\020\020\022%\n" +
      "!DOTA_COMBATLOG_TEAM_BUILDING_KILL\020\021\022\036\n\032" +
      "DOTA_COMBATLOG_FIRST_BLOOD\020\022\022\'\n#DOTA_COM" +
      "BATLOG_MODIFIER_STACK_EVENT\020\023\022%\n!DOTA_CO" +
      "MBATLOG_NEUTRAL_CAMP_STACK\020\024\022\036\n\032DOTA_COM" +
      "BATLOG_PICKUP_RUNE\020\025\022%\n!DOTA_COMBATLOG_R" +
      "EVEALED_INVISIBLE\020\026\022\035\n\031DOTA_COMBATLOG_HE" +
      "RO_SAVED\020\027\022 \n\034DOTA_COMBATLOG_MANA_RESTOR" +
      "ED\020\030\022\037\n\033DOTA_COMBATLOG_HERO_LEVELUP\020\031\022#\n" +
      "\037DOTA_COMBATLOG_BOTTLE_HEAL_ALLY\020\032\022 \n\034DO" +
      "TA_COMBATLOG_ENDGAME_STATS\020\033\022$\n DOTA_COM" +
      "BATLOG_INTERRUPT_CHANNEL\020\034\022\036\n\032DOTA_COMBA" +
      "TLOG_ALLIED_GOLD\020\035\022\036\n\032DOTA_COMBATLOG_AEG" +
      "IS_TAKEN\020\036\022\036\n\032DOTA_COMBATLOG_MANA_DAMAGE" +
      "\020\037\022,\n(DOTA_COMBATLOG_PHYSICAL_DAMAGE_PRE" +
      "VENTED\020 \022 \n\034DOTA_COMBATLOG_UNIT_SUMMONED" +
      "\020!\022\037\n\033DOTA_COMBATLOG_ATTACK_EVADE\020\"\022\033\n\027D" +
      "OTA_COMBATLOG_TREE_CUT\020#\022\"\n\036DOTA_COMBATL" +
      "OG_SUCCESSFUL_SCAN\020$\022!\n\035DOTA_COMBATLOG_E" +
      "ND_KILLSTREAK\020%\022$\n DOTA_COMBATLOG_BLOODS" +
      "TONE_CHARGE\020&\022\"\n\036DOTA_COMBATLOG_CRITICAL" +
      "_DAMAGE\020\'\022\037\n\033DOTA_COMBATLOG_SPELL_ABSORB" +
      "\020(\022\"\n\036DOTA_COMBATLOG_UNIT_TELEPORTED\020)\022#" +
      "\n\037DOTA_COMBATLOG_KILL_EATER_EVENT\020*\022&\n\"D" +
      "OTA_COMBATLOG_NEUTRAL_ITEM_EARNED\020+*u\n\020E" +
      "DPCFavoriteType\022\025\n\021FAVORITE_TYPE_ALL\020\000\022\030" +
      "\n\024FAVORITE_TYPE_PLAYER\020\001\022\026\n\022FAVORITE_TYP" +
      "E_TEAM\020\002\022\030\n\024FAVORITE_TYPE_LEAGUE\020\003*\250\004\n\024E" +
      "DPCPushNotification\022(\n$DPC_PUSH_NOTIFICA" +
      "TION_MATCH_STARTING\020\001\022*\n&DPC_PUSH_NOTIFI" +
      "CATION_PLAYER_LEFT_TEAM\020\n\022,\n(DPC_PUSH_NO" +
      "TIFICATION_PLAYER_JOINED_TEAM\020\013\0225\n1DPC_P" +
      "USH_NOTIFICATION_PLAYER_JOINED_TEAM_AS_C" +
      "OACH\020\014\0223\n/DPC_PUSH_NOTIFICATION_PLAYER_L" +
      "EFT_TEAM_AS_COACH\020\r\022\'\n#DPC_PUSH_NOTIFICA" +
      "TION_LEAGUE_RESULT\020\024\0226\n2DPC_PUSH_NOTIFIC" +
      "ATION_PREDICTION_MATCHES_AVAILABLE\020\036\022+\n\'" +
      "DPC_PUSH_NOTIFICATION_PREDICTION_RESULT\020" +
      "\037\0220\n,DPC_PUSH_NOTIFICATION_FANTASY_PLAYE" +
      "R_CLEARED\020(\022/\n+DPC_PUSH_NOTIFICATION_FAN" +
      "TASY_DAILY_SUMMARY\020)\022/\n+DPC_PUSH_NOTIFIC" +
      "ATION_FANTASY_FINAL_RESULTS\020**Y\n\025EEventA" +
      "ctionScoreMode\022\037\n\033k_eEventActionScoreMod" +
      "e_Add\020\000\022\037\n\033k_eEventActionScoreMode_Min\020\001" +
      "*\316\002\n\033EPlayerChallengeHistoryType\022)\n%k_EP" +
      "layerChallengeHistoryType_Invalid\020\000\022+\n\'k" +
      "_EPlayerChallengeHistoryType_KillEater\020\001" +
      "\022/\n+k_EPlayerChallengeHistoryType_DotaPl" +
      "usRelic\020\002\022=\n9k_EPlayerChallengeHistoryTy" +
      "pe_DotaPlusHeroPlayerChallenge\020\003\0226\n2k_EP" +
      "layerChallengeHistoryType_InGameEventCha" +
      "llenge\020\004\022/\n+k_EPlayerChallengeHistoryTyp" +
      "e_GuildContract\020\005*\206\002\n\026EOverwatchReportRe" +
      "ason\022$\n k_EOverwatchReportReason_Unknown" +
      "\020\000\022%\n!k_EOverwatchReportReason_Cheating\020" +
      "\001\022$\n k_EOverwatchReportReason_Feeding\020\002\022" +
      "%\n!k_EOverwatchReportReason_Griefing\020\003\022\'" +
      "\n#k_EOverwatchReportReason_Suspicious\020\004\022" +
      ")\n%k_EOverwatchReportReason_AbilityAbuse" +
      "\020\005*\265\001\n\021ECandyShopUpgrade\022\'\n\032k_ECandyShop" +
      "UpgradeInvalid\020\377\377\377\377\377\377\377\377\377\001\022%\n!k_ECandySho" +
      "pUpgrade_InventorySize\020\000\022#\n\037k_ECandyShop" +
      "Upgrade_RewardShelf\020\001\022+\n\'k_ECandyShopUpg" +
      "rade_ExtraExchangeRecipe\020\002B/\n\035com.nickbo" +
      "oher.protos.gc.dotaB\016MsgSharedEnums"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_dota2_CDOTAClientHardwareSpecs_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dota2_CDOTAClientHardwareSpecs_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CDOTAClientHardwareSpecs_descriptor,
        new java.lang.String[] { "LogicalProcessors", "CpuCyclesPerSecond", "TotalPhysicalMemory", "Is64BitOs", "UploadMeasurement", "PreferNotHost", "Crc", });
    internal_static_dota2_CDOTASaveGame_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dota2_CDOTASaveGame_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CDOTASaveGame_descriptor,
        new java.lang.String[] { "MatchId", "SaveTime", "Players", "SaveInstances", });
    internal_static_dota2_CDOTASaveGame_Player_descriptor =
      internal_static_dota2_CDOTASaveGame_descriptor.getNestedTypes().get(0);
    internal_static_dota2_CDOTASaveGame_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CDOTASaveGame_Player_descriptor,
        new java.lang.String[] { "Team", "Name", "Hero", });
    internal_static_dota2_CDOTASaveGame_SaveInstance_descriptor =
      internal_static_dota2_CDOTASaveGame_descriptor.getNestedTypes().get(1);
    internal_static_dota2_CDOTASaveGame_SaveInstance_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CDOTASaveGame_SaveInstance_descriptor,
        new java.lang.String[] { "GameTime", "Team1Score", "Team2Score", "PlayerPositions", "SaveId", "SaveTime", });
    internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor =
      internal_static_dota2_CDOTASaveGame_SaveInstance_descriptor.getNestedTypes().get(0);
    internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CDOTASaveGame_SaveInstance_PlayerPositions_descriptor,
        new java.lang.String[] { "X", "Y", });
    internal_static_dota2_CMsgDOTACombatLogEntry_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_dota2_CMsgDOTACombatLogEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CMsgDOTACombatLogEntry_descriptor,
        new java.lang.String[] { "Type", "TargetName", "TargetSourceName", "AttackerName", "DamageSourceName", "InflictorName", "IsAttackerIllusion", "IsAttackerHero", "IsTargetIllusion", "IsTargetHero", "IsVisibleRadiant", "IsVisibleDire", "Value", "Health", "Timestamp", "StunDuration", "SlowDuration", "IsAbilityToggleOn", "IsAbilityToggleOff", "AbilityLevel", "LocationX", "LocationY", "GoldReason", "TimestampRaw", "ModifierDuration", "XpReason", "LastHits", "AttackerTeam", "TargetTeam", "ObsWardsPlaced", "AssistPlayer0", "AssistPlayer1", "AssistPlayer2", "AssistPlayer3", "StackCount", "HiddenModifier", "IsTargetBuilding", "NeutralCampType", "RuneType", "AssistPlayers", "IsHealSave", "IsUltimateAbility", "AttackerHeroLevel", "TargetHeroLevel", "Xpm", "Gpm", "EventLocation", "TargetIsSelf", "DamageType", "InvisibilityModifier", "DamageCategory", "Networth", "BuildingType", "ModifierElapsedDuration", "SilenceModifier", "HealFromLifesteal", "ModifierPurged", "SpellEvaded", "MotionControllerModifier", "LongRangeKill", "ModifierPurgeAbility", "ModifierPurgeNpc", "RootModifier", "TotalUnitDeathCount", "AuraModifier", "ArmorDebuffModifier", "NoPhysicalDamageModifier", "ModifierAbility", "ModifierHidden", "InflictorIsStolenAbility", "KillEaterEvent", "UnitStatusLabel", "SpellGeneratedAttack", "AtNightTime", "AttackerHasScepter", "NeutralCampTeam", "RegeneratedHealth", "WillReincarnate", "UsesCharges", });
    internal_static_dota2_CMsgPendingEventAward_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_dota2_CMsgPendingEventAward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dota2_CMsgPendingEventAward_descriptor,
        new java.lang.String[] { "EventId", "ActionId", "NumToGrant", "ScoreMode", "AuditAction", "AuditData", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
