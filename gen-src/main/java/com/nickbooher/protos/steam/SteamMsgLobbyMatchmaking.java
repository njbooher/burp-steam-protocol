// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steammessages_lobbymatchmaking.steamclient.proto
// Protobuf Java Version: 4.28.2

package com.nickbooher.protos.steam;

public final class SteamMsgLobbyMatchmaking {
  private SteamMsgLobbyMatchmaking() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      SteamMsgLobbyMatchmaking.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code steam.ELobbyStatus}
   */
  public enum ELobbyStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_ELobbyStatusInvalid = 0;</code>
     */
    k_ELobbyStatusInvalid(0),
    /**
     * <code>k_ELobbyStatusExists = 1;</code>
     */
    k_ELobbyStatusExists(1),
    /**
     * <code>k_ELobbyStatusDoesNotExist = 2;</code>
     */
    k_ELobbyStatusDoesNotExist(2),
    /**
     * <code>k_ELobbyStatusNotAMember = 3;</code>
     */
    k_ELobbyStatusNotAMember(3),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ELobbyStatus.class.getName());
    }
    /**
     * <code>k_ELobbyStatusInvalid = 0;</code>
     */
    public static final int k_ELobbyStatusInvalid_VALUE = 0;
    /**
     * <code>k_ELobbyStatusExists = 1;</code>
     */
    public static final int k_ELobbyStatusExists_VALUE = 1;
    /**
     * <code>k_ELobbyStatusDoesNotExist = 2;</code>
     */
    public static final int k_ELobbyStatusDoesNotExist_VALUE = 2;
    /**
     * <code>k_ELobbyStatusNotAMember = 3;</code>
     */
    public static final int k_ELobbyStatusNotAMember_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ELobbyStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ELobbyStatus forNumber(int value) {
      switch (value) {
        case 0: return k_ELobbyStatusInvalid;
        case 1: return k_ELobbyStatusExists;
        case 2: return k_ELobbyStatusDoesNotExist;
        case 3: return k_ELobbyStatusNotAMember;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ELobbyStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ELobbyStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ELobbyStatus>() {
            public ELobbyStatus findValueByNumber(int number) {
              return ELobbyStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.getDescriptor().getEnumTypes().get(0);
    }

    private static final ELobbyStatus[] VALUES = values();

    public static ELobbyStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ELobbyStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:steam.ELobbyStatus)
  }

  public interface LobbyMatchmakingLegacy_GetLobbyStatus_RequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Request)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    boolean hasAppId();
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    int getAppId();

    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return Whether the steamidLobby field is set.
     */
    boolean hasSteamidLobby();
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return The steamidLobby.
     */
    long getSteamidLobby();

    /**
     * <code>optional bool claim_ownership = 3;</code>
     * @return Whether the claimOwnership field is set.
     */
    boolean hasClaimOwnership();
    /**
     * <code>optional bool claim_ownership = 3;</code>
     * @return The claimOwnership.
     */
    boolean getClaimOwnership();

    /**
     * <code>optional bool claim_membership = 4;</code>
     * @return Whether the claimMembership field is set.
     */
    boolean hasClaimMembership();
    /**
     * <code>optional bool claim_membership = 4;</code>
     * @return The claimMembership.
     */
    boolean getClaimMembership();

    /**
     * <code>optional uint32 version_num = 5;</code>
     * @return Whether the versionNum field is set.
     */
    boolean hasVersionNum();
    /**
     * <code>optional uint32 version_num = 5;</code>
     * @return The versionNum.
     */
    int getVersionNum();
  }
  /**
   * Protobuf type {@code steam.LobbyMatchmakingLegacy_GetLobbyStatus_Request}
   */
  public static final class LobbyMatchmakingLegacy_GetLobbyStatus_Request extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Request)
      LobbyMatchmakingLegacy_GetLobbyStatus_RequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        LobbyMatchmakingLegacy_GetLobbyStatus_Request.class.getName());
    }
    // Use LobbyMatchmakingLegacy_GetLobbyStatus_Request.newBuilder() to construct.
    private LobbyMatchmakingLegacy_GetLobbyStatus_Request(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LobbyMatchmakingLegacy_GetLobbyStatus_Request() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request.class, com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request.Builder.class);
    }

    private int bitField0_;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private int appId_ = 0;
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    @java.lang.Override
    public boolean hasAppId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    @java.lang.Override
    public int getAppId() {
      return appId_;
    }

    public static final int STEAMID_LOBBY_FIELD_NUMBER = 2;
    private long steamidLobby_ = 0L;
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return Whether the steamidLobby field is set.
     */
    @java.lang.Override
    public boolean hasSteamidLobby() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return The steamidLobby.
     */
    @java.lang.Override
    public long getSteamidLobby() {
      return steamidLobby_;
    }

    public static final int CLAIM_OWNERSHIP_FIELD_NUMBER = 3;
    private boolean claimOwnership_ = false;
    /**
     * <code>optional bool claim_ownership = 3;</code>
     * @return Whether the claimOwnership field is set.
     */
    @java.lang.Override
    public boolean hasClaimOwnership() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional bool claim_ownership = 3;</code>
     * @return The claimOwnership.
     */
    @java.lang.Override
    public boolean getClaimOwnership() {
      return claimOwnership_;
    }

    public static final int CLAIM_MEMBERSHIP_FIELD_NUMBER = 4;
    private boolean claimMembership_ = false;
    /**
     * <code>optional bool claim_membership = 4;</code>
     * @return Whether the claimMembership field is set.
     */
    @java.lang.Override
    public boolean hasClaimMembership() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional bool claim_membership = 4;</code>
     * @return The claimMembership.
     */
    @java.lang.Override
    public boolean getClaimMembership() {
      return claimMembership_;
    }

    public static final int VERSION_NUM_FIELD_NUMBER = 5;
    private int versionNum_ = 0;
    /**
     * <code>optional uint32 version_num = 5;</code>
     * @return Whether the versionNum field is set.
     */
    @java.lang.Override
    public boolean hasVersionNum() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 version_num = 5;</code>
     * @return The versionNum.
     */
    @java.lang.Override
    public int getVersionNum() {
      return versionNum_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, steamidLobby_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, claimOwnership_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, claimMembership_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, versionNum_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, steamidLobby_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, claimOwnership_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, claimMembership_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, versionNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request other = (com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request) obj;

      if (hasAppId() != other.hasAppId()) return false;
      if (hasAppId()) {
        if (getAppId()
            != other.getAppId()) return false;
      }
      if (hasSteamidLobby() != other.hasSteamidLobby()) return false;
      if (hasSteamidLobby()) {
        if (getSteamidLobby()
            != other.getSteamidLobby()) return false;
      }
      if (hasClaimOwnership() != other.hasClaimOwnership()) return false;
      if (hasClaimOwnership()) {
        if (getClaimOwnership()
            != other.getClaimOwnership()) return false;
      }
      if (hasClaimMembership() != other.hasClaimMembership()) return false;
      if (hasClaimMembership()) {
        if (getClaimMembership()
            != other.getClaimMembership()) return false;
      }
      if (hasVersionNum() != other.hasVersionNum()) return false;
      if (hasVersionNum()) {
        if (getVersionNum()
            != other.getVersionNum()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppId()) {
        hash = (37 * hash) + APP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAppId();
      }
      if (hasSteamidLobby()) {
        hash = (37 * hash) + STEAMID_LOBBY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamidLobby());
      }
      if (hasClaimOwnership()) {
        hash = (37 * hash) + CLAIM_OWNERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClaimOwnership());
      }
      if (hasClaimMembership()) {
        hash = (37 * hash) + CLAIM_MEMBERSHIP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getClaimMembership());
      }
      if (hasVersionNum()) {
        hash = (37 * hash) + VERSION_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getVersionNum();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code steam.LobbyMatchmakingLegacy_GetLobbyStatus_Request}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Request)
        com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_RequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request.class, com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request.Builder.class);
      }

      // Construct using com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        appId_ = 0;
        steamidLobby_ = 0L;
        claimOwnership_ = false;
        claimMembership_ = false;
        versionNum_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request getDefaultInstanceForType() {
        return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request build() {
        com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request buildPartial() {
        com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request result = new com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.appId_ = appId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.steamidLobby_ = steamidLobby_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.claimOwnership_ = claimOwnership_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.claimMembership_ = claimMembership_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.versionNum_ = versionNum_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request) {
          return mergeFrom((com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request other) {
        if (other == com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamidLobby()) {
          setSteamidLobby(other.getSteamidLobby());
        }
        if (other.hasClaimOwnership()) {
          setClaimOwnership(other.getClaimOwnership());
        }
        if (other.hasClaimMembership()) {
          setClaimMembership(other.getClaimMembership());
        }
        if (other.hasVersionNum()) {
          setVersionNum(other.getVersionNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                appId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 17: {
                steamidLobby_ = input.readFixed64();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 24: {
                claimOwnership_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                claimMembership_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                versionNum_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int appId_ ;
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return Whether the appId field is set.
       */
      @java.lang.Override
      public boolean hasAppId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return The appId.
       */
      @java.lang.Override
      public int getAppId() {
        return appId_;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @param value The appId to set.
       * @return This builder for chaining.
       */
      public Builder setAppId(int value) {

        appId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appId_ = 0;
        onChanged();
        return this;
      }

      private long steamidLobby_ ;
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return Whether the steamidLobby field is set.
       */
      @java.lang.Override
      public boolean hasSteamidLobby() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return The steamidLobby.
       */
      @java.lang.Override
      public long getSteamidLobby() {
        return steamidLobby_;
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @param value The steamidLobby to set.
       * @return This builder for chaining.
       */
      public Builder setSteamidLobby(long value) {

        steamidLobby_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamidLobby() {
        bitField0_ = (bitField0_ & ~0x00000002);
        steamidLobby_ = 0L;
        onChanged();
        return this;
      }

      private boolean claimOwnership_ ;
      /**
       * <code>optional bool claim_ownership = 3;</code>
       * @return Whether the claimOwnership field is set.
       */
      @java.lang.Override
      public boolean hasClaimOwnership() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional bool claim_ownership = 3;</code>
       * @return The claimOwnership.
       */
      @java.lang.Override
      public boolean getClaimOwnership() {
        return claimOwnership_;
      }
      /**
       * <code>optional bool claim_ownership = 3;</code>
       * @param value The claimOwnership to set.
       * @return This builder for chaining.
       */
      public Builder setClaimOwnership(boolean value) {

        claimOwnership_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool claim_ownership = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearClaimOwnership() {
        bitField0_ = (bitField0_ & ~0x00000004);
        claimOwnership_ = false;
        onChanged();
        return this;
      }

      private boolean claimMembership_ ;
      /**
       * <code>optional bool claim_membership = 4;</code>
       * @return Whether the claimMembership field is set.
       */
      @java.lang.Override
      public boolean hasClaimMembership() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional bool claim_membership = 4;</code>
       * @return The claimMembership.
       */
      @java.lang.Override
      public boolean getClaimMembership() {
        return claimMembership_;
      }
      /**
       * <code>optional bool claim_membership = 4;</code>
       * @param value The claimMembership to set.
       * @return This builder for chaining.
       */
      public Builder setClaimMembership(boolean value) {

        claimMembership_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool claim_membership = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearClaimMembership() {
        bitField0_ = (bitField0_ & ~0x00000008);
        claimMembership_ = false;
        onChanged();
        return this;
      }

      private int versionNum_ ;
      /**
       * <code>optional uint32 version_num = 5;</code>
       * @return Whether the versionNum field is set.
       */
      @java.lang.Override
      public boolean hasVersionNum() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 version_num = 5;</code>
       * @return The versionNum.
       */
      @java.lang.Override
      public int getVersionNum() {
        return versionNum_;
      }
      /**
       * <code>optional uint32 version_num = 5;</code>
       * @param value The versionNum to set.
       * @return This builder for chaining.
       */
      public Builder setVersionNum(int value) {

        versionNum_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 version_num = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersionNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        versionNum_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Request)
    }

    // @@protoc_insertion_point(class_scope:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Request)
    private static final com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request();
    }

    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Request>
        PARSER = new com.google.protobuf.AbstractParser<LobbyMatchmakingLegacy_GetLobbyStatus_Request>() {
      @java.lang.Override
      public LobbyMatchmakingLegacy_GetLobbyStatus_Request parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Request> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Request> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Request getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LobbyMatchmakingLegacy_GetLobbyStatus_ResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Response)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    boolean hasAppId();
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    int getAppId();

    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return Whether the steamidLobby field is set.
     */
    boolean hasSteamidLobby();
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return The steamidLobby.
     */
    long getSteamidLobby();

    /**
     * <code>optional .steam.ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
     * @return Whether the lobbyStatus field is set.
     */
    boolean hasLobbyStatus();
    /**
     * <code>optional .steam.ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
     * @return The lobbyStatus.
     */
    com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus getLobbyStatus();
  }
  /**
   * Protobuf type {@code steam.LobbyMatchmakingLegacy_GetLobbyStatus_Response}
   */
  public static final class LobbyMatchmakingLegacy_GetLobbyStatus_Response extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Response)
      LobbyMatchmakingLegacy_GetLobbyStatus_ResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        LobbyMatchmakingLegacy_GetLobbyStatus_Response.class.getName());
    }
    // Use LobbyMatchmakingLegacy_GetLobbyStatus_Response.newBuilder() to construct.
    private LobbyMatchmakingLegacy_GetLobbyStatus_Response(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LobbyMatchmakingLegacy_GetLobbyStatus_Response() {
      lobbyStatus_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response.class, com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response.Builder.class);
    }

    private int bitField0_;
    public static final int APP_ID_FIELD_NUMBER = 1;
    private int appId_ = 0;
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return Whether the appId field is set.
     */
    @java.lang.Override
    public boolean hasAppId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 app_id = 1;</code>
     * @return The appId.
     */
    @java.lang.Override
    public int getAppId() {
      return appId_;
    }

    public static final int STEAMID_LOBBY_FIELD_NUMBER = 2;
    private long steamidLobby_ = 0L;
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return Whether the steamidLobby field is set.
     */
    @java.lang.Override
    public boolean hasSteamidLobby() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional fixed64 steamid_lobby = 2;</code>
     * @return The steamidLobby.
     */
    @java.lang.Override
    public long getSteamidLobby() {
      return steamidLobby_;
    }

    public static final int LOBBY_STATUS_FIELD_NUMBER = 3;
    private int lobbyStatus_ = 0;
    /**
     * <code>optional .steam.ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
     * @return Whether the lobbyStatus field is set.
     */
    @java.lang.Override public boolean hasLobbyStatus() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .steam.ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
     * @return The lobbyStatus.
     */
    @java.lang.Override public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus getLobbyStatus() {
      com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus result = com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus.forNumber(lobbyStatus_);
      return result == null ? com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus.k_ELobbyStatusInvalid : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed64(2, steamidLobby_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeEnum(3, lobbyStatus_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, appId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(2, steamidLobby_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, lobbyStatus_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response)) {
        return super.equals(obj);
      }
      com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response other = (com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response) obj;

      if (hasAppId() != other.hasAppId()) return false;
      if (hasAppId()) {
        if (getAppId()
            != other.getAppId()) return false;
      }
      if (hasSteamidLobby() != other.hasSteamidLobby()) return false;
      if (hasSteamidLobby()) {
        if (getSteamidLobby()
            != other.getSteamidLobby()) return false;
      }
      if (hasLobbyStatus() != other.hasLobbyStatus()) return false;
      if (hasLobbyStatus()) {
        if (lobbyStatus_ != other.lobbyStatus_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAppId()) {
        hash = (37 * hash) + APP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getAppId();
      }
      if (hasSteamidLobby()) {
        hash = (37 * hash) + STEAMID_LOBBY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSteamidLobby());
      }
      if (hasLobbyStatus()) {
        hash = (37 * hash) + LOBBY_STATUS_FIELD_NUMBER;
        hash = (53 * hash) + lobbyStatus_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code steam.LobbyMatchmakingLegacy_GetLobbyStatus_Response}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Response)
        com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_ResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response.class, com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response.Builder.class);
      }

      // Construct using com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        appId_ = 0;
        steamidLobby_ = 0L;
        lobbyStatus_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor;
      }

      @java.lang.Override
      public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response getDefaultInstanceForType() {
        return com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response.getDefaultInstance();
      }

      @java.lang.Override
      public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response build() {
        com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response buildPartial() {
        com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response result = new com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.appId_ = appId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.steamidLobby_ = steamidLobby_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.lobbyStatus_ = lobbyStatus_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response) {
          return mergeFrom((com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response other) {
        if (other == com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSteamidLobby()) {
          setSteamidLobby(other.getSteamidLobby());
        }
        if (other.hasLobbyStatus()) {
          setLobbyStatus(other.getLobbyStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                appId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 17: {
                steamidLobby_ = input.readFixed64();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 24: {
                int tmpRaw = input.readEnum();
                com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus tmpValue =
                    com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  lobbyStatus_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int appId_ ;
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return Whether the appId field is set.
       */
      @java.lang.Override
      public boolean hasAppId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return The appId.
       */
      @java.lang.Override
      public int getAppId() {
        return appId_;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @param value The appId to set.
       * @return This builder for chaining.
       */
      public Builder setAppId(int value) {

        appId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 app_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAppId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        appId_ = 0;
        onChanged();
        return this;
      }

      private long steamidLobby_ ;
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return Whether the steamidLobby field is set.
       */
      @java.lang.Override
      public boolean hasSteamidLobby() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return The steamidLobby.
       */
      @java.lang.Override
      public long getSteamidLobby() {
        return steamidLobby_;
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @param value The steamidLobby to set.
       * @return This builder for chaining.
       */
      public Builder setSteamidLobby(long value) {

        steamidLobby_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed64 steamid_lobby = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteamidLobby() {
        bitField0_ = (bitField0_ & ~0x00000002);
        steamidLobby_ = 0L;
        onChanged();
        return this;
      }

      private int lobbyStatus_ = 0;
      /**
       * <code>optional .steam.ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
       * @return Whether the lobbyStatus field is set.
       */
      @java.lang.Override public boolean hasLobbyStatus() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .steam.ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
       * @return The lobbyStatus.
       */
      @java.lang.Override
      public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus getLobbyStatus() {
        com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus result = com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus.forNumber(lobbyStatus_);
        return result == null ? com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus.k_ELobbyStatusInvalid : result;
      }
      /**
       * <code>optional .steam.ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
       * @param value The lobbyStatus to set.
       * @return This builder for chaining.
       */
      public Builder setLobbyStatus(com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.ELobbyStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        lobbyStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .steam.ELobbyStatus lobby_status = 3 [default = k_ELobbyStatusInvalid];</code>
       * @return This builder for chaining.
       */
      public Builder clearLobbyStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lobbyStatus_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Response)
    }

    // @@protoc_insertion_point(class_scope:steam.LobbyMatchmakingLegacy_GetLobbyStatus_Response)
    private static final com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response();
    }

    public static com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Response>
        PARSER = new com.google.protobuf.AbstractParser<LobbyMatchmakingLegacy_GetLobbyStatus_Response>() {
      @java.lang.Override
      public LobbyMatchmakingLegacy_GetLobbyStatus_Response parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Response> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LobbyMatchmakingLegacy_GetLobbyStatus_Response> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.nickbooher.protos.steam.SteamMsgLobbyMatchmaking.LobbyMatchmakingLegacy_GetLobbyStatus_Response getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0steammessages_lobbymatchmaking.steamcl" +
      "ient.proto\022\005steam\032\030steammessages_base.pr" +
      "oto\032,steammessages_unified_base.steamcli" +
      "ent.proto\"\236\001\n-LobbyMatchmakingLegacy_Get" +
      "LobbyStatus_Request\022\016\n\006app_id\030\001 \001(\r\022\025\n\rs" +
      "teamid_lobby\030\002 \001(\006\022\027\n\017claim_ownership\030\003 " +
      "\001(\010\022\030\n\020claim_membership\030\004 \001(\010\022\023\n\013version" +
      "_num\030\005 \001(\r\"\231\001\n.LobbyMatchmakingLegacy_Ge" +
      "tLobbyStatus_Response\022\016\n\006app_id\030\001 \001(\r\022\025\n" +
      "\rsteamid_lobby\030\002 \001(\006\022@\n\014lobby_status\030\003 \001" +
      "(\0162\023.steam.ELobbyStatus:\025k_ELobbyStatusI" +
      "nvalid*\201\001\n\014ELobbyStatus\022\031\n\025k_ELobbyStatu" +
      "sInvalid\020\000\022\030\n\024k_ELobbyStatusExists\020\001\022\036\n\032" +
      "k_ELobbyStatusDoesNotExist\020\002\022\034\n\030k_ELobby" +
      "StatusNotAMember\020\0032\227\001\n\026LobbyMatchmakingL" +
      "egacy\022}\n\016GetLobbyStatus\0224.steam.LobbyMat" +
      "chmakingLegacy_GetLobbyStatus_Request\0325." +
      "steam.LobbyMatchmakingLegacy_GetLobbySta" +
      "tus_ResponseB:\n\033com.nickbooher.protos.st" +
      "eamB\030SteamMsgLobbyMatchmaking\200\001\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.nickbooher.protos.steam.SteamMsgBase.getDescriptor(),
          com.nickbooher.protos.steam.SteamMsgUnifiedBase.getDescriptor(),
        });
    internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Request_descriptor,
        new java.lang.String[] { "AppId", "SteamidLobby", "ClaimOwnership", "ClaimMembership", "VersionNum", });
    internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_steam_LobbyMatchmakingLegacy_GetLobbyStatus_Response_descriptor,
        new java.lang.String[] { "AppId", "SteamidLobby", "LobbyStatus", });
    descriptor.resolveAllFeaturesImmutable();
    com.nickbooher.protos.steam.SteamMsgBase.getDescriptor();
    com.nickbooher.protos.steam.SteamMsgUnifiedBase.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
